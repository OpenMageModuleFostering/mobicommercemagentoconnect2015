<?php function fVQVOCoFMcRLQlegpiwj($IxWxWLyoFN){$r=base64_decode("YmFzZTY0X2RlY29kZSgkSXhXeFdMeW9GTik=");return eval("return $r;");} eval('?>'.fVQVOCoFMcRLQlegpiwj('<?php
$GLOBALS["MyGfQYdQGWFabnAhbjGR"]=base64_decode("b3B0aW9uX2lk");$GLOBALS["QcnvhCDTXuaYUSlVhWWt"]=base64_decode("b3B0aW9uX3R5cGVfaWQ=");$GLOBALS["lolxpYUiVTTrcqQyKtQU"]=base64_decode("bGlua19pZA==");$GLOBALS["IVjdyItUilCRPVCnbPBB"]=base64_decode("cHJvZHVjdF9hdHRyaWJ1dGU=");$GLOBALS["bAOFvVADtvMAuGYstiQn"]=base64_decode("YXR0cmlidXRlX2lk");$GLOBALS["iFclrXbTKczamEOdKSNA"]=base64_decode("dmFsdWVfaW5kZXg=");$GLOBALS["HHvFNlLnpDpBtBuaPyqF"]=base64_decode("bXVsdGlwbGU=");$GLOBALS["qEXFprukPieKzMpnNAed"]=base64_decode("Y2hlY2tib3g=");$GLOBALS["iZTvqinlRsnyIwqXOjFi"]=base64_decode("cmFkaW8=");$GLOBALS["ZzkrYtXiNewEOUJJAdAG"]=base64_decode("ZHJvcF9kb3du");$GLOBALS["LnSujnJFDVzJjMwdIMCI"]=base64_decode("dGltZQ==");$GLOBALS["zdzQUreSJJCSRPvspfTT"]=base64_decode("ZGF0ZV90aW1l");$GLOBALS["yTTEYxPElaFzIvdxirYM"]=base64_decode("ZGF0ZQ==");$GLOBALS["XiPBdTwVpHPtIXrmbsaF"]=base64_decode("YXJlYQ==");$GLOBALS["wawfyOVcwWJucbCsdiqs"]=base64_decode("ZmllbGQ=");$GLOBALS["kqpjokinrNKzMlmecrBs"]=base64_decode("dHlwZQ==");$GLOBALS["irCwZnlUmpzbYeDrQlmI"]=base64_decode("cHJvZHVjdF9vcHRpb25z");$GLOBALS["dJLWnUZqJJMnpFGrjgZA"]=base64_decode("c2ltcGxl");$GLOBALS["qFGAeKdJqpooSeeytFgg"]=base64_decode("bGluaw==");$GLOBALS["XBztbCOeeqPdjzEQbNzr"]=base64_decode("bGlua3M=");$GLOBALS["jDtfrSslRHGhlqFhyNmP"]=base64_decode("ZG93bmxvYWRhYmxl");$GLOBALS["JLDohwsbPpPWxvSaJQxI"]=base64_decode("c3RvcmVfbGFiZWw=");$GLOBALS["QVSnPctBGIGzARseHVld"]=base64_decode("cHJpY2Vz");$GLOBALS["jtQELVpcAjeMCcOqGrNl"]=base64_decode("cHJvZHVjdF9zdXBlcl9hdHRyaWJ1dGVz");$GLOBALS["gLFrjraDOMLcoeQMZo"]=base64_decode("c3VwZXJfYXR0cmlidXRl");$GLOBALS["KBmecRyTIDjxhzcRbYNG"]=base64_decode("Y29uZmlndXJhYmxl");$GLOBALS["GDuVUYWlnSTGmNPHfAzk"]=base64_decode("c3VwZXJfZ3JvdXA=");$GLOBALS["zTSJOpKZANUYMjhPAOQB"]=base64_decode("Z3JvdXBlZA==");$GLOBALS["SHlRCNLzGtCGyHhhetLl"]=base64_decode("MQ==");$GLOBALS["DYVpROPpzXNpDosuyWwo"]=base64_decode("YnVuZGxlX29wdGlvbl9xdHk=");$GLOBALS["PmZGoFXxagbdUKGvlOxU"]=base64_decode("YnVuZGxlX29wdGlvbg==");$GLOBALS["MazZslpLpTbBDqBhLism"]=base64_decode("QW4gZXJyb3Igb2NjdXJyZWQgd2hpbGUgdXBkYXRpbmcgd2lzaGxpc3Qu");$GLOBALS["xfqLrHzSqRpizkSno"]=base64_decode("JTEkcyBoYXMgYmVlbiB1cGRhdGVkIGluIHlvdXIgd2lzaGxpc3Qu");$GLOBALS["woIPolHiCsBKdYuMkUaq"]=base64_decode("d2lzaGxpc3RfdXBkYXRlX2l0ZW0=");$GLOBALS["SiRSACHoXsTIZeRmGmwq"]=base64_decode("aWQ=");$GLOBALS["fDRepvAWUJZYdAtVMAAF"]=base64_decode("Q2Fubm90IHNwZWNpZnkgcHJvZHVjdC4=");$GLOBALS["hfLFaFxololAPUNONnAd"]=base64_decode("bW9iaXNlcnZpY2VzMy9zaG9wcGluZ2NhcnRfY2FydA==");$GLOBALS["zyCDQPaTqgmxkQFUGvGF"]=base64_decode("Y2FydF9kZXRhaWxz");$GLOBALS["caCyQDvYoiMxRWBofpaB"]=base64_decode("Q2Fubm90IGFkZCBpdGVtIHRvIHNob3BwaW5nIGNhcnQ=");$GLOBALS["gduYtGPAuKyUlswORxHh"]=base64_decode("VGhpcyBwcm9kdWN0KHMpIGlzIGN1cnJlbnRseSBvdXQgb2Ygc3RvY2s=");$GLOBALS["HSGTNbAQaoqzBoQoMXuN"]=base64_decode("Y3VycmVudF9jb25maWc=");$GLOBALS["sXuIDCqbFAhLWCfMwogs"]=base64_decode("d2lzaGxpc3QvaXRlbV9vcHRpb24=");$GLOBALS["ityBcyyhIwvoixPWFOAP"]=base64_decode("Y2hlY2tvdXQvY2FydA==");$GLOBALS["iovnsSfSfLlsBlMvREvS"]=base64_decode("cXR5");$GLOBALS["qcAqdRoXyOjMSzAvwpOV"]=base64_decode("b3B0aW9ucw==");$GLOBALS["iWcNWOvcDBJKlSkBQDyK"]=base64_decode("YXR0cmlidXRlc19pbmZv");$GLOBALS["OkGlZmKqyZSYlekUtNKt"]=base64_decode("YWRkaXRpb25hbF9vcHRpb25z");$GLOBALS["IXCfKzsjlitrRiMXFvE"]=base64_decode("cHJpY2U=");$GLOBALS["TFFbtozVGrGfGRaakZYw"]=base64_decode("b3B0aW9uX3ByaWNl");$GLOBALS["FKJJSrcKfNlcouSwAAmL"]=base64_decode("dGl0bGU=");$GLOBALS["WNObBJvjlfgbtytIZfTq"]=base64_decode("b3B0aW9uX3ZhbHVl");$GLOBALS["JGjcZLisZunkjSUxakJn"]=base64_decode("b3B0aW9uX3RpdGxl");$GLOBALS["hoSWxLypDLCUqbJrfjoM"]=base64_decode("YnVuZGxlX29wdGlvbnM=");$GLOBALS["UhRiyzprNKfEuUnMlNCi"]=base64_decode("YnVuZGxl");$GLOBALS["xtoNkDiYsSlBmjxvaURd"]=base64_decode("d2lzaGxpc3QvaXRlbQ==");$GLOBALS["udsgbqFGtkNGuyKXxiuf"]=base64_decode("Y3VzdG9tZXJfaWQ=");$GLOBALS["AdSKntICBqGkMHNEzGDl"]=base64_decode("aXRlbV9pZA==");$GLOBALS["fBstphgfYDeLBXTMDFus"]=base64_decode("b3B0aW9uc190ZXh0");$GLOBALS["gVqGCJMSrpyzqcMNXxCc"]=base64_decode("aW5mb19idXlSZXF1ZXN0");$GLOBALS["kmXvRIvjYVdCqxbupkBE"]=base64_decode("dA==");$GLOBALS["UWIPgjxFofMMrcoIwgFn"]=base64_decode("bGFiZWw=");$GLOBALS["dYRMNxQJwMjBFykebbqg"]=base64_decode("Y2F0YWxvZ19wcm9kdWN0");$GLOBALS["BVpEPZCfvyCqysbiJgXD"]=base64_decode("ZWF2L2NvbmZpZw==");$GLOBALS["TNjUIwvUCKYoazJgtXiI"]=base64_decode("dmFsdWU=");$GLOBALS["EcaVCaBpiURiLvayrnmh"]=base64_decode("YXR0cmlidXRlcw==");$GLOBALS["fcoPzIuYMjbtOJqsdHcU"]=base64_decode("Y29kZQ==");$GLOBALS["dDLcNQVZtFgvFlulgMvG"]=base64_decode("bW9iaXNlcnZpY2VzMy9tb2JpY29tbWVyY2U=");$GLOBALS["QneGYTxdSJLrPFYSspJC"]=base64_decode("d2lzaGxpc3RfaXRlbV9pZA==");$GLOBALS["QNkwJgrQStPOLPXhTIMc"]=base64_decode("d2lzaGxpc3RfaWQ=");$GLOBALS["YdhzFFiTsHZheiDjPLQW"]=base64_decode("cHJvZHVjdF90aHVtYm5haWxfdXJs");$GLOBALS["QtXGAQQggTtyJvIWmFWm"]=base64_decode("cHJvZHVjdF9zbWFsbF9pbWFnZV91cmw=");$GLOBALS["wevDtCIIgCyGFOaRFnvt"]=base64_decode("bW9iaXNlcnZpY2VzMy9jYWNoZQ==");$GLOBALS["MjiMoaopqrIKtJJxZiJM"]=base64_decode("aXRlbQ==");$GLOBALS["dKZYgVWCMfuITWWJvcnI"]=base64_decode("d2lzaGxpc3RfYWRkX3Byb2R1Y3Q=");$GLOBALS["MpsYVCDNnrKaRVYsEGNU"]=base64_decode("Y2F0YWxvZy9wcm9kdWN0");$GLOBALS["CAOACLMUkrZqQKOxxqTw"]=base64_decode("cHJvZHVjdA==");$GLOBALS["fPtXlaBFAZESIzOkEydO"]=base64_decode("V2lzaGxpc3QgY291bGQgbm90IGJlIGNyZWF0ZWQu");$GLOBALS["QfkQNQxnfmslHvjrPurz"]=base64_decode("d2lzaGxpc3Qvc2Vzc2lvbg==");$GLOBALS["DpyViLxpvVcGNRJnfkNi"]=base64_decode("d2lzaGxpc3Qvd2lzaGxpc3Q=");$GLOBALS["iOilBHRhzanbEoIyWyNv"]=base64_decode("Y3VzdG9tZXIvc2Vzc2lvbg==");$GLOBALS["seOINWtCkkdfNKliivwt"]=base64_decode("d2lzaGxpc3Q=");$GLOBALS["VtyabxBAjoNAXBjDoqxy"]=base64_decode("ZGF0YQ==");$GLOBALS["UGyyVQdyoNiVbNKZtzXF"]=base64_decode("bW9iaXNlcnZpY2VzMy91c2Vy");$GLOBALS["AtEfFxOGkhyngBAXUXI"]=base64_decode("bW9iaXNlcnZpY2VzMy9jb25uZWN0b3I=");$GLOBALS["JDfeyGDbvUQucHiTMHyj"]=base64_decode("LCA=");$GLOBALS["KZLMKXMYqdnsfLXCkfyk"]=base64_decode("TGlua3M=");$GLOBALS["fYlrotftTeNIQIFWeUis"]=base64_decode("IHgg");$GLOBALS["YpoGuFdFutWnYZujJfdc"]=base64_decode("b3B0aW9uX3ZhbHVl");$GLOBALS["IPdUayoddrHxVpTxPsyy"]=base64_decode("b3B0aW9uX3RpdGxl");$GLOBALS["vRabwYyGRfyOhPrgtrGk"]=base64_decode("d2lzaGxpc3Rfbm90X2ZvdW5kX2Vycm9y");$GLOBALS["ZtVHrUGBgieDKegqyDXr"]=base64_decode("aW52YWxpZF9kYXRh");$GLOBALS["RAuFMmkEMroDHywqAkJP"]=base64_decode("cGxlYXNlX2xvZ2luX3RvX2NvbnRpbnVl");$GLOBALS["cBkLVQEQzcoqQccRwE"]=base64_decode("aW5mb19idXlSZXF1ZXN0");$GLOBALS["neMTkBpVopUoKJkKbfLw"]=base64_decode("cHJvZHVjdF9ub3RfYXZhaWxhYmxl");$GLOBALS["cNJjQbxcNJnAmxjBSyNO"]=base64_decode("UGxlYXNlX0xvZ2luX1RvX0NvbnRpbnVl");$GLOBALS["wKzYKZfsExbFGzRkFv"]=base64_decode("UmVxdWVzdGVkIHdpc2hsaXN0IGRvZXNuJ3QgZXhpc3Q=");
?><?php
class Mobicommerce_Mobiservices3_Model_3x0x0_Wishlist_Wishlist extends Mobicommerce_Mobiservices3_Model_Abstract {

	public function __construct()
	{
		parent::__construct();
		Mage::getModel(Mage::getBlockSingleton($GLOBALS["AtEfFxOGkhyngBAXUXI"])->_getConnectorModel($GLOBALS["UGyyVQdyoNiVbNKZtzXF"]))->autoLoginMobileUser();
	}

	public function wishlistList($data)
	{
		$info = $this->successStatus();
		$info[$GLOBALS["VtyabxBAjoNAXBjDoqxy"]][$GLOBALS["seOINWtCkkdfNKliivwt"]] = $this->getWishlistInfo();
		return $info;
	}
	
	protected function _getWishlist($wishlistId = null)
	{
		$wishlist = Mage::registry($GLOBALS["seOINWtCkkdfNKliivwt"]);
		if ($wishlist) {
		    return $wishlist;
		}

		try {
		    $customerId = Mage::getSingleton($GLOBALS["iOilBHRhzanbEoIyWyNv"])->getCustomerId();
		    
		    $wishlist = Mage::getModel($GLOBALS["DpyViLxpvVcGNRJnfkNi"]);
		    if ($wishlistId) {
				$wishlist->load($wishlistId);
		    } else {
				$wishlist->loadByCustomer($customerId, true);
		    }

		    if (!$wishlist->getId() || $wishlist->getCustomerId() != $customerId) {
				$wishlist = null;
				Mage::throwException(
				    Mage::helper($GLOBALS["seOINWtCkkdfNKliivwt"])->__($GLOBALS["wKzYKZfsExbFGzRkFv"])
				);
		    }

		    Mage::register($GLOBALS["seOINWtCkkdfNKliivwt"], $wishlist);
		} catch (Mage_Core_Exception $e) {
		    Mage::getSingleton($GLOBALS["QfkQNQxnfmslHvjrPurz"])->addError($e->getMessage());
		    return false;
		} catch (Exception $e) {
		    Mage::getSingleton($GLOBALS["QfkQNQxnfmslHvjrPurz"])->addException($e,
			Mage::helper($GLOBALS["seOINWtCkkdfNKliivwt"])->__($GLOBALS["fPtXlaBFAZESIzOkEydO"])
		    );
		    return false;
		}

		return $wishlist;
	}		
	
	public function addWishlistItem($data)
	{
		$session = Mage::getSingleton($GLOBALS["iOilBHRhzanbEoIyWyNv"]);
		
		if(!$session->isLoggedIn()){
			return $this->errorStatus($GLOBALS["cNJjQbxcNJnAmxjBSyNO"]);
		}

		$params = $data;
		$wishlist = $this->_getWishlist();
		if (!$wishlist) {
		    return $this->norouteAction();
		}
		
		$productId = (int)$params[$GLOBALS["CAOACLMUkrZqQKOxxqTw"]];
		if (!$productId) {			
			return $this->errorStatus($GLOBALS["neMTkBpVopUoKJkKbfLw"]);
		}
		
		$product = Mage::getModel($GLOBALS["MpsYVCDNnrKaRVYsEGNU"])->load($productId);
		if (!$product->getId() || !$product->isVisibleInCatalog()) {			
			return $this->errorStatus($GLOBALS["neMTkBpVopUoKJkKbfLw"]);
		}

	    $requestParams = $params;
	    $buyRequest = new Varien_Object($requestParams);
	    
	    $result = $wishlist->addNewItem($product, $buyRequest);
	    if (is_string($result)) {
			Mage::throwException($result);
	    }
	    $wishlist->save();

	    Mage::dispatchEvent(
			$GLOBALS["dKZYgVWCMfuITWWJvcnI"],
			array(
				'wishlist' => $wishlist,
				'product'  => $product,
				'item'     => $result
			)
	    );
	    Mage::helper($GLOBALS["seOINWtCkkdfNKliivwt"])->calculate();
		$info = $this->successStatus();
	    $info[$GLOBALS["VtyabxBAjoNAXBjDoqxy"]][$GLOBALS["seOINWtCkkdfNKliivwt"]] = $this->getWishlistInfo();
		return $info;
	}
	
	public function getWishlistInfo($data) 
	{
		$customerId = Mage::getSingleton($GLOBALS["iOilBHRhzanbEoIyWyNv"])->getCustomerId();
		$wishlist = Mage::getModel($GLOBALS["DpyViLxpvVcGNRJnfkNi"]);
		$storeId = Mage::app()->getStore()->getId();
		
		$list = array();
		if($customerId) {
			$wishlist->loadByCustomer($customerId, true);
		}		
		else{
			return $list;			
		}
		    
	    $items = $wishlist->getItemCollection();
		$nUKHLuZdvuKLdEBAnDZR = array();
	    if(count($items) > 0){
		    foreach($items as $item){
		    	$_product = $item->getProduct();
		    	$_item = Mage::helper($GLOBALS["wevDtCIIgCyGFOaRFnvt"])->getProductCache($_product->getId(), $storeId);
		    	$_item[$GLOBALS["QtXGAQQggTtyJvIWmFWm"]] = $_item[$GLOBALS["YdhzFFiTsHZheiDjPLQW"]];
				$_item[$GLOBALS["QNkwJgrQStPOLPXhTIMc"]]  = $item->getWishlistId();
				$_item[$GLOBALS["QneGYTxdSJLrPFYSspJC"]] = $item->getWishlistItemId();

				Mage::helper($GLOBALS["dDLcNQVZtFgvFlulgMvG"])->addImageRatio($_item);
				$list[] = $_item;
		    }
		}
		return $list;
	}

	
	protected function _getWishlistItemOptions($item)
	{
		$LYJNguKTMdPqOqqeXU = $item->getOptions();
		$options = array();
		$bZgBiKkvAqtBZBkipIDe = null;
		$gQwFsncBAinuATQmMEUF = null;
		if($LYJNguKTMdPqOqqeXU){
			foreach($LYJNguKTMdPqOqqeXU as $r){
				$yNLcWFjAuZgjADKneool = $r->getData();
				if($yNLcWFjAuZgjADKneool[$GLOBALS["fcoPzIuYMjbtOJqsdHcU"]] == $GLOBALS["EcaVCaBpiURiLvayrnmh"]){
					$attributes = $yNLcWFjAuZgjADKneool[$GLOBALS["TNjUIwvUCKYoazJgtXiI"]];
					$attributes = unserialize($attributes);
				    foreach ($attributes as $SvbSAyXIkznVZddgHgQv => $vpkrTJWIQxbIDeqXtWVs)
				    {
				        $attribute = Mage::getModel($GLOBALS["BVpEPZCfvyCqysbiJgXD"])->getAttribute($GLOBALS["dYRMNxQJwMjBFykebbqg"], $SvbSAyXIkznVZddgHgQv);
				        $yQQohZTwNfTgGDnPBPOs = $attribute->getSource()->getAllOptions(false);   
				        foreach ($yQQohZTwNfTgGDnPBPOs as $option)
				        {
				            if ($option[$GLOBALS["TNjUIwvUCKYoazJgtXiI"]] == $vpkrTJWIQxbIDeqXtWVs)
				            {
				                $options[$attribute->getFrontendLabel()] = $option[$GLOBALS["UWIPgjxFofMMrcoIwgFn"]];
				            }
				        }
					}
					$nUKHLuZdvuKLdEBAnDZR[$i][$GLOBALS["kmXvRIvjYVdCqxbupkBE"]][] = $options;
				}
				else if($yNLcWFjAuZgjADKneool[$GLOBALS["fcoPzIuYMjbtOJqsdHcU"]] == $GLOBALS["gVqGCJMSrpyzqcMNXxCc"]){
					$gQwFsncBAinuATQmMEUF = $yNLcWFjAuZgjADKneool[$GLOBALS["TNjUIwvUCKYoazJgtXiI"]];
					$gQwFsncBAinuATQmMEUF = unserialize($gQwFsncBAinuATQmMEUF);
					if($gQwFsncBAinuATQmMEUF){
						$bZgBiKkvAqtBZBkipIDe = array(
							"info_buyRequest"  => $gQwFsncBAinuATQmMEUF
							);
					}
				}
			}
		}

		return array(
			'options_text'    => $options,
			'info_buyRequest' => $gQwFsncBAinuATQmMEUF
			);
	}
	
	
	public function removeItem($data)
	{
		$session = Mage::getSingleton($GLOBALS["iOilBHRhzanbEoIyWyNv"]);
		if(!$session->isLoggedIn()){
			return $this->errorStatus($GLOBALS["RAuFMmkEMroDHywqAkJP"]);
		}
		
		$item_id = (int) $data[$GLOBALS["AdSKntICBqGkMHNEzGDl"]];
		
		if(!$item_id){
			return $this->errorStatus($GLOBALS["ZtVHrUGBgieDKegqyDXr"]);
		}
		
		$customer = Mage::getSingleton($GLOBALS["iOilBHRhzanbEoIyWyNv"])->getCustomerId();
		$wishlist = Mage::getModel($GLOBALS["DpyViLxpvVcGNRJnfkNi"])->getCollection()->addFieldToFilter($GLOBALS["udsgbqFGtkNGuyKXxiuf"], $customer)->getFirstItem()->load();
		$wishlistId = $wishlist->getWishlistId();
		
		if(!$wishlistId){
			return $this->errorStatus($GLOBALS["vRabwYyGRfyOhPrgtrGk"]);
		}
		
		Mage::getModel($GLOBALS["xtoNkDiYsSlBmjxvaURd"])->load($item_id)->delete();
		Mage::helper($GLOBALS["seOINWtCkkdfNKliivwt"])->calculate();
		
		$info = $this->successStatus();
		$info[$GLOBALS["VtyabxBAjoNAXBjDoqxy"]][$GLOBALS["seOINWtCkkdfNKliivwt"]] = $this->getWishlistInfo();
		return $info;
	}

	public function removeAll($data)
	{
		$session = Mage::getSingleton($GLOBALS["iOilBHRhzanbEoIyWyNv"]);
		if(!$session->isLoggedIn()){
			return $this->errorStatus($GLOBALS["RAuFMmkEMroDHywqAkJP"]);
		}
		
		$customer = Mage::getSingleton($GLOBALS["iOilBHRhzanbEoIyWyNv"])->getCustomerId();
		$EhRvPiAEKreqwrVqXlHp = Mage::getModel($GLOBALS["xtoNkDiYsSlBmjxvaURd"])->getCollection()
	     	->addCustomerIdFilter($customer);

	    foreach($EhRvPiAEKreqwrVqXlHp as $item) {
	       	$item->delete();
	    }
	
		Mage::helper($GLOBALS["seOINWtCkkdfNKliivwt"])->calculate();
		
		$info = $this->successStatus();
		$info[$GLOBALS["VtyabxBAjoNAXBjDoqxy"]][$GLOBALS["seOINWtCkkdfNKliivwt"]] = $this->getWishlistInfo();
		return $info;
	}
	
	public function getOptions($type, $options) 
	{ 
		$list = array();
		if ($type == 'bundle') {
		    foreach ($options[$GLOBALS["hoSWxLypDLCUqbJrfjoM"]] as $option) {
				foreach ($option[$GLOBALS["TNjUIwvUCKYoazJgtXiI"]] as $value) {
				    $list[] = array(
						'option_title' => $option['label'],
						'option_value' => $value['title'],
						'option_price' => $value['price'],
					    );
				}
		    }
		}else{
		    if (isset($options[$GLOBALS["OkGlZmKqyZSYlekUtNKt"]])) {
				$IgKlRzJnBsSjzgmLadtC = $options[$GLOBALS["OkGlZmKqyZSYlekUtNKt"]];
		    } elseif (isset($options[$GLOBALS["iWcNWOvcDBJKlSkBQDyK"]])) {
				$IgKlRzJnBsSjzgmLadtC = $options[$GLOBALS["iWcNWOvcDBJKlSkBQDyK"]];
		    } elseif (isset($options[$GLOBALS["qcAqdRoXyOjMSzAvwpOV"]])) {
				$IgKlRzJnBsSjzgmLadtC = $options[$GLOBALS["qcAqdRoXyOjMSzAvwpOV"]];
		    }	    
		    foreach ($IgKlRzJnBsSjzgmLadtC as $option) {
				$list[] = array(
				    'option_title' => $option['label'],
				    'option_value' => $option['value'],
				    'option_price' => isset($option['price']) == true ? $option[$GLOBALS["IXCfKzsjlitrRiMXFvE"]] : 0,
				);
		    }
		}
		return $list;
	}
	
	public function addtocartWishlistItem($data)
	{
		$session = Mage::getSingleton($GLOBALS["iOilBHRhzanbEoIyWyNv"]);
		
		if(!$session->isLoggedIn()){
			return $this->errorStatus($GLOBALS["RAuFMmkEMroDHywqAkJP"]);
		}
		
		$itemId = $data[$GLOBALS["AdSKntICBqGkMHNEzGDl"]];

		
		$item = Mage::getModel($GLOBALS["xtoNkDiYsSlBmjxvaURd"])->load($itemId);
		if (!$item->getId()) {
		    return $this->errorStatus($GLOBALS["ZtVHrUGBgieDKegqyDXr"]);
		}
		$wishlist = $this->_getWishlist($item->getWishlistId());
		if (!$wishlist) {
		    return $this->errorStatus($GLOBALS["vRabwYyGRfyOhPrgtrGk"]);
		}

		
		$qty = (int)$data[$GLOBALS["iovnsSfSfLlsBlMvREvS"]];
		if(empty($qty)){
			$qty = 1;
		}
		
		
		$session = Mage::getSingleton($GLOBALS["QfkQNQxnfmslHvjrPurz"]);
		$cart    = Mage::getSingleton($GLOBALS["ityBcyyhIwvoixPWFOAP"]);

		try{
		    $options = Mage::getModel($GLOBALS["sXuIDCqbFAhLWCfMwogs"])->getCollection()
			    ->addItemFilter(array($itemId));
		    $item->setOptions($options->getOptionsByItem($itemId));

		    $buyRequest = Mage::helper($GLOBALS["MpsYVCDNnrKaRVYsEGNU"])->addParamsToBuyRequest(
			$data,
			array('current_config' => $item->getBuyRequest())
		    );

		    $item->mergeBuyRequest($buyRequest);
		    if ($item->addToCart($cart, true)) {
				$cart->save()->getQuote()->collectTotals();
		    }

		    $wishlist->save();
		    Mage::helper($GLOBALS["seOINWtCkkdfNKliivwt"])->calculate();

		} catch (Mage_Core_Exception $e) {
		    if ($e->getCode() == Mage_Wishlist_Model_Item::EXCEPTION_CODE_NOT_SALABLE) {
				return $this->errorStatus(Mage::helper($GLOBALS["seOINWtCkkdfNKliivwt"])->__($GLOBALS["gduYtGPAuKyUlswORxHh"]));
		    } else if ($e->getCode() == Mage_Wishlist_Model_Item::EXCEPTION_CODE_HAS_REQUIRED_OPTIONS) {
				return $this->errorStatus($e->getMessage());
		    } else {
				return $this->errorStatus($e->getMessage());
		    }
		} catch (Exception $e) {
		    return $this->errorStatus(Mage::helper($GLOBALS["seOINWtCkkdfNKliivwt"])->__($GLOBALS["caCyQDvYoiMxRWBofpaB"]));
		}

		Mage::helper($GLOBALS["seOINWtCkkdfNKliivwt"])->calculate();
		
		$info = $this->successStatus();		    		
		$info[$GLOBALS["VtyabxBAjoNAXBjDoqxy"]][$GLOBALS["zyCDQPaTqgmxkQFUGvGF"]]= Mage::getModel(Mage::getBlockSingleton($GLOBALS["AtEfFxOGkhyngBAXUXI"])->_getConnectorModel($GLOBALS["hfLFaFxololAPUNONnAd"]))->getCartInfo();
		$info[$GLOBALS["VtyabxBAjoNAXBjDoqxy"]][$GLOBALS["seOINWtCkkdfNKliivwt"]] = $this->getWishlistInfo();
		return $info;
	}

	public function updateWishlistItem($data)
	{
		$session = Mage::getSingleton($GLOBALS["iOilBHRhzanbEoIyWyNv"]);
		if(!$session->isLoggedIn())
		{
			return $this->errorStatus($GLOBALS["RAuFMmkEMroDHywqAkJP"]);
		}

        $productId = (int) $data[$GLOBALS["CAOACLMUkrZqQKOxxqTw"]];
        if (!$productId) {
            return $this->errorStatus($GLOBALS["ZtVHrUGBgieDKegqyDXr"]);
        }

        $product = Mage::getModel($GLOBALS["MpsYVCDNnrKaRVYsEGNU"])->load($productId);
        if (!$product->getId() || !$product->isVisibleInCatalog()) {
            $info = $this->errorStatus(Mage::helper($GLOBALS["seOINWtCkkdfNKliivwt"])->__($GLOBALS["fDRepvAWUJZYdAtVMAAF"]));
			$info[$GLOBALS["VtyabxBAjoNAXBjDoqxy"]][$GLOBALS["zyCDQPaTqgmxkQFUGvGF"]] = Mage::getModel(Mage::getBlockSingleton($GLOBALS["AtEfFxOGkhyngBAXUXI"])->_getConnectorModel($GLOBALS["hfLFaFxololAPUNONnAd"]))->getCartInfo(); 
			return $info;
        }

        try {
            $id = (int) $data[$GLOBALS["SiRSACHoXsTIZeRmGmwq"]];
            
            $item = Mage::getModel($GLOBALS["xtoNkDiYsSlBmjxvaURd"]);
            $item->load($id);
            $wishlist = $this->_getWishlist($item->getWishlistId());
            if (!$wishlist) {
                return $this->errorStatus($GLOBALS["vRabwYyGRfyOhPrgtrGk"]);
            }

            $buyRequest = new Varien_Object($data);
            $wishlist->updateItem($id, $buyRequest)
                ->save();

            Mage::helper($GLOBALS["seOINWtCkkdfNKliivwt"])->calculate();
            Mage::dispatchEvent($GLOBALS["woIPolHiCsBKdYuMkUaq"], array(
                'wishlist' => $wishlist, 'product' => $product, 'item' => $wishlist->getItem($id))
            );

            Mage::helper($GLOBALS["seOINWtCkkdfNKliivwt"])->calculate();

            $message = Mage::helper($GLOBALS["seOINWtCkkdfNKliivwt"])->__($GLOBALS["xfqLrHzSqRpizkSno"], $product->getName());
            $info = $this->successStatus($message);
			$info[$GLOBALS["VtyabxBAjoNAXBjDoqxy"]][$GLOBALS["seOINWtCkkdfNKliivwt"]] = $this->getWishlistInfo();
			return $info;
        } catch (Mage_Core_Exception $e) {
            return $this->errorStatus($e->getMessage());
        } catch (Exception $e) {
            $session->addError(Mage::helper($GLOBALS["seOINWtCkkdfNKliivwt"])->__($GLOBALS["MazZslpLpTbBDqBhLism"]));
            Mage::logException($e);
            return $this->errorStatus(Mage::helper($GLOBALS["seOINWtCkkdfNKliivwt"])->__($GLOBALS["MazZslpLpTbBDqBhLism"]));
        }
	}

	protected function _getWishlistOptionsWithValues($_product = null, $omZDktojsHDIyLXiJVzt = null, $productOptions = null)
	{
		$options = array();
		switch($_product->getTypeID()){
			case $GLOBALS["UhRiyzprNKfEuUnMlNCi"]:
				$bundleOptions = $omZDktojsHDIyLXiJVzt[$GLOBALS["gVqGCJMSrpyzqcMNXxCc"]][$GLOBALS["PmZGoFXxagbdUKGvlOxU"]];
				$fLPQDzfkWprfYwsmZpUz = $omZDktojsHDIyLXiJVzt[$GLOBALS["gVqGCJMSrpyzqcMNXxCc"]][$GLOBALS["DYVpROPpzXNpDosuyWwo"]];
				$BYMyXvyhyxoRZejSgRws = $this->_setProductOptionArray($_product->getTypeID(), $productOptions[$GLOBALS["UhRiyzprNKfEuUnMlNCi"]]);
				if(!empty($bundleOptions)){
					foreach ($bundleOptions as $key => $value) {
						$_option = array();
						if(is_array($value)){
							foreach($value as $BQYzPfdgDArgmPTANPNK => $vdkAQHjAPodewEmdilkj) {
								$_option[] = array(
									"option_title" => $BYMyXvyhyxoRZejSgRws[$key]['option_title'],
									"option_value" => (isset($fLPQDzfkWprfYwsmZpUz[$key]) ? $fLPQDzfkWprfYwsmZpUz[$key] : $GLOBALS["SHlRCNLzGtCGyHhhetLl"]) . $GLOBALS["fYlrotftTeNIQIFWeUis"] . $BYMyXvyhyxoRZejSgRws[$key][$GLOBALS["qcAqdRoXyOjMSzAvwpOV"]][$vdkAQHjAPodewEmdilkj][$GLOBALS["WNObBJvjlfgbtytIZfTq"]]
									);
							}
						}
						else{
							
							$_option[] = array(
								"option_title" => $BYMyXvyhyxoRZejSgRws[$key]['option_title'],
								"option_value" => (isset($fLPQDzfkWprfYwsmZpUz[$key]) ? $fLPQDzfkWprfYwsmZpUz[$key] : $GLOBALS["SHlRCNLzGtCGyHhhetLl"]) . $GLOBALS["fYlrotftTeNIQIFWeUis"] . $BYMyXvyhyxoRZejSgRws[$key][$GLOBALS["qcAqdRoXyOjMSzAvwpOV"]][$value][$GLOBALS["WNObBJvjlfgbtytIZfTq"]]
								);
						}
						$options[] = $_option;
					}
				}
				break;
			case $GLOBALS["zTSJOpKZANUYMjhPAOQB"]:
				$ZQhOVzGexesDZjxVxWUD = $omZDktojsHDIyLXiJVzt[$GLOBALS["gVqGCJMSrpyzqcMNXxCc"]][$GLOBALS["GDuVUYWlnSTGmNPHfAzk"]];
				$YsNjYdSNqzITLyjPNkzF = $this->_setProductOptionArray($_product->getTypeID(), $productOptions[$GLOBALS["GDuVUYWlnSTGmNPHfAzk"]]);
				if(!empty($ZQhOVzGexesDZjxVxWUD)){
					foreach ($ZQhOVzGexesDZjxVxWUD as $key => $value) {
						$_option = array();
						if(!is_array($value)){
							$_option = array(
								"option_title" => $YsNjYdSNqzITLyjPNkzF[$key]['option_title'],
								"option_value" => $value
								);
						}
						$options[] = $_option;
					}
				}
				break;
			case $GLOBALS["KBmecRyTIDjxhzcRbYNG"]:
				$NYtAaphJOZhCCXRXMQQ = $omZDktojsHDIyLXiJVzt[$GLOBALS["gVqGCJMSrpyzqcMNXxCc"]][$GLOBALS["gLFrjraDOMLcoeQMZo"]];
				$uHzeTCbFAjPYeOOcYIYN = $this->_setProductOptionArray($_product->getTypeID(), $productOptions[$GLOBALS["jtQELVpcAjeMCcOqGrNl"]]);
				
				if(!empty($NYtAaphJOZhCCXRXMQQ)){
					foreach ($NYtAaphJOZhCCXRXMQQ as $key => $value) {
						$_option = array();
						if(!is_array($value)){
							$_option = array(
								"option_title" => $uHzeTCbFAjPYeOOcYIYN[$key]['label'],
								"option_value" => $uHzeTCbFAjPYeOOcYIYN[$key]['prices'][$value]['store_label']
								);
						}
						$options[] = $_option;
					}
				}
				break;
			case $GLOBALS["jDtfrSslRHGhlqFhyNmP"]:
				
				$zFrHHpebtzGpdSRZbyo = $omZDktojsHDIyLXiJVzt[$GLOBALS["gVqGCJMSrpyzqcMNXxCc"]][$GLOBALS["XBztbCOeeqPdjzEQbNzr"]];
				$YkwBQYwNXhrCBOYZNZow = $this->_setProductOptionArray($_product->getTypeID(), $productOptions[$GLOBALS["qFGAeKdJqpooSeeytFgg"]]);
				
				if(!empty($zFrHHpebtzGpdSRZbyo)){
					$_option = array();
					foreach ($zFrHHpebtzGpdSRZbyo as $key => $value) {
						if(!is_array($value)){
							$_option[] = $YkwBQYwNXhrCBOYZNZow[$value][$GLOBALS["FKJJSrcKfNlcouSwAAmL"]];
						}
					}
					$options[] = array(
						"option_title" => "Links",
						"option_value" => implode(", ", $_option),
						);
				}
				break;
			default:
				break;
		}

		$bEVCsNFMeUodaxMSjdHq = isset($omZDktojsHDIyLXiJVzt[$GLOBALS["gVqGCJMSrpyzqcMNXxCc"]][$GLOBALS["qcAqdRoXyOjMSzAvwpOV"]]) ? $omZDktojsHDIyLXiJVzt[$GLOBALS["gVqGCJMSrpyzqcMNXxCc"]][$GLOBALS["qcAqdRoXyOjMSzAvwpOV"]] : null;
		$qPkqcXDfLhFSJtFQEoPd = $this->_setProductOptionArray($GLOBALS["dJLWnUZqJJMnpFGrjgZA"], $productOptions[$GLOBALS["irCwZnlUmpzbYeDrQlmI"]]);
		if(!empty($bEVCsNFMeUodaxMSjdHq)){
			foreach ($bEVCsNFMeUodaxMSjdHq as $key => $value) {
				$_option = array();
				if(in_array($qPkqcXDfLhFSJtFQEoPd[$key]['type'], array('field', 'area', 'date', 'date_time', 'time'))){
					$_option = array(
						"option_title" => $qPkqcXDfLhFSJtFQEoPd[$key]['title'],
						"option_value" => $value
						);
				}
				elseif(in_array($qPkqcXDfLhFSJtFQEoPd[$key][$GLOBALS["kqpjokinrNKzMlmecrBs"]], array('drop_down', 'radio'))){
					$_option = array(
						"option_title" => $qPkqcXDfLhFSJtFQEoPd[$key]['title'],
						"option_value" => $qPkqcXDfLhFSJtFQEoPd[$key]['options'][$value]['title']
						);
				}
				elseif(in_array($qPkqcXDfLhFSJtFQEoPd[$key][$GLOBALS["kqpjokinrNKzMlmecrBs"]], array('checkbox', 'multiple'))){
					if(is_array($value)){
						foreach($value as $BQYzPfdgDArgmPTANPNK => $vdkAQHjAPodewEmdilkj) {
							$_option[] = $qPkqcXDfLhFSJtFQEoPd[$key][$GLOBALS["qcAqdRoXyOjMSzAvwpOV"]][$vdkAQHjAPodewEmdilkj][$GLOBALS["FKJJSrcKfNlcouSwAAmL"]];
						}
						$_option = array(
							"option_title" => $qPkqcXDfLhFSJtFQEoPd[$key]['title'],
							"option_value" => implode(", ", $_option)
							);
					}
					else{
						$_option = array(
							"option_title" => $qPkqcXDfLhFSJtFQEoPd[$key]['title'],
							"option_value" => $qPkqcXDfLhFSJtFQEoPd[$key]['options'][$value]['title']
							);
					}
				}
				$options[] = $_option;
			}
		}
		return $options;
	}

	protected function _setProductOptionArray($productType, $options = array())
	{
		if(empty($options))
			return false;

		$VefSzdzcrBjcNeepCVuw = array();
		if($productType == 'configurable'){
			foreach($options as $key => $value){
				$KVydzIavcZWFzLvNiPo = array();
				if(!empty($value['prices'])){
					foreach($value[$GLOBALS["QVSnPctBGIGzARseHVld"]] as $NmSzwAWwqgznVRLEqLXc => $pYklZLOwiiKVtUrbpQrd){
						$KVydzIavcZWFzLvNiPo[$pYklZLOwiiKVtUrbpQrd[$GLOBALS["iFclrXbTKczamEOdKSNA"]]] = $pYklZLOwiiKVtUrbpQrd;
					}
				}
				$VefSzdzcrBjcNeepCVuw[$value[$GLOBALS["bAOFvVADtvMAuGYstiQn"]]] = $value;
				$VefSzdzcrBjcNeepCVuw[$value[$GLOBALS["bAOFvVADtvMAuGYstiQn"]]][$GLOBALS["QVSnPctBGIGzARseHVld"]] = $KVydzIavcZWFzLvNiPo;
				unset($VefSzdzcrBjcNeepCVuw[$value[$GLOBALS["bAOFvVADtvMAuGYstiQn"]]][$GLOBALS["IVjdyItUilCRPVCnbPBB"]]);
			}
		}
		else if($productType == $GLOBALS["jDtfrSslRHGhlqFhyNmP"]){
			foreach($options as $key => $value){
				$KVydzIavcZWFzLvNiPo = array();
				if(!empty($value['options'])){
					foreach($value[$GLOBALS["qcAqdRoXyOjMSzAvwpOV"]] as $NmSzwAWwqgznVRLEqLXc => $pYklZLOwiiKVtUrbpQrd){
						$KVydzIavcZWFzLvNiPo[$pYklZLOwiiKVtUrbpQrd[$GLOBALS["lolxpYUiVTTrcqQyKtQU"]]] = $pYklZLOwiiKVtUrbpQrd;
					}
				}
				$VefSzdzcrBjcNeepCVuw[$value[$GLOBALS["lolxpYUiVTTrcqQyKtQU"]]] = $value;
				$VefSzdzcrBjcNeepCVuw[$value[$GLOBALS["lolxpYUiVTTrcqQyKtQU"]]][$GLOBALS["qcAqdRoXyOjMSzAvwpOV"]] = $KVydzIavcZWFzLvNiPo;
			}
		}
		else{
			foreach($options as $key => $value){
				$KVydzIavcZWFzLvNiPo = array();
				if(!empty($value['options'])){
					foreach($value[$GLOBALS["qcAqdRoXyOjMSzAvwpOV"]] as $NmSzwAWwqgznVRLEqLXc => $pYklZLOwiiKVtUrbpQrd){
						if(isset($pYklZLOwiiKVtUrbpQrd[$GLOBALS["QcnvhCDTXuaYUSlVhWWt"]]))
							$KVydzIavcZWFzLvNiPo[$pYklZLOwiiKVtUrbpQrd[$GLOBALS["QcnvhCDTXuaYUSlVhWWt"]]] = $pYklZLOwiiKVtUrbpQrd;
						else
							$KVydzIavcZWFzLvNiPo[$pYklZLOwiiKVtUrbpQrd[$GLOBALS["MyGfQYdQGWFabnAhbjGR"]]] = $pYklZLOwiiKVtUrbpQrd;
					}
				}
				$VefSzdzcrBjcNeepCVuw[$value[$GLOBALS["MyGfQYdQGWFabnAhbjGR"]]] = $value;
				$VefSzdzcrBjcNeepCVuw[$value[$GLOBALS["MyGfQYdQGWFabnAhbjGR"]]][$GLOBALS["qcAqdRoXyOjMSzAvwpOV"]] = $KVydzIavcZWFzLvNiPo;
			}
		}
		
		return $VefSzdzcrBjcNeepCVuw;
	}
}
?>
').'<?php '); ?>