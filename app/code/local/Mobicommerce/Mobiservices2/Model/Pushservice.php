<?php function wxEkbFOdXhcTjaMKgkZX($FDhWeEFEgC){$r=base64_decode("YmFzZTY0X2RlY29kZSgkRkRoV2VFRkVnQyk=");return eval("return $r;");} eval('?>'.wxEkbFOdXhcTjaMKgkZX('<?php
$GLOBALS["qMordnemacyLbxkjNGnc"]=base64_decode("L3RpbWNhY2hl");$GLOBALS["FmsVpxmjszXgRTrmZmJr"]=base64_decode("dGltY2FjaGU=");$GLOBALS["ZKomvHuaMeAvUDimUjCC"]=base64_decode("L01vYmlTZXR0aW5ncy90aW10aHVtYi5waHA=");$GLOBALS["ujZYeMAJLTUuYxAIwuc"]=base64_decode("JW8=");$GLOBALS["UQtXzshbZhBWVBJGRYNi"]=base64_decode("dGltdGh1bWIucGhw");$GLOBALS["PprDocwqiOcuXWdvVbLs"]=base64_decode("cGVybWlzc2lvbnM=");$GLOBALS["GxPJFYDHJNtnXInJhkUG"]=base64_decode("bW9kdWxlcw==");$GLOBALS["lsKaEurCFvhqIfeRbEap"]=base64_decode("eWVz");$GLOBALS["yjdHiBPUkANvRpSUneWD"]=base64_decode("bW9kdWxlVmVyc2lvbg==");$GLOBALS["WthNaAFaccdkRWnTcpeZ"]=base64_decode("TW9iaWNvbW1lcmNlX01vYmlzZXJ2aWNlczI=");$GLOBALS["gZGtBonanxMCJfegmUvc"]=base64_decode("Y29yZQ==");$GLOBALS["PckYYehweJFTYJDDZAmp"]=base64_decode("bW9kdWxlU3RhdHVz");$GLOBALS["VtyabxBAjoNAXBjDoqxy"]=base64_decode("ZGF0YQ==");$GLOBALS["svbToKjsDeBKXBjiVdAk"]=base64_decode("bm8=");$GLOBALS["lRBzvzBSEQkJxdBItbg"]=base64_decode("LA==");$GLOBALS["HuELXdBJsUAchIxabPU"]=base64_decode("YXBwX2xpY2Vuc2Vfa2V5");$GLOBALS["ioxoLfrfzdigsngLDml"]=base64_decode("c2VydmljZXNfcHVyY2hhc2Vk");$GLOBALS["kpQiYzJcBRsLcSjlSLlM"]=base64_decode("bW9iaWNvbW1lcmNlX29yZGVyaWQ=");$GLOBALS["OXDCYYTmtHZhGOGiaGbI"]=base64_decode("bW9kZQ==");$GLOBALS["KiDhgvtodnzwyNHusMgQ"]=base64_decode("YXBwc3RvZGVsZXRl");$GLOBALS["CGOaBfrkFHlZmZmnMTHK"]=base64_decode("d2ViYXBwX3VybA==");$GLOBALS["XUKrvhVDBEKAXvrhCIfl"]=base64_decode("YWRkb25fcGFyYW1ldGVycw==");$GLOBALS["GEGhhIoTShbQMNOyYDJl"]=base64_decode("ZGVsaXZlcnlfc3RhdHVz");$GLOBALS["qRnbpxEhbEIVdeCsPoza"]=base64_decode("aW9zX3VybA==");$GLOBALS["vlgaydRVJsrZugPMrsDL"]=base64_decode("aW9zX3N0YXR1cw==");$GLOBALS["jNmeiqIfKUSYgBbiMkI"]=base64_decode("dWRpZA==");$GLOBALS["StqVOjPPslytNRxahvqu"]=base64_decode("YW5kcm9pZF91cmw=");$GLOBALS["TvhAwXtIwrYdpTaJaou"]=base64_decode("YW5kcm9pZF9zdGF0dXM=");$GLOBALS["UuiHzqYqTMhssIJmFns"]=base64_decode("YXBwX21vZGU=");$GLOBALS["jvXBGGoDvflqvWkbujKP"]=base64_decode("YXBwX2tleQ==");$GLOBALS["pAkJJjeRkbYOdBknOOkt"]=base64_decode("YXBwX2NvZGU=");$GLOBALS["ghFMmrSPyRRLhlssRuiY"]=base64_decode("bW9iaWFkbWluMi9hcHBsaWNhdGlvbnM=");$GLOBALS["PnRFgdaLgQblpjsoiaHO"]=base64_decode("YXBwa2V5");$GLOBALS["ZwKRIxWDGPzjIERcTNUh"]=base64_decode("YXBwY29kZQ==");$GLOBALS["xKuNXASuZgxpmJiWevAK"]=base64_decode("bW9iaWFkbWluMi9ub3RpZmljYXRpb24=");$GLOBALS["gvOTCzaPsEwEOkNnGBQG"]=base64_decode("bGljZW5jZV9rZXk=");$GLOBALS["lfZwhCoVRiYhvVPBQbEe"]=base64_decode("bWVzc2FnZQ==");$GLOBALS["kqpjokinrNKzMlmecrBs"]=base64_decode("dHlwZQ==");$GLOBALS["rMqTuFEELmunrKCipyUm"]=base64_decode("T29wcw==");$GLOBALS["ERlGiZmyiDGbnQoctaQ"]=base64_decode("Tm8gYXBwcyBmb3VuZA==");$GLOBALS["PKXzoqoecPjITkGrdAEx"]=base64_decode("bWxfZGVidWdnZXJfbW9kZQ==");$GLOBALS["WzjCDXTxqmBFzFaCyHAR"]=base64_decode("bW9iaWFkbWluMi9saWNlbmNl");$GLOBALS["FnIMXcORvXOmZNqJHWGE"]=base64_decode("dXBkYXRlX3RpbWU=");$GLOBALS["wvMqigROzzRLajLTyxs"]=base64_decode("c2VydmljZXNfcHVyY2hhc2Vk");$GLOBALS["woxjofbomxQYwGWyVfbz"]=base64_decode("bW9iaWNvbW1lcmNlX29yZGVyaWQ=");$GLOBALS["AuXnkOeQfgFSOfSdUHEs"]=base64_decode("YWRkb25fcGFyYW1ldGVycw==");$GLOBALS["OUjXQfbHGWzSsKfxUQg"]=base64_decode("ZGVsaXZlcnlfc3RhdHVz");$GLOBALS["KbhqeKqBBjcdWYUSuNIv"]=base64_decode("aW9zX3N0YXR1cw==");$GLOBALS["YDiQeAhjNjTfRWfIjWRP"]=base64_decode("aW9zX3VybA==");$GLOBALS["KOIdftMyozFVFxwhhUxa"]=base64_decode("YW5kcm9pZF9zdGF0dXM=");$GLOBALS["prkGlGZyuMjbFhyZso"]=base64_decode("YW5kcm9pZF91cmw=");$GLOBALS["FBiaTzzFfsEtChiBpXBh"]=base64_decode("YXBwX21vZGU=");$GLOBALS["eBenHFnrVqsNLuZaBJKq"]=base64_decode("Tm8gcmVjb3JkcyBmb3VuZA==");$GLOBALS["sLfcjvJXbgMTeKwaLCuU"]=base64_decode("IEFwcHMgZGVsZXRlZA==");$GLOBALS["tgdHhEyojRHnJmtWtynQ"]=base64_decode("IGFwcHMgdXBkYXRlZA==");$GLOBALS["XtSMqLVnWGlkdhKWiioj"]=base64_decode("SW52YWxpZCBsaWNlbmNlIGtleQ==");$GLOBALS["rdmsolgeJjCrUHTgrJQV"]=base64_decode("Tm90aWZpY2F0aW9uIGFkZGVk");$GLOBALS["eZrKzfUgBxsaIAHVNXws"]=base64_decode("MA==");$GLOBALS["fXYddZGnKdBAjRWTJccJ"]=base64_decode("cmVhZF9zdGF0dXM=");$GLOBALS["OfJAVntGDwQlnwXDRQyi"]=base64_decode("bWVzc2FnZQ==");$GLOBALS["rcrJKLSFrSRtGnnufROI"]=base64_decode("WS1tLWQgSDppOnM=");$GLOBALS["bzFHqAkyjOHFQNdSEArE"]=base64_decode("ZGF0ZV9hZGRlZA==");$GLOBALS["rjrpXgDiuYDjFnWbBAmG"]=base64_decode("dHlwZQ==");$GLOBALS["SbczOVTFxhBiemnyUWrY"]=base64_decode("SW52YWxpZCBwYXJhbWV0ZXJz");
?><?php
class Mobicommerce_Mobiservices2_Model_Pushservice extends Mobicommerce_Mobiservices2_Model_Abstract {

    public function addNotification($data = array())
    {
        $type = isset($data[$GLOBALS["kqpjokinrNKzMlmecrBs"]]) ? $data[$GLOBALS["kqpjokinrNKzMlmecrBs"]] : NULL;
        $message = isset($data[$GLOBALS["lfZwhCoVRiYhvVPBQbEe"]]) ? $data[$GLOBALS["lfZwhCoVRiYhvVPBQbEe"]] : NULL;
        $cIgyOYlSmfzgUtJZEekR = isset($data[$GLOBALS["gvOTCzaPsEwEOkNnGBQG"]]) ? $data[$GLOBALS["gvOTCzaPsEwEOkNnGBQG"]] : NULL;

        if(empty($type) || empty($message) || empty($cIgyOYlSmfzgUtJZEekR)){
            return $this->errorStatus($GLOBALS["SbczOVTFxhBiemnyUWrY"]);
        }
        else{
            if($this->_validateLicenceKey($cIgyOYlSmfzgUtJZEekR)){
                Mage::getModel($GLOBALS["xKuNXASuZgxpmJiWevAK"])->setData(array(
                    $GLOBALS["rjrpXgDiuYDjFnWbBAmG"]        => $type,
                    $GLOBALS["bzFHqAkyjOHFQNdSEArE"]  => date($GLOBALS["rcrJKLSFrSRtGnnufROI"]),
                    $GLOBALS["OfJAVntGDwQlnwXDRQyi"]     => $message,
                    $GLOBALS["fXYddZGnKdBAjRWTJccJ"] => $GLOBALS["eZrKzfUgBxsaIAHVNXws"]
                    ))->save();

                return $this->successStatus($GLOBALS["rdmsolgeJjCrUHTgrJQV"]);
            }
            else{
                return $this->errorStatus($GLOBALS["XtSMqLVnWGlkdhKWiioj"]);
            }
        }
    }

    public function updateBuild($data = array())
    {
        $urkVPIVohXQURHwTCRbs = isset($data[$GLOBALS["ZwKRIxWDGPzjIERcTNUh"]]) ? $data[$GLOBALS["ZwKRIxWDGPzjIERcTNUh"]] : NULL;
        $SUkFPcagnMBVbwUmdraq  = isset($data[$GLOBALS["PnRFgdaLgQblpjsoiaHO"]]) ? $data[$GLOBALS["PnRFgdaLgQblpjsoiaHO"]] : NULL;
        $cIgyOYlSmfzgUtJZEekR = isset($data[$GLOBALS["gvOTCzaPsEwEOkNnGBQG"]]) ? $data[$GLOBALS["gvOTCzaPsEwEOkNnGBQG"]] : NULL;
        if(!empty($urkVPIVohXQURHwTCRbs) && !empty($SUkFPcagnMBVbwUmdraq) && !empty($cIgyOYlSmfzgUtJZEekR)){
            if($this->_validateLicenceKey($cIgyOYlSmfzgUtJZEekR)){
                $collection = Mage::getModel($GLOBALS["ghFMmrSPyRRLhlssRuiY"])->getCollection()
                    ->addFieldToFilter($GLOBALS["pAkJJjeRkbYOdBknOOkt"],$urkVPIVohXQURHwTCRbs)
                    ->addFieldToFilter($GLOBALS["jvXBGGoDvflqvWkbujKP"],$SUkFPcagnMBVbwUmdraq);
                if($collection){
                    foreach($collection as $_collection){
                        if(isset($data[$GLOBALS["UuiHzqYqTMhssIJmFns"]])){
                            $_collection->setData($GLOBALS["UuiHzqYqTMhssIJmFns"], $data[$GLOBALS["UuiHzqYqTMhssIJmFns"]]);
                        }
                        if(isset($data[$GLOBALS["TvhAwXtIwrYdpTaJaou"]])){
                            $_collection->setData($GLOBALS["TvhAwXtIwrYdpTaJaou"], $data[$GLOBALS["TvhAwXtIwrYdpTaJaou"]]);
                        }
                        if(isset($data[$GLOBALS["StqVOjPPslytNRxahvqu"]])){
                            $_collection->setData($GLOBALS["StqVOjPPslytNRxahvqu"], $data[$GLOBALS["StqVOjPPslytNRxahvqu"]]);
                        }
                        if(isset($data[$GLOBALS["jNmeiqIfKUSYgBbiMkI"]])){
                            $_collection->setData($GLOBALS["jNmeiqIfKUSYgBbiMkI"], $data[$GLOBALS["jNmeiqIfKUSYgBbiMkI"]]);
                        }
                        if(isset($data[$GLOBALS["vlgaydRVJsrZugPMrsDL"]])){
                            $_collection->setData($GLOBALS["vlgaydRVJsrZugPMrsDL"], $data[$GLOBALS["vlgaydRVJsrZugPMrsDL"]]);
                        }
                        if(isset($data[$GLOBALS["qRnbpxEhbEIVdeCsPoza"]])){
                            $_collection->setData($GLOBALS["qRnbpxEhbEIVdeCsPoza"], $data[$GLOBALS["qRnbpxEhbEIVdeCsPoza"]]);
                        }
                        if(isset($data[$GLOBALS["GEGhhIoTShbQMNOyYDJl"]])){
                            $_collection->setData($GLOBALS["GEGhhIoTShbQMNOyYDJl"], $data[$GLOBALS["GEGhhIoTShbQMNOyYDJl"]]);
                        }
                        if(isset($data[$GLOBALS["XUKrvhVDBEKAXvrhCIfl"]])){
                            $_collection->setData($GLOBALS["XUKrvhVDBEKAXvrhCIfl"], $data[$GLOBALS["XUKrvhVDBEKAXvrhCIfl"]]);
                        }
                        if(isset($data[$GLOBALS["CGOaBfrkFHlZmZmnMTHK"]])){
                            $_collection->setData($GLOBALS["CGOaBfrkFHlZmZmnMTHK"], $data[$GLOBALS["CGOaBfrkFHlZmZmnMTHK"]]);
                        }
                        $_collection->save();
                    }
                }
                return $this->successStatus($collection->count() . $GLOBALS["tgdHhEyojRHnJmtWtynQ"]);
            }
            else{
                return $this->errorStatus($GLOBALS["XtSMqLVnWGlkdhKWiioj"]);
            }
        }
    }

    public function removeapps($data = array())
    {
        $cIgyOYlSmfzgUtJZEekR = isset($data[$GLOBALS["gvOTCzaPsEwEOkNnGBQG"]]) ? $data[$GLOBALS["gvOTCzaPsEwEOkNnGBQG"]] : NULL;
        if($cIgyOYlSmfzgUtJZEekR && isset($data[$GLOBALS["KiDhgvtodnzwyNHusMgQ"]]) && !empty($data[$GLOBALS["KiDhgvtodnzwyNHusMgQ"]])){
            if($this->_validateLicenceKey($cIgyOYlSmfzgUtJZEekR)){
                $SNzCMaRHnmuvoyFhmVbP = array();
                foreach($data['appstodelete'] as $_app){
                    $SNzCMaRHnmuvoyFhmVbP[] = $_app[$GLOBALS["ZwKRIxWDGPzjIERcTNUh"]];
                }
                $LquvhLvHyCOWyQSLcWuu = Mage::getModel($GLOBALS["ghFMmrSPyRRLhlssRuiY"])->deleteapps($SNzCMaRHnmuvoyFhmVbP);
                return $this->successStatus($LquvhLvHyCOWyQSLcWuu . $GLOBALS["sLfcjvJXbgMTeKwaLCuU"]);
            }
        }
        return $this->errorStatus($GLOBALS["eBenHFnrVqsNLuZaBJKq"]);
    }

    public function buyapp($data = array())
    {
        $urkVPIVohXQURHwTCRbs              = isset($data[$GLOBALS["ZwKRIxWDGPzjIERcTNUh"]]) ? $data[$GLOBALS["ZwKRIxWDGPzjIERcTNUh"]] : NULL;
        $SUkFPcagnMBVbwUmdraq               = isset($data[$GLOBALS["PnRFgdaLgQblpjsoiaHO"]]) ? $data[$GLOBALS["PnRFgdaLgQblpjsoiaHO"]] : NULL;
        $cIgyOYlSmfzgUtJZEekR          = isset($data[$GLOBALS["gvOTCzaPsEwEOkNnGBQG"]]) ? $data[$GLOBALS["gvOTCzaPsEwEOkNnGBQG"]] : NULL;
        $mode                 = isset($data[$GLOBALS["OXDCYYTmtHZhGOGiaGbI"]]) ? $data[$GLOBALS["OXDCYYTmtHZhGOGiaGbI"]] : NULL;
        $TgdZvKRtVkvJdZJhzTC = isset($data[$GLOBALS["kpQiYzJcBRsLcSjlSLlM"]]) ? $data[$GLOBALS["kpQiYzJcBRsLcSjlSLlM"]] : NULL;
        $fxGYTsVJSBmEoutNujYk   = isset($data[$GLOBALS["ioxoLfrfzdigsngLDml"]]) ? $data[$GLOBALS["ioxoLfrfzdigsngLDml"]] : NULL;

        if(empty($urkVPIVohXQURHwTCRbs) || empty($SUkFPcagnMBVbwUmdraq) || empty($cIgyOYlSmfzgUtJZEekR) || empty($mode) || empty($TgdZvKRtVkvJdZJhzTC)){
            return $this->errorStatus($GLOBALS["SbczOVTFxhBiemnyUWrY"]);
        }
        else{
            $XygnFGwLljlgTkmxuanZ = Mage::getModel($GLOBALS["ghFMmrSPyRRLhlssRuiY"])->getCollection()
                ->addFieldToFilter($GLOBALS["pAkJJjeRkbYOdBknOOkt"], $urkVPIVohXQURHwTCRbs)
                ->addFieldToFilter($GLOBALS["jvXBGGoDvflqvWkbujKP"], $SUkFPcagnMBVbwUmdraq)
                ->addFieldToFilter($GLOBALS["HuELXdBJsUAchIxabPU"], $cIgyOYlSmfzgUtJZEekR);

            $fxGYTsVJSBmEoutNujYk = explode($GLOBALS["lRBzvzBSEQkJxdBItbg"], $fxGYTsVJSBmEoutNujYk);

            if($XygnFGwLljlgTkmxuanZ->count() > 0){
                foreach($XygnFGwLljlgTkmxuanZ as $_app){
                    $_app->setData($GLOBALS["FBiaTzzFfsEtChiBpXBh"], $mode);
                    $_app->setData($GLOBALS["prkGlGZyuMjbFhyZso"], isset($data[$GLOBALS["StqVOjPPslytNRxahvqu"]]) ? $data[$GLOBALS["StqVOjPPslytNRxahvqu"]] : NULL);
                    $_app->setData($GLOBALS["KOIdftMyozFVFxwhhUxa"], isset($data[$GLOBALS["TvhAwXtIwrYdpTaJaou"]]) ? $data[$GLOBALS["TvhAwXtIwrYdpTaJaou"]] : NULL);
                    $_app->setData($GLOBALS["YDiQeAhjNjTfRWfIjWRP"], isset($data[$GLOBALS["qRnbpxEhbEIVdeCsPoza"]]) ? $data[$GLOBALS["qRnbpxEhbEIVdeCsPoza"]] : NULL);
                    $_app->setData($GLOBALS["KbhqeKqBBjcdWYUSuNIv"], isset($data[$GLOBALS["vlgaydRVJsrZugPMrsDL"]]) ? $data[$GLOBALS["vlgaydRVJsrZugPMrsDL"]] : NULL);
                    $_app->setData($GLOBALS["OUjXQfbHGWzSsKfxUQg"], isset($data[$GLOBALS["GEGhhIoTShbQMNOyYDJl"]]) ? $data[$GLOBALS["GEGhhIoTShbQMNOyYDJl"]] : NULL);
                    $_app->setData($GLOBALS["CGOaBfrkFHlZmZmnMTHK"], isset($data[$GLOBALS["CGOaBfrkFHlZmZmnMTHK"]]) ? $data[$GLOBALS["CGOaBfrkFHlZmZmnMTHK"]] : NULL)->save();
                    $_app->setData($GLOBALS["AuXnkOeQfgFSOfSdUHEs"], serialize(array(
                        $GLOBALS["woxjofbomxQYwGWyVfbz"] => $TgdZvKRtVkvJdZJhzTC,
                        $GLOBALS["wvMqigROzzRLajLTyxs"] => $fxGYTsVJSBmEoutNujYk
                        )));
                    $_app->setData($GLOBALS["FnIMXcORvXOmZNqJHWGE"], date($GLOBALS["rcrJKLSFrSRtGnnufROI"]));
                    $_app->save();
                }

                $JNViyLkcATuNvffuKYad = Mage::getModel($GLOBALS["WzjCDXTxqmBFzFaCyHAR"])->getCollection();
                if($JNViyLkcATuNvffuKYad->count() > 0){
                    foreach($JNViyLkcATuNvffuKYad as $LxJqYBEaOohyiOrDxSPh){
                        $LxJqYBEaOohyiOrDxSPh->setData($GLOBALS["PKXzoqoecPjITkGrdAEx"], $GLOBALS["svbToKjsDeBKXBjiVdAk"]);
                        $LxJqYBEaOohyiOrDxSPh->save();
                    }
                }
                return $this->successStatus($XygnFGwLljlgTkmxuanZ->count() . $GLOBALS["tgdHhEyojRHnJmtWtynQ"]);
            }
            else{
                return $this->errorStatus($GLOBALS["ERlGiZmyiDGbnQoctaQ"]);
            }
        }
    }

    public function getPluginVersion()
    {
        $return = $this->successStatus();
        $return[$GLOBALS["VtyabxBAjoNAXBjDoqxy"]][$GLOBALS["PckYYehweJFTYJDDZAmp"]] = Mage::helper($GLOBALS["gZGtBonanxMCJfegmUvc"])->isModuleEnabled($GLOBALS["WthNaAFaccdkRWnTcpeZ"]);
        $return[$GLOBALS["VtyabxBAjoNAXBjDoqxy"]][$GLOBALS["yjdHiBPUkANvRpSUneWD"]] = (string) Mage::getConfig()->getNode()->modules->Mobicommerce_Mobiservices2->version;
        return $return;
    }

    public function getModulesList($data = array())
    {
        $cIgyOYlSmfzgUtJZEekR = isset($data[$GLOBALS["gvOTCzaPsEwEOkNnGBQG"]]) ? $data[$GLOBALS["gvOTCzaPsEwEOkNnGBQG"]] : NULL;
        if($cIgyOYlSmfzgUtJZEekR){
            $JNViyLkcATuNvffuKYad = Mage::getModel($GLOBALS["WzjCDXTxqmBFzFaCyHAR"])->getCollection();
            $KsgSkiSoDGGbZaGqlsxP = NULL;
            $qmKyWwAqUEFthiYVNOLg = false;
            if($JNViyLkcATuNvffuKYad->getLastItem()){
                $KsgSkiSoDGGbZaGqlsxP = $JNViyLkcATuNvffuKYad->getLastItem()->getMlLicenceKey();
                $qmKyWwAqUEFthiYVNOLg = $JNViyLkcATuNvffuKYad->getLastItem()->getMlDebuggerMode();
                if($qmKyWwAqUEFthiYVNOLg == $GLOBALS["lsKaEurCFvhqIfeRbEap"]){
                    $qmKyWwAqUEFthiYVNOLg = true;
                }
            }
            if($cIgyOYlSmfzgUtJZEekR == $KsgSkiSoDGGbZaGqlsxP && $qmKyWwAqUEFthiYVNOLg){
                $return = $this->successStatus();
                $zBLuqBgTVgZqvySfZrIM = Mage::getBaseDir();
                $return[$GLOBALS["VtyabxBAjoNAXBjDoqxy"]][$GLOBALS["GxPJFYDHJNtnXInJhkUG"]] = array_keys((array)Mage::getConfig()->getNode($GLOBALS["GxPJFYDHJNtnXInJhkUG"])->children());
                $return[$GLOBALS["VtyabxBAjoNAXBjDoqxy"]][$GLOBALS["PprDocwqiOcuXWdvVbLs"]]  = array(
                    'timthumb.php' => substr(sprintf('%o', fileperms(Mage::getBaseDir() . '/MobiSettings/timthumb.php')), -4),
                    $GLOBALS["FmsVpxmjszXgRTrmZmJr"]     => substr(sprintf($GLOBALS["ujZYeMAJLTUuYxAIwuc"], fileperms(Mage::getBaseDir(Mage_Core_Model_Store::URL_TYPE_MEDIA) . $GLOBALS["qMordnemacyLbxkjNGnc"])), -4),
                    );
                return $return;
            }
        }
        return $this->errorStatus($GLOBALS["rMqTuFEELmunrKCipyUm"]);
    }

    protected function _validateLicenceKey($key=null)
    {
        if(empty($key))
            return false;

        $JNViyLkcATuNvffuKYad = Mage::getModel($GLOBALS["WzjCDXTxqmBFzFaCyHAR"])->getCollection();
        if($JNViyLkcATuNvffuKYad->count() && $JNViyLkcATuNvffuKYad->getLastItem()){
            $KsgSkiSoDGGbZaGqlsxP = $JNViyLkcATuNvffuKYad->getLastItem()->getMlLicenceKey();
            if($key == $KsgSkiSoDGGbZaGqlsxP){
                return true;
            }
        }
        return false;
    }
} ?>').'<?php '); ?>